{"version":3,"sources":["node_modules/two.js/build/two.module.js","node_modules/object-assign/index.js","node_modules/react/cjs/react.production.min.js","node_modules/react/index.js","node_modules/react-dom/cjs/react-dom-server.browser.production.min.js","node_modules/react-dom/server.browser.js","node_modules/morphdom/dist/morphdom-esm.js","src/render.tsx","node_modules/matter-js/build/matter.js","src/physics.ts","src/process.ts","src/utils.ts","index.tsx"],"names":["Two","root","Commands","move","line","curve","arc","close","window","global","self","Matrix$1","root$1","TWO_PI","Math","PI","HALF_PI","decomposeMatrix","matrix","b","c","d","e","f","a","arguments","length","translateX","translateY","scaleX","sqrt","scaleY","rotation","atan2","setMatrix","M","getComputedMatrix","object","identity","parent","matrices","_matrix","push","reverse","i","m","elements","multiply","lerp","t","pots","getPoT","value","mod","v","l","NumArray","Float32Array","Array","floor$2","floor","toFixed","math","Object","freeze","__proto__","slice","prototype","isArrayLike","collection","_","isNaN","obj","isElement","nodeType","isObject","type","extend","base","sources","call","k","defaults","each","iteratee","context","ctx","keys","performance","now","Date","Events","on","addEventListener","off","removeEventListener","trigger","name","_events","args","events","scope","dispatch","listen","handler","bound","event","apply","ignore","Types","play","pause","update","render","resize","change","remove","insert","order","load","names","list","j","ev","method","Vector","x","y","bind","unbind","zero","add","v1","v2","sub","subtract","ratioBetween","angleBetween","dx","dy","distanceBetween","distanceBetweenSquared","MakeObservable","_bound","_x","_y","defineProperty","xgs","ygs","BoundProto","constructor","set","copy","clear","clone","addSelf","subSelf","subtractSelf","multiplySelf","multiplyScalar","s","divide","divideSelf","divideScalar","negate","dot","lengthSquared","normalize","distanceTo","distanceToSquared","setLength","equals","eps","isZero","toString","toObject","rotate","Number","cos","sin","enumerable","get","Anchor","lx","ly","rx","ry","command","_broadcast","_command","_relative","ilx","ily","irx","iry","AppendCurveProperties","controls","left","right","anchor","relative","AnchorProto","xAxisRotation","largeArcFlag","sweepFlag","o","join","count","Constants","nextFrameID","webgl","svg","canvas","Version","PublishDate","Identifier","Resolution","AutoCalculateImportedMatrices","Instances","uniqueId","Curve","CollinearityEpsilon","pow","RecursionLimit","CuspLimit","Tolerance","distance","angle","epsilon","EPSILON","abscissas","weights","getComponentOnCubicBezier","subdivide","x1","y1","x2","y2","x3","y3","x4","y4","limit","amount","abs","result","getCurveLength$1","ax","bx","cx","ay","by","cy","integrate","getCurveBoundingBox","tvalues","t1","t2","b2ac","sqrtb2ac","bounds","mt","jlen","min","max","n","w","A","B","sum","Ax","getCurveFromPoints","points","closed","last","point","prev","next","getControlPoints","a1","a2","d1","d2","mid","getReflection","getAnchorsFromArcData","center","ts","td","ccw","resolution","pct","theta","Curves","getCurveLength","devicePixelRatio","getBackingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","getRatio","cos$5","sin$5","tan","array","Matrix","isArray","Shape","renderer","_renderer","flagMatrix","FlagMatrix","isShape","id","classList","translation","scale","skewX","skewY","Collection","Children","children","ids","attach","detach","Identity","Multiply","C","z","A0","A1","A2","A3","A4","A5","A6","A7","A8","B0","B1","B2","B3","B4","B5","B6","B7","B8","manual","g","h","inverse","out","a00","a01","a02","a10","a11","a12","a20","a21","a22","b01","b11","b21","det","sx","sy","translate","fullMatrix","toTransformArray","map","output","hasOutput","toArray","_flagMatrix","_translation","_rotation","_scale","_flagScale","_skewX","_skewY","_id","_flagId","_className","_flagClassName","split","dest","className","index","indexOf","splice","concat","addTo","group","_update","bubbles","flagReset","pop","popped","shift","shifted","pushed","unshift","unshifted","spliced","inserted","sort","child","min$3","max$3","Group","additions","subtractions","replaceParent","newParent","_flagAdditions","_flagSubtractions","InsertChildren","RemoveChildren","OrderChildren","_flagOrder","Properties","properties","_visible","_flagVisible","_opacity","_flagOpacity","_beginning","_flagBeginning","_ending","_flagEnding","_flagLength","_length","MakeGetterSetters","_children","insertChildren","removeChildren","orderChildren","_mask","clip","_flagMask","MakeGetterSetter","key","secret","_fill","_stroke","_linewidth","_cap","_join","_miter","_closed","_curved","_automatic","opacity","mask","corner","rect","getBoundingClientRect","top","width","height","getById","found","search","node","getByClassName","getByType","objects","grandparent","shallow","tc","lc","rc","bc","Infinity","bottom","regex","visible","test","isFinite","noFill","forEach","noStroke","beginning","ending","bd","ed","matrix$1","emptyArray","max$2","min$2","sin$4","cos$4","acos","isDefaultMatrix","isHidden","alignments","middle","shim","elem","tagName","nodeName","getAttribute","prop","setAttribute","val","renderChild","defaultMatrix","shouldIsolate","save","transform","restore","path","forced","parentClipped","stroke","linewidth","fill","cap","miter","commands","ux","uy","vx","vy","ar","bl","br","cl","isOffset","dashes","po","_clip","vertices","fillStyle","effect","strokeStyle","lineWidth","miterLimit","lineJoin","lineCap","globalAlpha","lineDashOffset","offset","setLineDash","beginPath","closePath","renderSvgArcCommand","bezierCurveTo","lineTo","moveTo","me","size","_size","radius","_sizeAttenuation","text","decoration","_decoration","alignment","_alignment","baseline","_baseline","font","_style","_weight","_leading","_family","textAlign","textBaseline","fillText","strokeText","metrics","measureText","scalar","actualBoundingBoxAscent","_flagEndPoints","_flagStops","createLinearGradient","stops","stop","addColorStop","_offset","_color","_flagCenter","_flagFocal","_flagRadius","createRadialGradient","focal","_radius","texture","image","_flagLoaded","_flagImage","_flagVideo","_flagRepeat","loaded","createPattern","_repeat","_flagOffset","dx2","dy2","x1p","y1p","rxs","rys","x1ps","y1ps","cr","dq","q","cxp","cyp","startAngle","svgAngle","renderArcEstimate","Renderer$2","params","smoothing","domElement","document","createElement","getContext","overdraw","imageSmoothingEnabled","scene","ox","oy","endAngle","clockwise","deltaAngle","samePoints","tx","ty","len","ang","Utils","setSize","ratio","style","isOne","clearRect","CanvasShim","Image","isHeadless","dom","hasEventListeners","func","bool","attachEvent","removeEventListeners","detachEvent","getRequestAnimationFrame","lastTime","cancel","vendors","request","requestAnimationFrame","callback","element","currTime","getTime","timeToCall","setTimeout","temp","TwoError","message","head","contains","display","appendChild","Error","defineGetterSetter","property","flag","charAt","toUpperCase","Registry","Stop","color","Index","Gradient","flagStops","FlagStops","bindStops","BindStops","unbindStops","UnbindStops","spread","LinearGradient","flagEndPoints","FlagEndPoints","RadialGradient","r","fx","fy","_flagColor","_stops","items","_flagSpread","_flatCenter","regex$1","video","Texture","src","flagOffset","FlagOffset","flagScale","FlagScale","repeat","elemString","RegularExpressions","ImageRegistry","getAbsoluteURL","href","loadHeadlessBuffer","onload","getTag","toLowerCase","getImage","absoluteSrc","console","warn","crossOrigin","Register","_src","img","error","videoWidth","videoHeight","readyState","tag","_flagSrc","_image","_loaded","origin","min$1","max$1","ceil$1","ceil","floor$1","Path","curved","flagVertices","FlagVertices","bindVertices","BindVertices","unbindVertices","UnbindVertices","flagFill","FlagFill","flagStroke","FlagStroke","automatic","target","elapsed","_lengths","dist","getIdByLength","total","getSubdivisions","Rectangle","Sprite","cols","rows","frameRate","columns","_flagVertices","_flagFill","_flagStroke","_updateLength","_collection","_flagClip","_dashes","_flagLinewidth","_flagCap","_flagJoin","_flagMiter","undefined","hw","hh","border","v0","c0x","c0y","c1x","c1y","bb","getPointAt","ia","ib","t1x","t1y","t2x","t2y","t3x","t3y","brx","bry","alx","aly","plot","verts","silent","bid","eid","low","high","_origin","_flagWidth","_flagHeight","_width","_height","xr","yr","_flagTexture","_flagColumns","_flagRows","_flagFrameRate","flagIndex","_amount","_duration","_startTime","_playing","_firstFrame","_lastFrame","_loop","_texture","_columns","_rows","_frameRate","_index","firstFrame","lastFrame","onLastFrame","_onLastFrame","playing","duration","iw","ih","frames","col","cos$3","sin$3","Circle","cos$2","sin$2","Ellipse","Line","RoundedRectangle","flagRadius","FlagRadius","radiusX","radiusY","Text","styles","Ratio","_flagValue","_flagFamily","_flagSize","_flagLeading","_flagAlignment","_flagBaseline","_flagStyle","_flagWeight","_flagDecoration","_value","leading","unitSuffix","start","end","getAlignment","getBaseline","getTagName","replace","applyTransformsToVector","transforms","vector","extractCSSText","getSvgStyles","attributes","getSvgAttributes","attribute","getAttributeNames","keywords","keyword","applySvgViewBox","parseFloat","xExists","yExists","widthExists","heightExists","applySvgAttributes","parentStyles","attr","ref","extracted","getComputedStyle","computedStyles","visibility","gradientTransform","baseVal","getCTM","read","defs","current","childNodes","position","getScene","ca","match","endsWith","family","weight","updateDefsCache","defsCache","getElementsByTagName","viewBox","viewBoxExists","use","template","fullNode","cloneNode","overwriteAttrs","includes","cb","hasAttribute","polygon","p1","p2","poly","polyline","coord","control","coords","bin","ct","times","trim","lower","reflection","centroid","circle","ellipse","w2","h2","lineargradient","matches","gradient","radialgradient","textContent","clippath","sprite","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","send","ImageSequence","paths","flagTextures","FlagTextures","bindTextures","BindTextures","unbindTextures","UnbindTextures","textures","GenerateTexture","DefaultFrameRate","ArcSegment","ir","or","sa","ea","res","innerRadius","outerRadius","_flagTextures","_textures","_flagIndex","effects","_flagStartAngle","_flagEndAngle","_flagInnerRadius","_flagOuterRadius","_startAngle","_endAngle","_innerRadius","_outerRadius","connected","punctured","step","amp","Points","sizeAttenuation","_flagSizeAttenuation","subdivisions","cos$1","sin$1","Polygon","sides","_flagSides","_sides","Star","version","ns","xlink","attrs","createElementNS","setAttributes","setAttributeNS","removeAttributes","removeAttribute","string","pointsToString","getClip","shape","removeChild","parentNode","orderChild","changed","spreadMethod","_spread","gradientUnits","lengthChanged","lastChild","toDataURL","patternUnits","appended","Renderer$1","overflow","shaders","create","gl","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","types","vertex","fragment","multiplyMatrix","transformation","CanvasUtils","quad","precision","deleteTexture","positionBuffer","deleteBuffer","programs","flagParentMatrix","STENCIL_BUFFER_BIT","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","colorMask","EQUAL","disable","updateCanvas","forcedParent","program","parentChanged","flagTexture","updateTexture","useProgram","bindBuffer","ARRAY_BUFFER","buffers","vertexAttribPointer","FLOAT","enableVertexAttribArray","bufferData","STATIC_DRAW","flagged","uniform2f","getUniformLocation","bindTexture","TEXTURE_2D","uniformMatrix3fv","uniform4f","drawArrays","TRIANGLES","dimension","aspect","createBuffer","uniform1f","POINTS","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","texImage2D","RGBA","UNSIGNED_BYTE","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","TextureRegistry","Renderer","vs","fs","offscreenElement","antialias","alpha","premultipliedAlpha","stencil","preserveDrawingBuffer","getAttribLocation","BLEND","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","blendEquation","FUNC_ADD","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","options","fullscreen","fitted","autostart","setPlaying","frameCount","fit","fitToWindow","attached","body","margin","padding","fitToParent","updateDimensions","raf","init","wr","parentElement","viewport","COLOR_BUFFER_BIT","timeDelta","appendTo","p","release","animated","makeLine","makeArrow","headlen","makeRectangle","makeRoundedRectangle","makeCircle","makeEllipse","makeStar","star","makeCurve","makePolygon","makeArcSegment","arcSegment","makePoints","makePath","makeText","makeLinearGradient","makeRadialGradient","makeSprite","makeImageSequence","imageSequence","makeTexture","makeGroup","interpret","SVGElement","data","innerHTML","loop","CanvasRenderer","SVGRenderer","WebGLRenderer","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","test3","letter","err","module","exports","from","symbols","to","require","Symbol","for","u","iterator","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","F","props","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","L","__self","__source","defaultProps","$$typeof","_owner","N","O","escape","P","Q","R","keyPrefix","S","T","U","done","V","W","aa","X","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","morphdom","range","DOCUMENT_FRAGMENT_NODE","morphAttrs","fromNode","toNode","toNodeAttrs","attrName","attrNamespaceURI","attrValue","namespaceURI","localName","getAttributeNS","prefix","fromNodeAttrs","hasAttributeNS","removeAttributeNS","NS_XHTML","doc","HAS_TEMPLATE_SUPPORT","HAS_RANGE_SUPPORT","createRange","createFragmentFromTemplate","str","content","createFragmentFromRange","selectNode","createContextualFragment","createFragmentFromWrap","toElement","compareNodeNames","fromEl","toEl","fromNodeName","fromCodeStart","toCodeStart","toNodeName","charCodeAt","moveChildren","curChild","firstChild","nextChild","nextSibling","syncBooleanAttrProp","specialElHandlers","OPTION","parentName","selected","selectedIndex","INPUT","TEXTAREA","newValue","oldValue","nodeValue","placeholder","SELECT","optgroup","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE$1","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdomFactory","toNodeHtml","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","keyedRemovalList","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","el","unmatchedFromEl","replaceChild","morphEl","toElKey","morphChildren","curToNodeChild","curToNodeKey","curFromNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curFromNodeChild","outer","isSameNode","curFromNodeType","isCompatible","insertBefore","onBeforeNodeAddedResult","actualize","ownerDocument","cleanupFromEl","specialElHandler","indexTree","morphedNode","morphedNodeType","toNodeType","elToRemove"],"mappings":"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","file":"clear-pipes.b3d7541c.js","sourceRoot":"..","sourcesContent":["/*\nMIT License\n\nCopyright (c) 2012 - 2021 jonobr1 / http://jonobr1.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n/**\n * @name Two.Commands\n * @property {Object} - Map of possible path commands. Taken from the SVG specification.\n */\nvar Commands = {\n  move: 'M',\n  line: 'L',\n  curve: 'C',\n  arc: 'A',\n  close: 'Z'\n};\n\nvar root;\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof self !== 'undefined') {\n  root = self;\n}\n\nvar root$1 = root;\n\nvar Matrix$1;\nvar TWO_PI = Math.PI * 2;\nvar HALF_PI = Math.PI * 0.5;\n\n/**\n * @name Two.Utils.decomposeMatrix\n * @function\n * @param {Two.Matrix} matrix - The matrix to decompose.\n * @returns {Object} An object containing relevant skew values.\n * @description Decompose a 2D 3x3 Matrix to find the skew.\n */\nvar decomposeMatrix = function(matrix, b, c, d, e, f) {\n\n  // TODO: Include skewX, skewY\n  // https://math.stackexchange.com/questions/237369/given-this-transformation-matrix-how-do-i-decompose-it-into-translation-rotati/417813\n  // https://stackoverflow.com/questions/45159314/decompose-2d-transformation-matrix\n\n  var a;\n\n  if (arguments.length <= 1) {\n    a = matrix.a;\n    b = matrix.b;\n    c = matrix.c;\n    d = matrix.d;\n    e = matrix.e;\n    f = matrix.f;\n  } else {\n    a = matrix;\n  }\n\n  return {\n    translateX: e,\n    translateY: f,\n    scaleX: Math.sqrt(a * a + b * b),\n    scaleY: Math.sqrt(c * c + d * d),\n    rotation: 180 * Math.atan2(b, a) / Math.PI\n  };\n\n};\n\nvar setMatrix = function(M) {\n  Matrix$1 = M;\n};\n\n/**\n * @name Two.Utils.getComputedMatrix\n * @function\n * @param {Two.Shape} object - The Two.js object that has a matrix property to calculate from.\n * @param {Two.Matrix} [matrix] - The matrix to apply calculated transformations to if available.\n * @returns {Two.Matrix} The computed matrix of a nested object. If no `matrix` was passed in arguments then a `new Two.Matrix` is returned.\n * @description Method to get the world space transformation of a given object in a Two.js scene.\n */\nvar getComputedMatrix = function(object, matrix) {\n\n  matrix = (matrix && matrix.identity()) || new Matrix$1();\n  var parent = object, matrices = [];\n\n  while (parent && parent._matrix) {\n    matrices.push(parent._matrix);\n    parent = parent.parent;\n  }\n\n  matrices.reverse();\n\n  for (var i = 0; i < matrices.length; i++) {\n\n    var m = matrices[i];\n    var e = m.elements;\n    matrix.multiply(\n      e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9]);\n\n  }\n\n  return matrix;\n\n};\n\n/**\n * @name Two.Utils.lerp\n * @function\n * @param {Number} a - Start value.\n * @param {Number} b - End value.\n * @param {Number} t - Zero-to-one value describing percentage between a and b.\n * @returns {Number}\n * @description Linear interpolation between two values `a` and `b` by an amount `t`.\n */\nvar lerp = function(a, b, t) {\n  return t * (b - a) + a;\n};\n\n/**\n * @name Two.Utils.getPoT\n * @param {Number} value - The number to find the nearest power-of-two value\n * @returns {Number}\n * @description Rounds a number up to the nearest power-of-two value.\n * @see {@link https://en.wikipedia.org/wiki/Power_of_two}\n */\nvar pots = [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096];\nvar getPoT = function(value) {\n  var i = 0;\n  while (pots[i] && pots[i] < value) {\n    i++;\n  }\n  return pots[i];\n};\n\n/**\n * @name Two.Utils.mod\n * @function\n * @param {Number} v - The value to modulo\n * @param {Number} l - The value to modulo by\n * @returns {Number}\n * @description Modulo with added functionality to handle negative values in a positive manner.\n */\nvar mod = function(v, l) {\n\n  while (v < 0) {\n    v += l;\n  }\n\n  return v % l;\n\n};\n\nvar NumArray = root$1.Float32Array || Array;\nvar floor$2 = Math.floor;\n\n/**\n* @name Two.Utils.toFixed\n* @function\n* @param {Number} v - Any float\n* @returns {Number} That float trimmed to the third decimal place.\n* @description A pretty fast toFixed(3) alternative.\n* @see {@link http://jsperf.com/parsefloat-tofixed-vs-math-round/18}\n*/\nvar toFixed = function(v) {\n  return floor$2(v * 1000000) / 1000000;\n};\n\nvar math = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  decomposeMatrix: decomposeMatrix,\n  getComputedMatrix: getComputedMatrix,\n  getPoT: getPoT,\n  setMatrix: setMatrix,\n  lerp: lerp,\n  mod: mod,\n  NumArray: NumArray,\n  toFixed: toFixed,\n  TWO_PI: TWO_PI,\n  HALF_PI: HALF_PI\n});\n\nvar slice = Array.prototype.slice;\n\nvar isArrayLike = function(collection) {\n  if (collection === null || collection === undefined) return false;\n  var length = collection.length;\n  // Arrays cannot hold more than 2^32 - 1 items\n  return (typeof length == 'number' && length >= 0 && length < 4294967296);\n};\n\nvar _ = {\n  isNaN: function(obj) {\n    return typeof obj === 'number' && obj !== +obj;\n  },\n  isElement: function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  },\n  isObject: function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  },\n  extend: function(base) {\n    var sources = slice.call(arguments, 1);\n    for (var i = 0; i < sources.length; i++) {\n      var obj = sources[i];\n      for (var k in obj) {\n        base[k] = obj[k];\n      }\n    }\n    return base;\n  },\n  defaults: function(base) {\n    var sources = slice.call(arguments, 1);\n    for (var i = 0; i < sources.length; i++) {\n      var obj = sources[i];\n      for (var k in obj) {\n        if (base[k] === void 0) {\n        base[k] = obj[k];\n        }\n      }\n    }\n    return base;\n  },\n  each: function(obj, iteratee, context) {\n    var ctx = context || this;\n    var keys = !isArrayLike(obj) && Object.keys(obj);\n    var length = (keys || obj).length;\n    for (var i = 0; i < length; i++) {\n      var k = keys ? keys[i] : i;\n      iteratee.call(ctx, obj[k], k, obj);\n    }\n    return obj;\n  },\n  /**\n   * @name Two.Utils.performance\n   * @property {Date} - A special `Date` like object to get the current millis of the session. Used internally to calculate time between frames.\n   * e.g: `Utils.performance.now() // milliseconds since epoch`\n   */\n  performance: ((root$1.performance && root$1.performance.now) ? root$1.performance : Date),\n};\n\n/**\n * @name Two.Events\n * @class\n * @description Object inherited by many Two.js objects in order to facilitate custom events.\n */\nvar Events = {\n\n  /**\n   * @name Two.Events#on\n   * @function\n   * @param {String} [name] - The name of the event to bind a function to.\n   * @param {Function} [handler] - The function to be invoked when the event is dispatched.\n   * @description Call to add a listener to a specific event name.\n   */\n  on: addEventListener,\n\n  /**\n   * @name Two.Events#off\n   * @function\n   * @param {String} [name] - The name of the event intended to be removed.\n   * @param {Function} [handler] - The handler intended to be reomved.\n   * @description Call to remove listeners from a specific event. If only `name` is passed then all the handlers attached to that `name` will be removed. If no arguments are passed then all handlers for every event on the obejct are removed.\n   */\n  off: removeEventListener,\n\n  /**\n   * @name Two.Events#trigger\n   * @function\n   * @param {String} name - The name of the event to dispatch.\n   * @param arguments - Anything can be passed after the name and those will be passed on to handlers attached to the event in the order they are passed.\n   * @description Call to trigger a custom event. Any additional arguments passed after the name will be passed along to the attached handlers.\n   */\n  trigger: function(name) {\n    var scope = this;\n    if (!scope._events) return scope;\n    var args = Array.prototype.slice.call(arguments, 1);\n    var events = scope._events[name];\n    if (events) dispatch(scope, events, args);\n    return scope;\n  },\n\n  listen: function(obj, name, handler) {\n\n    var bound = this;\n\n    if (obj) {\n\n      var event = function () {\n        handler.apply(bound, arguments);\n      };\n\n      // Add references about the object that assigned this listener\n      event.obj = obj;\n      event.name = name;\n      event.handler = handler;\n\n      obj.on(name, event);\n\n    }\n\n    return bound;\n\n  },\n\n  ignore: function(obj, name, handler) {\n\n    var scope = this;\n    obj.off(name, handler);\n    return scope;\n\n  },\n\n  /**\n   * @name Two.Events.Types\n   * @property {Object} - Object of different types of Two.js specific events.\n   */\n  Types: {\n    play: 'play',\n    pause: 'pause',\n    update: 'update',\n    render: 'render',\n    resize: 'resize',\n    change: 'change',\n    remove: 'remove',\n    insert: 'insert',\n    order: 'order',\n    load: 'load'\n  }\n\n};\n\n\n/**\n * @name Two.Events.bind\n * @function\n * @description Alias for {@link Two.Events.on}.\n */\nEvents.bind = addEventListener;\n\n/**\n * @name Two.Events.unbind\n * @function\n * @description Alias for {@link Two.Events.off}.\n */\nEvents.unbind = removeEventListener;\n\n/**\n * @private\n * @returns {Two.Events} - Returns an instance of self for the purpose of chaining.\n */\nfunction addEventListener(name, handler) {\n\n  var scope = this;\n\n  scope._events || (scope._events = {});\n  var list = scope._events[name] || (scope._events[name] = []);\n\n  list.push(handler);\n\n  return scope;\n\n}\n\n/**\n * @private\n * @returns {Two.Events} - Returns an instance of self for the purpose of chaining.\n */\nfunction removeEventListener(name, handler) {\n\n  var scope = this;\n\n  if (!scope._events) {\n    return scope;\n  }\n  if (!name && !handler) {\n    scope._events = {};\n    return scope;\n  }\n\n  var names = name ? [name] : Object.keys(scope._events);\n  for (var i = 0, l = names.length; i < l; i++) {\n\n    name = names[i];\n    var list = scope._events[name];\n\n    if (list) {\n      var events = [];\n      if (handler) {\n        for (var j = 0, k = list.length; j < k; j++) {\n          var ev = list[j];\n          ev = ev.handler ? ev.handler : ev;\n          if (handler && handler !== ev) {\n            events.push(ev);\n          }\n        }\n      }\n      scope._events[name] = events;\n    }\n  }\n\n  return scope;\n}\n\nfunction dispatch(obj, events, args) {\n  var method;\n  switch (args.length) {\n  case 0:\n    method = function(i) {\n      events[i].call(obj, args[0]);\n    };\n    break;\n  case 1:\n    method = function(i) {\n      events[i].call(obj, args[0], args[1]);\n    };\n    break;\n  case 2:\n    method = function(i) {\n      events[i].call(obj, args[0], args[1], args[2]);\n    };\n    break;\n  case 3:\n    method = function(i) {\n      events[i].call(obj, args[0], args[1], args[2], args[3]);\n    };\n    break;\n  default:\n    method = function(i) {\n      events[i].apply(obj, args);\n    };\n  }\n  for (var i = 0; i < events.length; i++) {\n    method(i);\n  }\n}\n\n/**\n * @name Two.Vector\n * @class\n * @param {Number} [x=0] - Any number to represent the horizontal x-component of the vector.\n * @param {Number} [y=0] - Any number to represent the vertical y-component of the vector.\n * @description A class to store x / y component vector data. In addition to storing data `Two.Vector` has suped up methods for commonplace mathematical operations.\n */\nfunction Vector(x, y) {\n\n  /**\n   * @name Two.Vector#x\n   * @property {Number} - The horizontal x-component of the vector.\n   */\n  this.x = x || 0;\n\n  /**\n   * @name Two.Vector#y\n   * @property {Number} - The vertical y-component of the vector.\n   */\n  this.y = y || 0;\n\n}\n\n_.extend(Vector, {\n\n  /**\n   * @name Two.Vector.zero\n   * @readonly\n   * @property {Two.Vector} - Handy reference to a vector with component values 0, 0 at all times.\n   */\n  zero: new Vector(),\n\n  /**\n   * @name Two.Vector.add\n   * @function\n   * @param {Two.Vector} v1\n   * @param {Two.Vector} v2\n   * @returns {Two.Vector}\n   * @description Add two vectors together.\n   */\n  add: function(v1, v2) {\n    return new Vector(v1.x + v2.x, v1.y + v2.y);\n  },\n\n  /**\n   * @name Two.Vector.sub\n   * @function\n   * @param {Two.Vector} v1\n   * @param {Two.Vector} v2\n   * @returns {Two.Vector}\n   * @description Subtract two vectors: `v2` from `v1`.\n   */\n  sub: function(v1, v2) {\n    return new Vector(v1.x - v2.x, v1.y - v2.y);\n  },\n\n  /**\n   * @name Two.Vector.subtract\n   * @function\n   * @description Alias for {@link Two.Vector.sub}.\n   */\n  subtract: function(v1, v2) {\n    return Vector.sub(v1, v2);\n  },\n\n  /**\n   * @name Two.Vector.ratioBetween\n   * @function\n   * @param {Two.Vector} A\n   * @param {Two.Vector} B\n   * @returns {Number} The ratio betwen two points `v1` and `v2`.\n   */\n  ratioBetween: function(v1, v2) {\n\n    return (v1.x * v2.x + v1.y * v2.y) / (v1.length() * v2.length());\n\n  },\n\n  /**\n   * @name Two.Vector.angleBetween\n   * @function\n   * @param {Two.Vector} v1\n   * @param {Two.Vector} v2\n   * @returns {Number} The angle between points `v1` and `v2`.\n   */\n  angleBetween: function(v1, v2) {\n\n    var dx, dy;\n\n    if (arguments.length >= 4) {\n\n      dx = arguments[0] - arguments[2];\n      dy = arguments[1] - arguments[3];\n\n      return Math.atan2(dy, dx);\n\n    }\n\n    dx = v1.x - v2.x;\n    dy = v1.y - v2.y;\n\n    return Math.atan2(dy, dx);\n\n  },\n\n  /**\n   * @name Two.Vector.distanceBetween\n   * @function\n   * @param {Two.Vector} v1\n   * @param {Two.Vector} v2\n   * @returns {Number} The distance between points `v1` and `v2`. Distance is always positive.\n   */\n  distanceBetween: function(v1, v2) {\n\n    return Math.sqrt(Vector.distanceBetweenSquared(v1, v2));\n\n  },\n\n  /**\n   * @name Two.Vector.distanceBetweenSquared\n   * @function\n   * @param {Two.Vector} v1\n   * @param {Two.Vector} v2\n   * @returns {Number} The squared distance between points `v1` and `v2`.\n   */\n  distanceBetweenSquared: function(v1, v2) {\n\n    var dx = v1.x - v2.x;\n    var dy = v1.y - v2.y;\n\n    return dx * dx + dy * dy;\n\n  },\n\n  /**\n   * @name Two.Vector.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Vector} to any object. Handy if you'd like to extend the {@link Two.Vector} class on a custom class.\n   */\n  MakeObservable: function(object) {\n\n    // /**\n    //  * Override Backbone bind / on in order to add properly broadcasting.\n    //  * This allows Two.Vector to not broadcast events unless event listeners\n    //  * are explicity bound to it.\n    //  */\n\n    object.bind = object.on = function() {\n\n      if (!this._bound) {\n        this._x = this.x;\n        this._y = this.y;\n        Object.defineProperty(this, 'x', xgs);\n        Object.defineProperty(this, 'y', ygs);\n        _.extend(this, BoundProto);\n        this._bound = true; // Reserved for event initialization check\n      }\n\n      Events.bind.apply(this, arguments);\n\n      return this;\n\n    };\n\n  }\n\n});\n\n_.extend(Vector.prototype, Events, {\n\n  constructor: Vector,\n\n  /**\n   * @name Two.Vector#set\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @description Set the x / y components of a vector to specific number values.\n   */\n  set: function(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n\n  /**\n   * @name Two.Vector#copy\n   * @function\n   * @param {Two.Vector} v\n   * @description Copy the x / y components of another object `v`.\n   */\n  copy: function(v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  },\n\n  /**\n   * @name Two.Vector#clear\n   * @function\n   * @description Set the x / y component values of the vector to zero.\n   */\n  clear: function() {\n    this.x = 0;\n    this.y = 0;\n    return this;\n  },\n\n  /**\n   * @name Two.Vector#clone\n   * @function\n   * @description Create a new vector and copy the existing values onto the newly created instance.\n   */\n  clone: function() {\n    return new Vector(this.x, this.y);\n  },\n\n  /**\n   * @name Two.Vector#add\n   * @function\n   * @param {Two.Vector} v\n   * @description Add an object with x / y component values to the instance.\n   * @overloaded\n   */\n\n  /**\n   * @name Two.Vector#add\n   * @function\n   * @param {Number} v\n   * @description Add the **same** number to both x / y component values of the instance.\n   * @overloaded\n   */\n\n  /**\n   * @name Two.Vector#add\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @description Add `x` / `y` values to their respective component value on the instance.\n   * @overloaded\n   */\n  add: function(x, y) {\n    if (arguments.length <= 0) {\n      return this;\n    } else if (arguments.length <= 1) {\n      if (typeof x === 'number') {\n        this.x += x;\n        this.y += x;\n      } else if (x && typeof x.x === 'number' && typeof x.y === 'number') {\n        this.x += x.x;\n        this.y += x.y;\n      }\n    } else {\n      this.x += x;\n      this.y += y;\n    }\n    return this;\n  },\n\n  /**\n   * @name Two.Vector#addSelf\n   * @function\n   * @description Alias for {@link Two.Vector.add}.\n   */\n  addSelf: function(v) {\n    return this.add.apply(this, arguments);\n  },\n\n  /**\n   * @name Two.Vector#sub\n   * @function\n   * @param {Two.Vector} v\n   * @description Subtract an object with x / y component values to the instance.\n   * @overloaded\n   */\n\n  /**\n   * @name Two.Vector#sub\n   * @function\n   * @param {Number} v\n   * @description Subtract the **same** number to both x / y component values of the instance.\n   * @overloaded\n   */\n\n  /**\n   * @name Two.Vector#sub\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @description Subtract `x` / `y` values to their respective component value on the instance.\n   * @overloaded\n   */\n  sub: function(x, y) {\n    if (arguments.length <= 0) {\n      return this;\n    } else if (arguments.length <= 1) {\n      if (typeof x === 'number') {\n        this.x -= x;\n        this.y -= x;\n      } else if (x && typeof x.x === 'number' && typeof x.y === 'number') {\n        this.x -= x.x;\n        this.y -= x.y;\n      }\n    } else {\n      this.x -= x;\n      this.y -= y;\n    }\n    return this;\n  },\n\n  /**\n   * @name Two.Vector#subtract\n   * @function\n   * @description Alias for {@link Two.Vector.sub}.\n   */\n  subtract: function() {\n    return this.sub.apply(this, arguments);\n  },\n\n  /**\n   * @name Two.Vector#subSelf\n   * @function\n   * @description Alias for {@link Two.Vector.sub}.\n   */\n  subSelf: function(v) {\n    return this.sub.apply(this, arguments);\n  },\n\n  /**\n   * @name Two.Vector#subtractSelf\n   * @function\n   * @description Alias for {@link Two.Vector.sub}.\n   */\n  subtractSelf: function(v) {\n    return this.sub.apply(this, arguments);\n  },\n\n  /**\n   * @name Two.Vector#multiply\n   * @function\n   * @param {Two.Vector} v\n   * @description Multiply an object with x / y component values to the instance.\n   * @overloaded\n   */\n\n  /**\n   * @name Two.Vector#multiply\n   * @function\n   * @param {Number} v\n   * @description Multiply the **same** number to both x / y component values of the instance.\n   * @overloaded\n   */\n\n  /**\n   * @name Two.Vector#multiply\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @description Multiply `x` / `y` values to their respective component value on the instance.\n   * @overloaded\n   */\n  multiply: function(x, y) {\n    if (arguments.length <= 0) {\n      return this;\n    } else if (arguments.length <= 1) {\n      if (typeof x === 'number') {\n        this.x *= x;\n        this.y *= x;\n      } else if (x && typeof x.x === 'number' && typeof x.y === 'number') {\n        this.x *= x.x;\n        this.y *= x.y;\n      }\n    } else {\n      this.x *= x;\n      this.y *= y;\n    }\n    return this;\n  },\n\n  /**\n   * @name Two.Vector#multiplySelf\n   * @function\n   * @description Alias for {@link Two.Vector.multiply}.\n   */\n  multiplySelf: function(v) {\n    return this.multiply.apply(this, arguments);\n  },\n\n  /**\n   * @name Two.Vector#multiplyScalar\n   * @function\n   * @param {Number} s - The scalar to multiply by.\n   * @description Mulitiply the vector by a single number. Shorthand to call {@link Two.Vector#multiply} directly.\n   */\n  multiplyScalar: function(s) {\n    return this.multiply(s);\n  },\n\n  /**\n   * @name Two.Vector#divide\n   * @function\n   * @param {Two.Vector} v\n   * @description Divide an object with x / y component values to the instance.\n   * @overloaded\n   */\n\n  /**\n   * @name Two.Vector#divide\n   * @function\n   * @param {Number} v\n   * @description Divide the **same** number to both x / y component values of the instance.\n   * @overloaded\n   */\n\n  /**\n   * @name Two.Vector#divide\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @description Divide `x` / `y` values to their respective component value on the instance.\n   * @overloaded\n   */\n  divide: function(x, y) {\n    if (arguments.length <= 0) {\n      return this;\n    } else if (arguments.length <= 1) {\n      if (typeof x === 'number') {\n        this.x /= x;\n        this.y /= x;\n      } else if (x && typeof x.x === 'number' && typeof x.y === 'number') {\n        this.x /= x.x;\n        this.y /= x.y;\n      }\n    } else {\n      this.x /= x;\n      this.y /= y;\n    }\n    if (_.isNaN(this.x)) {\n      this.x = 0;\n    }\n    if (_.isNaN(this.y)) {\n      this.y = 0;\n    }\n    return this;\n  },\n\n  /**\n   * @name Two.Vector#divideSelf\n   * @function\n   * @description Alias for {@link Two.Vector.divide}.\n   */\n  divideSelf: function(v) {\n    return this.divide.apply(this, arguments);\n  },\n\n  /**\n   * @name Two.Vector#divideScalar\n   * @function\n   * @param {Number} s - The scalar to divide by.\n   * @description Divide the vector by a single number. Shorthand to call {@link Two.Vector#divide} directly.\n   */\n  divideScalar: function(s) {\n    return this.divide(s);\n  },\n\n  /**\n   * @name Two.Vector#negate\n   * @function\n   * @description Invert each component's sign value.\n   */\n  negate: function() {\n    return this.multiply(-1);\n  },\n\n  /**\n   * @name Two.Vector#negate\n   * @function\n   * @returns {Number}\n   * @description Get the [dot product](https://en.wikipedia.org/wiki/Dot_product) of the vector.\n   */\n  dot: function(v) {\n    return this.x * v.x + this.y * v.y;\n  },\n\n  /**\n   * @name Two.Vector#length\n   * @function\n   * @returns {Number}\n   * @description Get the length of a vector.\n   */\n  length: function() {\n    return Math.sqrt(this.lengthSquared());\n  },\n\n  /**\n   * @name Two.Vector#lengthSquared\n   * @function\n   * @returns {Number}\n   * @description Get the length of the vector to the power of two. Widely used as less expensive than {@link Two.Vector#length}, because it isn't square-rooting any numbers.\n   */\n  lengthSquared: function() {\n    return this.x * this.x + this.y * this.y;\n  },\n\n  /**\n   * @name Two.Vector#normalize\n   * @function\n   * @description Normalize the vector from negative one to one.\n   */\n  normalize: function() {\n    return this.divideScalar(this.length());\n  },\n\n  /**\n   * @name Two.Vector#distanceTo\n   * @function\n   * @returns {Number}\n   * @description Get the distance between two vectors.\n   */\n  distanceTo: function(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n\n  /**\n   * @name Two.Vector#distanceToSquared\n   * @function\n   * @returns {Number}\n   * @description Get the distance between two vectors to the power of two. Widely used as less expensive than {@link Two.Vector#distanceTo}, because it isn't square-rooting any numbers.\n   */\n  distanceToSquared: function(v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  },\n\n  /**\n   * @name Two.Vector#setLength\n   * @function\n   * @param {Number} l - length to set vector to.\n   * @description Set the length of a vector.\n   */\n  setLength: function(l) {\n    return this.normalize().multiplyScalar(l);\n  },\n\n  /**\n   * @name Two.Vector#equals\n   * @function\n   * @param {Two.Vector} v - The vector to compare against.\n   * @param {Number} [eps=0.0001] - An options epsilon for precision.\n   * @returns {Boolean}\n   * @description Qualify if one vector roughly equal another. With a margin of error defined by epsilon.\n   */\n  equals: function(v, eps) {\n    eps = (typeof eps === 'undefined') ?  0.0001 : eps;\n    return (this.distanceTo(v) < eps);\n  },\n\n  /**\n   * @name Two.Vector#lerp\n   * @function\n   * @param {Two.Vector} v - The destination vector to step towards.\n   * @param {Number} t - The zero to one value of how close the current vector gets to the destination vector.\n   * @description Linear interpolate one vector to another by an amount `t` defined as a zero to one number.\n   * @see [Matt DesLauriers](https://twitter.com/mattdesl/status/1031305279227478016) has a good thread about this.\n   */\n  lerp: function(v, t) {\n    var x = (v.x - this.x) * t + this.x;\n    var y = (v.y - this.y) * t + this.y;\n    return this.set(x, y);\n  },\n\n  /**\n   * @name Two.Vector#isZero\n   * @function\n   * @param {Number} [eps=0.0001] - Optional precision amount to check against.\n   * @returns {Boolean}\n   * @description Check to see if vector is roughly zero, based on the `epsilon` precision value.\n   */\n  isZero: function(eps) {\n    eps = (typeof eps === 'undefined') ?  0.0001 : eps;\n    return (this.length() < eps);\n  },\n\n  /**\n   * @name Two.Vector#toString\n   * @function\n   * @returns {String}\n   * @description Return a comma-separated string of x, y value. Great for storing in a database.\n   */\n  toString: function() {\n    return this.x + ', ' + this.y;\n  },\n\n  /**\n   * @name Two.Vector#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the vector.\n   */\n  toObject: function() {\n    return { x: this.x, y: this.y };\n  },\n\n  /**\n   * @name Two.Vector#rotate\n   * @function\n   * @param {Number} Number - The amoun to rotate the vector by.\n   * @description Rotate a vector.\n   */\n  rotate: function(Number) {\n    var cos = Math.cos(Number);\n    var sin = Math.sin(Number);\n    this.x = this.x * cos - this.y * sin;\n    this.y = this.x * sin + this.y * cos;\n    return this;\n  }\n\n});\n\n// The same set of prototypical functions, but using the underlying\n// getter or setter for `x` and `y` values. This set of functions\n// is used instead of the previously documented ones above when\n// Two.Vector#bind is invoked and there is event dispatching processed\n// on x / y property changes.\nvar BoundProto = {\n\n  constructor: Vector,\n\n  set: function(x, y) {\n    this._x = x;\n    this._y = y;\n    return this.trigger(Events.Types.change);\n  },\n\n  copy: function(v) {\n    this._x = v.x;\n    this._y = v.y;\n    return this.trigger(Events.Types.change);\n  },\n\n  clear: function() {\n    this._x = 0;\n    this._y = 0;\n    return this.trigger(Events.Types.change);\n  },\n\n  clone: function() {\n    return new Vector(this._x, this._y);\n  },\n\n  add: function(x, y) {\n    if (arguments.length <= 0) {\n      return this;\n    } else if (arguments.length <= 1) {\n      if (typeof x === 'number') {\n        this._x += x;\n        this._y += x;\n      }  else if (x && typeof x.x === 'number' && typeof x.y === 'number') {\n        this._x += x.x;\n        this._y += x.y;\n      }\n    } else {\n      this._x += x;\n      this._y += y;\n    }\n    return this.trigger(Events.Types.change);\n  },\n\n  sub: function(x, y) {\n    if (arguments.length <= 0) {\n      return this;\n    } else if (arguments.length <= 1) {\n      if (typeof x === 'number') {\n        this._x -= x;\n        this._y -= x;\n      } else if (x && typeof x.x === 'number' && typeof x.y === 'number') {\n        this._x -= x.x;\n        this._y -= x.y;\n      }\n    } else {\n      this._x -= x;\n      this._y -= y;\n    }\n    return this.trigger(Events.Types.change);\n  },\n\n  multiply: function(x, y) {\n    if (arguments.length <= 0) {\n      return this;\n    } else if (arguments.length <= 1) {\n      if (typeof x === 'number') {\n        this._x *= x;\n        this._y *= x;\n      } else if (x && typeof x.x === 'number' && typeof x.y === 'number') {\n        this._x *= x.x;\n        this._y *= x.y;\n      }\n    } else {\n      this._x *= x;\n      this._y *= y;\n    }\n    return this.trigger(Events.Types.change);\n  },\n\n  divide: function(x, y) {\n    if (arguments.length <= 0) {\n      return this;\n    } else if (arguments.length <= 1) {\n      if (typeof x === 'number') {\n        this._x /= x;\n        this._y /= x;\n      } else if (x && typeof x.x === 'number' && typeof x.y === 'number') {\n        this._x /= x.x;\n        this._y /= x.y;\n      }\n    } else {\n      this._x /= x;\n      this._y /= y;\n    }\n    if (_.isNaN(this._x)) {\n      this._x = 0;\n    }\n    if (_.isNaN(this._y)) {\n      this._y = 0;\n    }\n    return this.trigger(Events.Types.change);\n  },\n\n  dot: function(v) {\n    return this._x * v.x + this._y * v.y;\n  },\n\n  lengthSquared: function() {\n    return this._x * this._x + this._y * this._y;\n  },\n\n  distanceToSquared: function(v) {\n    var dx = this._x - v.x,\n        dy = this._y - v.y;\n    return dx * dx + dy * dy;\n  },\n\n  lerp: function(v, t) {\n    var x = (v.x - this._x) * t + this._x;\n    var y = (v.y - this._y) * t + this._y;\n    return this.set(x, y);\n  },\n\n  toString: function() {\n    return this._x + ', ' + this._y;\n  },\n\n  toObject: function() {\n    return { x: this._x, y: this._y };\n  },\n\n  rotate: function (Number) {\n    var cos = Math.cos(Number);\n    var sin = Math.sin(Number);\n    this._x = this._x * cos - this._y * sin;\n    this._y = this._x * sin + this._y * cos;\n    return this;\n  }\n\n};\n\nvar xgs = {\n  enumerable: true,\n  get: function() {\n    return this._x;\n  },\n  set: function(v) {\n    this._x = v;\n    this.trigger(Events.Types.change, 'x');\n  }\n};\n\nvar ygs = {\n  enumerable: true,\n  get: function() {\n    return this._y;\n  },\n  set: function(v) {\n    this._y = v;\n    this.trigger(Events.Types.change, 'y');\n  }\n};\n\nVector.MakeObservable(Vector.prototype);\n\n/**\n * @class\n * @name Two.Anchor\n * @param {Number} [x=0] - The x position of the root anchor point.\n * @param {Number} [y=0] - The y position of the root anchor point.\n * @param {Number} [lx=0] - The x position of the left handle point.\n * @param {Number} [ly=0] - The y position of the left handle point.\n * @param {Number} [rx=0] - The x position of the right handle point.\n * @param {Number} [ry=0] - The y position of the right handle point.\n * @param {String} [command=Two.Commands.move] - The command to describe how to render. Applicable commands are {@link Two.Commands}\n * @extends Two.Vector\n * @description An object that holds 3 {@link Two.Vector}s, the anchor point and its corresponding handles: `left` and `right`. In order to properly describe the bezier curve about the point there is also a command property to describe what type of drawing should occur when Two.js renders the anchors.\n */\nfunction Anchor(x, y, lx, ly, rx, ry, command) {\n\n  Vector.call(this, x, y);\n\n  this._broadcast = (function() {\n    this.trigger(Events.Types.change);\n  }).bind(this);\n\n  this._command = command || Commands.move;\n  this._relative = true;\n\n  var ilx = typeof lx === 'number';\n  var ily = typeof ly === 'number';\n  var irx = typeof rx === 'number';\n  var iry = typeof ry === 'number';\n\n  // Append the `controls` object only if control points are specified,\n  // keeping the Two.Anchor inline with a Two.Vector until it needs to\n  // evolve beyond those functions - e.g: a simple 2 component vector.\n  if (ilx || ily || irx || iry) {\n    Anchor.AppendCurveProperties(this);\n  }\n\n  if (ilx) {\n    this.controls.left.x = lx;\n  }\n  if (ily) {\n    this.controls.left.y = ly;\n  }\n  if (irx) {\n    this.controls.right.x = rx;\n  }\n  if (iry) {\n    this.controls.right.y = ry;\n  }\n\n}\n\n_.extend(Anchor, {\n\n  /**\n   * @name Two.Anchor.AppendCurveProperties\n   * @function\n   * @param {Two.Anchor} anchor - The instance to append the `control`object to.\n   * @description Adds the `controls` property as an object with `left` and `right` properties to access the bezier control handles that define how the curve is drawn. It also sets the `relative` property to `true` making vectors in the `controls` object relative to their corresponding root anchor point.\n   */\n  AppendCurveProperties: function(anchor) {\n\n    anchor.relative = true;\n\n    /**\n     * @name Two.Anchor#controls\n     * @property {Object} controls\n     * @description An plain object that holds the controls handles for a {@link Two.Anchor}.\n     */\n    anchor.controls = {};\n\n    /**\n     * @name Two.Anchor#controls#left\n     * @property {Two.Vector} left\n     * @description The \"left\" control point to define handles on a bezier curve.\n     */\n    anchor.controls.left = new Vector(0, 0);\n\n    /**\n     * @name Two.Anchor#controls#right\n     * @property {Two.Vector} right\n     * @description The \"left\" control point to define handles on a bezier curve.\n     */\n    anchor.controls.right = new Vector(0, 0);\n\n  },\n\n  /**\n   * @name Two.Anchor.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Anchor} to any object. Handy if you'd like to extend the {@link Two.Anchor} class on a custom class.\n   */\n  MakeObservable: function(object) {\n\n    /**\n     * @name Two.Anchor#command\n     * @property {Two.Commands}\n     * @description A draw command associated with the anchor point.\n     */\n    Object.defineProperty(object, 'command', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._command;\n      },\n\n      set: function(c) {\n        this._command = c;\n        if (this._command === Commands.curve && !_.isObject(this.controls)) {\n          Anchor.AppendCurveProperties(this);\n        }\n        this.trigger(Events.Types.change);\n      }\n\n    });\n\n    /**\n     * @name Two.Anchor#relative\n     * @property {Boolean}\n     * @description A boolean to render control points relative to the root anchor point or in global coordinate-space to the rest of the scene.\n     */\n    Object.defineProperty(object, 'relative', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._relative;\n      },\n\n      set: function(b) {\n        if (this._relative != b) {\n          this._relative = !!b;\n          this.trigger(Events.Types.change);\n        }\n      }\n\n    });\n\n    _.extend(object, Vector.prototype, AnchorProto);\n\n    // Make it possible to bind and still have the Anchor specific\n    // inheritance from Two.Vector. In this case relying on `Two.Vector`\n    // to do much of the heavy event-listener binding / unbinding.\n    object.bind = object.on = function() {\n      var bound = this._bound;\n      Vector.prototype.bind.apply(this, arguments);\n      if (!bound) {\n        _.extend(this, AnchorProto);\n      }\n    };\n\n  }\n\n});\n\nvar AnchorProto = {\n\n  constructor: Anchor,\n\n  /**\n   * @name Two.Anchor#listen\n   * @function\n   * @description Convenience method used mainly by {@link Two.Path#vertices} to listen and propagate changes from control points up to their respective anchors and further if necessary.\n   */\n  listen: function() {\n\n    if (!_.isObject(this.controls)) {\n      Anchor.AppendCurveProperties(this);\n    }\n\n    this.controls.left.bind(Events.Types.change, this._broadcast);\n    this.controls.right.bind(Events.Types.change, this._broadcast);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Anchor#ignore\n   * @function\n   * @description Convenience method used mainly by {@link Two.Path#vertices} to ignore changes from a specific anchor's control points.\n   */\n  ignore: function() {\n\n    this.controls.left.unbind(Events.Types.change, this._broadcast);\n    this.controls.right.unbind(Events.Types.change, this._broadcast);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Anchor#copy\n   * @function\n   * @param {Two.Anchor} v - The anchor to apply values to.\n   * @description Copy the properties of one {@link Two.Anchor} onto another.\n   */\n  copy: function(v) {\n\n    this.x = v.x;\n    this.y = v.y;\n\n    if (typeof v.command === 'string') {\n      this.command = v.command;\n    }\n    if (_.isObject(v.controls)) {\n      if (!_.isObject(this.controls)) {\n        Anchor.AppendCurveProperties(this);\n      }\n      // TODO: Do we need to listen here?\n      this.controls.left.copy(v.controls.left);\n      this.controls.right.copy(v.controls.right);\n    }\n    if (typeof v.relative === 'boolean') {\n      this.relative = v.relative;\n    }\n\n    // TODO: Hack for `Two.Commands.arc`\n    if (this.command === Commands.arc) {\n      this.rx = v.rx;\n      this.ry = v.ry;\n      this.xAxisRotation = v.xAxisRotation;\n      this.largeArcFlag = v.largeArcFlag;\n      this.sweepFlag = v.sweepFlag;\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Anchor#clone\n   * @function\n   * @returns {Two.Anchor}\n   * @description Create a new {@link Two.Anchor}, set all its values to the current instance and return it for use.\n   */\n  clone: function() {\n\n    var controls = this.controls;\n\n    var clone = new Anchor(\n      this.x,\n      this.y,\n      controls && controls.left.x,\n      controls && controls.left.y,\n      controls && controls.right.x,\n      controls && controls.right.y,\n      this.command\n    );\n    clone.relative = this._relative;\n    return clone;\n\n  },\n\n  /**\n   * @name Two.Anchor#toObject\n   * @function\n   * @returns {Object} - An object with properties filled out to mirror {@link Two.Anchor}.\n   * @description Create a JSON compatible plain object of the current instance. Intended for use with storing values in a database.\n   */\n  toObject: function() {\n    var o = {\n      x: this.x,\n      y: this.y\n    };\n    if (this._command) {\n      o.command = this._command;\n    }\n    if (this._relative) {\n      o.relative = this._relative;\n    }\n    if (this.controls) {\n      o.controls = {\n        left: this.controls.left.toObject(),\n        right: this.controls.right.toObject()\n      };\n    }\n    return o;\n  },\n\n  /**\n   * @name Two.Anchor#toString\n   * @function\n   * @returns {String} - A String with comma-separated values reflecting the various values on the current instance.\n   * @description Create a string form of the current instance. Intended for use with storing values in a database. This is lighter to store than the JSON compatible {@link Two.Anchor#toObject}.\n   */\n  toString: function() {\n    if (!this.controls) {\n      return [this._x, this._y].join(', ');\n    }\n    return [this._x, this._y, this.controls.left.x, this.controls.left.y,\n      this.controls.right.x, this.controls.right.y, this._command,\n      this._relative ? 1 : 0].join(', ');\n  }\n\n};\n\nAnchor.MakeObservable(Anchor.prototype);\n\nvar count = 0;\n\nvar Constants = {\n\n  /**\n   * @name Two.nextFrameID\n   * @property {Number}\n   * @description The id of the next requestAnimationFrame function.\n   */\n  nextFrameID: null,\n\n  // Primitive\n\n  /**\n   * @name Two.Types\n   * @property {Object} - The different rendering types available in the library.\n   */\n  Types: {\n    webgl: 'WebGLRenderer',\n    svg: 'SVGRenderer',\n    canvas: 'CanvasRenderer'\n  },\n\n  /**\n   * @name Two.Version\n   * @property {String} - The current working version of the library.\n   */\n  Version: 'v0.7.12',\n\n  /**\n   * @name Two.PublishDate\n   * @property {String} - The automatically generated publish date in the build process to verify version release candidates.\n   */\n  PublishDate: '2021-11-24T18:52:19.187Z',\n\n  /**\n   * @name Two.Identifier\n   * @property {String} - String prefix for all Two.js object's ids. This trickles down to SVG ids.\n   */\n  Identifier: 'two-',\n\n  /**\n   * @name Two.Resolution\n   * @property {Number} - Default amount of vertices to be used for interpreting Arcs and ArcSegments.\n   */\n  Resolution: 12,\n\n  /**\n   * @name Two.AutoCalculateImportedMatrices\n   * @property {Boolean} - When importing SVGs through the {@link two#interpret} and {@link two#load}, this boolean determines whether Two.js infers and then overrides the exact transformation matrix of the reference SVG.\n   * @nota-bene `false` copies the exact transformation matrix values, but also sets the path's `matrix.manual = true`.\n   */\n  AutoCalculateImportedMatrices: true,\n\n  /**\n   * @name Two.Instances\n   * @property {Two[]} - Registered list of all Two.js instances in the current session.\n   */\n  Instances: [],\n\n  /**\n   * @function Two.uniqueId\n   * @description Simple method to access an incrementing value. Used for `id` allocation on all Two.js objects.\n   * @returns {Number} Ever increasing Number.\n   */\n  uniqueId: function() {\n    return count++;\n  }\n\n};\n\n/**\n * @name Two.Utils.Curve\n * @property {Object} - Additional utility constant variables related to curve math and calculations.\n */\nvar Curve = {\n\n  CollinearityEpsilon: Math.pow(10, -30),\n\n  RecursionLimit: 16,\n\n  CuspLimit: 0,\n\n  Tolerance: {\n    distance: 0.25,\n    angle: 0,\n    epsilon: Number.EPSILON\n  },\n\n  // Lookup tables for abscissas and weights with values for n = 2 .. 16.\n  // As values are symmetric, only store half of them and adapt algorithm\n  // to factor in symmetry.\n  abscissas: [\n    [  0.5773502691896257645091488],\n    [0,0.7745966692414833770358531],\n    [  0.3399810435848562648026658,0.8611363115940525752239465],\n    [0,0.5384693101056830910363144,0.9061798459386639927976269],\n    [  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n    [0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n    [  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n    [0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n    [  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n    [0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n    [  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n    [0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n    [  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n    [0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n    [  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n  ],\n\n  weights: [\n    [1],\n    [0.8888888888888888888888889,0.5555555555555555555555556],\n    [0.6521451548625461426269361,0.3478548451374538573730639],\n    [0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n    [0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n    [0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n    [0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n    [0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n    [0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n    [0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n    [0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n    [0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n    [0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n    [0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n    [0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n  ]\n\n};\n\n/**\n * @name Two.Utils.getComponentOnCubicBezier\n * @function\n * @param {Number} t - Zero-to-one value describing what percentage to calculate.\n * @param {Number} a - The firt point's component value.\n * @param {Number} b - The first point's bezier component value.\n * @param {Number} c - The second point's bezier component value.\n * @param {Number} d - The second point's component value.\n * @returns {Number} The coordinate value for a specific component along a cubic bezier curve by `t`.\n */\nvar getComponentOnCubicBezier = function(t, a, b, c, d) {\n  var k = 1 - t;\n  return (k * k * k * a) + (3 * k * k * t * b) + (3 * k * t * t * c) +\n      (t * t * t * d);\n};\n\n/**\n * @name Two.Utils.subdivide\n * @function\n * @param {Number} x1 - x position of first anchor point.\n * @param {Number} y1 - y position of first anchor point.\n * @param {Number} x2 - x position of first anchor point's \"right\" bezier handle.\n * @param {Number} y2 - y position of first anchor point's \"right\" bezier handle.\n * @param {Number} x3 - x position of second anchor point's \"left\" bezier handle.\n * @param {Number} y3 - y position of second anchor point's \"left\" bezier handle.\n * @param {Number} x4 - x position of second anchor point.\n * @param {Number} y4 - y position of second anchor point.\n * @param {Number} [limit=Two.Utils.Curve.RecursionLimit] - The amount of vertices to create by subdividing.\n * @returns {Anchor[]} A list of anchor points ordered in between `x1`, `y1` and `x4`, `y4`\n * @description Given 2 points (a, b) and corresponding control point for each return an array of points that represent points plotted along the curve. The number of returned points is determined by `limit`.\n */\nvar subdivide = function(x1, y1, x2, y2, x3, y3, x4, y4, limit) {\n\n  limit = limit || Curve.RecursionLimit;\n  var amount = limit + 1;\n\n  // TODO: Abstract 0.001 to a limiting variable\n  // Don't recurse if the end points are identical\n  if (Math.abs(x1 - x4) < 0.001 && Math.abs(y1 - y4) < 0.001) {\n    return [new Anchor(x4, y4)];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < amount; i++) {\n    var t = i / amount;\n    var x = getComponentOnCubicBezier(t, x1, x2, x3, x4);\n    var y = getComponentOnCubicBezier(t, y1, y2, y3, y4);\n    result.push(new Anchor(x, y));\n  }\n\n  return result;\n\n};\n\n/**\n * @name Two.Utils.getCurveLength\n * @function\n * @param {Number} x1 - x position of first anchor point.\n * @param {Number} y1 - y position of first anchor point.\n * @param {Number} x2 - x position of first anchor point's \"right\" bezier handle.\n * @param {Number} y2 - y position of first anchor point's \"right\" bezier handle.\n * @param {Number} x3 - x position of second anchor point's \"left\" bezier handle.\n * @param {Number} y3 - y position of second anchor point's \"left\" bezier handle.\n * @param {Number} x4 - x position of second anchor point.\n * @param {Number} y4 - y position of second anchor point.\n * @param {Number} [limit=Two.Utils.Curve.RecursionLimit] - The amount of vertices to create by subdividing.\n * @returns {Number} The length of a curve.\n * @description Given 2 points (a, b) and corresponding control point for each, return a float that represents the length of the curve using Gauss-Legendre algorithm. Limit iterations of calculation by `limit`.\n */\nvar getCurveLength$1 = function(x1, y1, x2, y2, x3, y3, x4, y4, limit) {\n\n  // TODO: Better / fuzzier equality check\n  // Linear calculation\n  if (x1 === x2 && y1 === y2 && x3 === x4 && y3 === y4) {\n    var dx = x4 - x1;\n    var dy = y4 - y1;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  // Calculate the coefficients of a Bezier derivative.\n  var ax = 9 * (x2 - x3) + 3 * (x4 - x1),\n    bx = 6 * (x1 + x3) - 12 * x2,\n    cx = 3 * (x2 - x1),\n\n    ay = 9 * (y2 - y3) + 3 * (y4 - y1),\n    by = 6 * (y1 + y3) - 12 * y2,\n    cy = 3 * (y2 - y1);\n\n  var integrand = function(t) {\n    // Calculate quadratic equations of derivatives for x and y\n    var dx = (ax * t + bx) * t + cx,\n      dy = (ay * t + by) * t + cy;\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  return integrate(\n    integrand, 0, 1, limit || Curve.RecursionLimit\n  );\n\n};\n\n/**\n * @name Two.Utils.getCurveBoundingBox\n * @function\n * @param {Number} x1 - x position of first anchor point.\n * @param {Number} y1 - y position of first anchor point.\n * @param {Number} x2 - x position of first anchor point's \"right\" bezier handle.\n * @param {Number} y2 - y position of first anchor point's \"right\" bezier handle.\n * @param {Number} x3 - x position of second anchor point's \"left\" bezier handle.\n * @param {Number} y3 - y position of second anchor point's \"left\" bezier handle.\n * @param {Number} x4 - x position of second anchor point.\n * @param {Number} y4 - y position of second anchor point.\n * @returns {Object} Object contains min and max `x` / `y` bounds.\n * @see {@link https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js#L856}\n */\nvar getCurveBoundingBox = function(x1, y1, x2, y2, x3, y3, x4, y4) {\n\n  var tvalues = [];\n  var bounds = [[], []];\n  var a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n  for (var i = 0; i < 2; ++i) {\n      if (i == 0) {\n        b = 6 * x1 - 12 * x2 + 6 * x3;\n        a = -3 * x1 + 9 * x2 - 9 * x3 + 3 * x4;\n        c = 3 * x2 - 3 * x1;\n      } else {\n        b = 6 * y1 - 12 * y2 + 6 * y3;\n        a = -3 * y1 + 9 * y2 - 9 * y3 + 3 * y4;\n        c = 3 * y2 - 3 * y1;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n  }\n\n  var j = tvalues.length;\n  var jlen = j;\n  var mt;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = mt * mt * mt * x1 + 3 * mt * mt * t * x2 + 3 * mt * t * t * x3 + t * t * t * x4;\n    bounds[1][j] = mt * mt * mt * y1 + 3 * mt * mt * t * y2 + 3 * mt * t * t * y3 + t * t * t * y4;\n  }\n\n  bounds[0][jlen] = x1;\n  bounds[1][jlen] = y1;\n  bounds[0][jlen + 1] = x4;\n  bounds[1][jlen + 1] = y4;\n  bounds[0].length = bounds[1].length = jlen + 2;\n\n  return {\n    min: { x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1]) },\n    max: { x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1]) }\n  };\n\n};\n\n/**\n * @name Two.Utils.integrate\n * @function\n * @param {Function} f\n * @param {Number} a\n * @param {Number} b\n * @param {Number} n\n * @description Integration for `getCurveLength` calculations.\n * @see [Paper.js](@link https://github.com/paperjs/paper.js/blob/master/src/util/Numerical.js#L101)\n */\nvar integrate = function(f, a, b, n) {\n  var x = Curve.abscissas[n - 2],\n    w = Curve.weights[n - 2],\n    A = 0.5 * (b - a),\n    B = A + a,\n    i = 0,\n    m = (n + 1) >> 1,\n    sum = n & 1 ? w[i++] * f(B) : 0; // Handle odd n\n  while (i < m) {\n    var Ax = A * x[i];\n    sum += w[i++] * (f(B + Ax) + f(B - Ax));\n  }\n  return A * sum;\n};\n\n/**\n * @name Two.Utils.getCurveFromPoints\n * @function\n * @param {Anchor[]} points\n * @param {Boolean} closed\n * @description Sets the bezier handles on {@link Anchor}s in the `points` list with estimated values to create a catmull-rom like curve. Used by {@link Two.Path#plot}.\n */\nvar getCurveFromPoints = function(points, closed) {\n\n  var l = points.length, last = l - 1;\n\n  for (var i = 0; i < l; i++) {\n\n    var point = points[i];\n\n    if (!_.isObject(point.controls)) {\n      Anchor.AppendCurveProperties(point);\n    }\n\n    var prev = closed ? mod(i - 1, l) : Math.max(i - 1, 0);\n    var next = closed ? mod(i + 1, l) : Math.min(i + 1, last);\n\n    var a = points[prev];\n    var b = point;\n    var c = points[next];\n    getControlPoints(a, b, c);\n\n    b.command = i === 0 ? Commands.move : Commands.curve;\n\n  }\n\n};\n\n/**\n * @name Two.Utils.getControlPoints\n * @function\n * @param {Anchor} a\n * @param {Anchor} b\n * @param {Anchor} c\n * @returns {Anchor} Returns the passed middle point `b`.\n * @description Given three coordinates set the control points for the middle, b, vertex based on its position with the adjacent points.\n */\nvar getControlPoints = function(a, b, c) {\n\n  var a1 = Vector.angleBetween(a, b);\n  var a2 = Vector.angleBetween(c, b);\n\n  var d1 = Vector.distanceBetween(a, b);\n  var d2 = Vector.distanceBetween(c, b);\n\n  var mid = (a1 + a2) / 2;\n\n  // TODO: Issue 73\n  if (d1 < 0.0001 || d2 < 0.0001) {\n    if (typeof b.relative === 'boolean' && !b.relative) {\n      b.controls.left.copy(b);\n      b.controls.right.copy(b);\n    }\n    return b;\n  }\n\n  d1 *= 0.33; // Why 0.33?\n  d2 *= 0.33;\n\n  if (a2 < a1) {\n    mid += HALF_PI;\n  } else {\n    mid -= HALF_PI;\n  }\n\n  b.controls.left.x = Math.cos(mid) * d1;\n  b.controls.left.y = Math.sin(mid) * d1;\n\n  mid -= Math.PI;\n\n  b.controls.right.x = Math.cos(mid) * d2;\n  b.controls.right.y = Math.sin(mid) * d2;\n\n  if (typeof b.relative === 'boolean' && !b.relative) {\n    b.controls.left.x += b.x;\n    b.controls.left.y += b.y;\n    b.controls.right.x += b.x;\n    b.controls.right.y += b.y;\n  }\n\n  return b;\n\n};\n\n/**\n * @name Two.Utils.getReflection\n * @function\n * @param {Vector} a\n * @param {Vector} b\n * @param {Boolean} [relative=false]\n * @returns {Vector} New {@link Vector} that represents the reflection point.\n * @description Get the reflection of a point `b` about point `a`. Where `a` is in absolute space and `b` is relative to `a`.\n * @see {@link http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes}\n */\nvar getReflection = function(a, b, relative) {\n\n  return new Vector(\n    2 * a.x - (b.x + a.x) - (relative ? a.x : 0),\n    2 * a.y - (b.y + a.y) - (relative ? a.y : 0)\n  );\n\n};\n\n/**\n * @name Two.Utils.getAnchorsFromArcData\n * @function\n * @param {Vector} center\n * @param {Number} xAxisRotation\n * @param {Number} rx - x radius\n * @param {Number} ry - y radius\n * @param {Number} ts\n * @param {Number} td\n * @param {Boolean} [ccw=false] - Set path traversal to counter-clockwise\n */\nvar getAnchorsFromArcData = function(center, xAxisRotation, rx, ry, ts, td, ccw) {\n\n  var resolution = Constants.Resolution;\n\n  for (var i = 0; i < resolution; i++) {\n    var pct = (i + 1) / resolution;\n    if (ccw) {\n      pct = 1 - pct;\n    }\n\n    var theta = pct * td + ts;\n    var x = rx * Math.cos(theta);\n    var y = ry * Math.sin(theta);\n\n    // x += center.x;\n    // y += center.y;\n\n    var anchor = new Anchor(x, y);\n    Anchor.AppendCurveProperties(anchor);\n    anchor.command = Commands.line;\n  }\n\n};\n\nvar Curves = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Curve: Curve,\n  getComponentOnCubicBezier: getComponentOnCubicBezier,\n  subdivide: subdivide,\n  getCurveLength: getCurveLength$1,\n  getCurveBoundingBox: getCurveBoundingBox,\n  integrate: integrate,\n  getCurveFromPoints: getCurveFromPoints,\n  getControlPoints: getControlPoints,\n  getReflection: getReflection,\n  getAnchorsFromArcData: getAnchorsFromArcData\n});\n\nvar devicePixelRatio = root$1.devicePixelRatio || 1;\n\nvar getBackingStoreRatio = function(ctx) {\n  return ctx.webkitBackingStorePixelRatio ||\n  ctx.mozBackingStorePixelRatio ||\n  ctx.msBackingStorePixelRatio ||\n  ctx.oBackingStorePixelRatio ||\n  ctx.backingStorePixelRatio || 1;\n};\n\n/**\n * @name Two.Utils.getRatio\n * @function\n * @param {CanvasRenderingContext2D} ctx\n * @returns {Number} The ratio of a unit in Two.js to the pixel density of a session's screen.\n * @see [High DPI Rendering](http://www.html5rocks.com/en/tutorials/canvas/hidpi/)\n */\nvar getRatio = function(ctx) {\n  return devicePixelRatio / getBackingStoreRatio(ctx);\n};\n\n// Constants\n\nvar cos$5 = Math.cos, sin$5 = Math.sin, tan = Math.tan;\nvar array = [];\n\n/**\n * @name Two.Matrix\n * @class\n * @param {Number} [a=1] - The value for element at the first column and first row.\n * @param {Number} [b=0] - The value for element at the second column and first row.\n * @param {Number} [c=0] - The value for element at the third column and first row.\n * @param {Number} [d=0] - The value for element at the first column and second row.\n * @param {Number} [e=1] - The value for element at the second column and second row.\n * @param {Number} [f=0] - The value for element at the third column and second row.\n * @param {Number} [g=0] - The value for element at the first column and third row.\n * @param {Number} [h=0] - The value for element at the second column and third row.\n * @param {Number} [i=1] - The value for element at the third column and third row.\n * @description A class to store 3 x 3 transformation matrix information. In addition to storing data `Two.Matrix` has suped up methods for commonplace mathematical operations.\n * @nota-bene Order is based on how to construct transformation strings for the browser.\n */\nfunction Matrix(a, b, c, d, e, f) {\n\n  /**\n   * @name Two.Matrix#elements\n   * @property {Number[]} - The underlying data stored as an array.\n   */\n  this.elements = new NumArray(9);\n\n  var elements = a;\n  if (!Array.isArray(elements)) {\n    elements = Array.prototype.slice.call(arguments);\n  }\n\n  // initialize the elements with default values.\n  this.identity();\n\n  if (elements.length > 0) {\n    this.set(elements);\n  }\n\n}\n\nsetMatrix(Matrix);\n\n_.extend(Matrix, {\n\n  /**\n   * @name Two.Matrix.Identity\n   * @property {Number[]} - A stored reference to the default value of a 3 x 3 matrix.\n   */\n  Identity: [\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ],\n\n  /**\n   * @name Two.Matrix.Multiply\n   * @function\n   * @param {Two.Matrix} A\n   * @param {Two.Matrix} B\n   * @param {Two.Matrix} [C] - An optional matrix to apply the multiplication to.\n   * @returns {Two.Matrix} - If an optional `C` matrix isn't passed then a new one is created and returned.\n   * @description Multiply two matrices together and return the result.\n   */\n  Multiply: function(A, B, C) {\n\n    if (B.length <= 3) { // Multiply Vector\n\n      var x, y, z, e = A;\n\n      var a = B[0] || 0,\n          b = B[1] || 0,\n          c = B[2] || 0;\n\n      // Go down rows first\n      // a, d, g, b, e, h, c, f, i\n\n      x = e[0] * a + e[1] * b + e[2] * c;\n      y = e[3] * a + e[4] * b + e[5] * c;\n      z = e[6] * a + e[7] * b + e[8] * c;\n\n      return { x: x, y: y, z: z };\n\n    }\n\n    var A0 = A[0], A1 = A[1], A2 = A[2];\n    var A3 = A[3], A4 = A[4], A5 = A[5];\n    var A6 = A[6], A7 = A[7], A8 = A[8];\n\n    var B0 = B[0], B1 = B[1], B2 = B[2];\n    var B3 = B[3], B4 = B[4], B5 = B[5];\n    var B6 = B[6], B7 = B[7], B8 = B[8];\n\n    C = C || new NumArray(9);\n\n    C[0] = A0 * B0 + A1 * B3 + A2 * B6;\n    C[1] = A0 * B1 + A1 * B4 + A2 * B7;\n    C[2] = A0 * B2 + A1 * B5 + A2 * B8;\n    C[3] = A3 * B0 + A4 * B3 + A5 * B6;\n    C[4] = A3 * B1 + A4 * B4 + A5 * B7;\n    C[5] = A3 * B2 + A4 * B5 + A5 * B8;\n    C[6] = A6 * B0 + A7 * B3 + A8 * B6;\n    C[7] = A6 * B1 + A7 * B4 + A8 * B7;\n    C[8] = A6 * B2 + A7 * B5 + A8 * B8;\n\n    return C;\n\n  }\n\n});\n\n_.extend(Matrix.prototype, Events, {\n\n  constructor: Matrix,\n\n  /**\n   * @name Two.Matrix#manual\n   * @property {Boolean} - Determines whether Two.js automatically calculates the values for the matrix or if the developer intends to manage the matrix.\n   * @nota-bene - Setting to `true` nullifies {@link Two.Shape#translation}, {@link Two.Shape#rotation}, and {@link Two.Shape#scale}.\n   */\n  manual: false,\n\n  /**\n   * @name Two.Matrix#set\n   * @function\n   * @param {Number} a - The value for element at the first column and first row.\n   * @param {Number} b - The value for element at the second column and first row.\n   * @param {Number} c - The value for element at the third column and first row.\n   * @param {Number} d - The value for element at the first column and second row.\n   * @param {Number} e - The value for element at the second column and second row.\n   * @param {Number} f - The value for element at the third column and second row.\n   * @param {Number} g - The value for element at the first column and third row.\n   * @param {Number} h - The value for element at the second column and third row.\n   * @param {Number} i - The value for element at the third column and third row.\n   * @description Set an array of values onto the matrix. Order described in {@link Two.Matrix}.\n   */\n\n    /**\n    * @name Two.Matrix#set\n    * @function\n    * @param {Number[]} a - The array of elements to apply.\n    * @description Set an array of values onto the matrix. Order described in {@link Two.Matrix}.\n    */\n  set: function(a, b, c, d, e, f, g, h, i) {\n\n    var elements;\n\n    if (typeof b === 'undefined') {\n      elements = a;\n      a = elements[0];\n      b = elements[1];\n      c = elements[2];\n      d = elements[3];\n      e = elements[4];\n      f = elements[5];\n      g = elements[6];\n      h = elements[7];\n      i = elements[8];\n    }\n\n    this.elements[0] = a;\n    this.elements[1] = b;\n    this.elements[2] = c;\n    this.elements[3] = d;\n    this.elements[4] = e;\n    this.elements[5] = f;\n    this.elements[6] = g;\n    this.elements[7] = h;\n    this.elements[8] = i;\n\n    return this.trigger(Events.Types.change);\n\n  },\n\n  /**\n   * @name Two.Matrix#copy\n   * @function\n   * @description Copy the matrix of one to the current instance.\n   */\n  copy: function(m) {\n\n    this.elements[0] = m.elements[0];\n    this.elements[1] = m.elements[1];\n    this.elements[2] = m.elements[2];\n    this.elements[3] = m.elements[3];\n    this.elements[4] = m.elements[4];\n    this.elements[5] = m.elements[5];\n    this.elements[6] = m.elements[6];\n    this.elements[7] = m.elements[7];\n    this.elements[8] = m.elements[8];\n\n    this.manual = m.manual;\n\n    return this.trigger(Events.Types.change);\n\n  },\n\n  /**\n   * @name Two.Matrix#identity\n   * @function\n   * @description Turn matrix to the identity, like resetting.\n   */\n  identity: function() {\n\n    this.elements[0] = Matrix.Identity[0];\n    this.elements[1] = Matrix.Identity[1];\n    this.elements[2] = Matrix.Identity[2];\n    this.elements[3] = Matrix.Identity[3];\n    this.elements[4] = Matrix.Identity[4];\n    this.elements[5] = Matrix.Identity[5];\n    this.elements[6] = Matrix.Identity[6];\n    this.elements[7] = Matrix.Identity[7];\n    this.elements[8] = Matrix.Identity[8];\n\n    return this.trigger(Events.Types.change);\n\n  },\n\n  /**\n   * @name Two.Matrix#multiply\n   * @function\n   * @param {Number} a - The scalar to be multiplied.\n   * @description Multiply all components of the matrix against a single scalar value.\n   * @overloaded\n   */\n\n  /**\n   * @name Two.Matrix#multiply\n   * @function\n   * @param {Number} a - The x component to be multiplied.\n   * @param {Number} b - The y component to be multiplied.\n   * @param {Number} c - The z component to be multiplied.\n   * @description Multiply all components of a matrix against a 3 component vector.\n   * @overloaded\n   */\n\n  /**\n   * @name Two.Matrix#multiply\n   * @function\n   * @param {Number} a - The value at the first column and first row of the matrix to be multiplied.\n   * @param {Number} b - The value at the second column and first row of the matrix to be multiplied.\n   * @param {Number} c - The value at the third column and first row of the matrix to be multiplied.\n   * @param {Number} d - The value at the first column and second row of the matrix to be multiplied.\n   * @param {Number} e - The value at the second column and second row of the matrix to be multiplied.\n   * @param {Number} f - The value at the third column and second row of the matrix to be multiplied.\n   * @param {Number} g - The value at the first column and third row of the matrix to be multiplied.\n   * @param {Number} h - The value at the second column and third row of the matrix to be multiplied.\n   * @param {Number} i - The value at the third column and third row of the matrix to be multiplied.\n   * @description Multiply all components of a matrix against another matrix.\n   * @overloaded\n   */\n  multiply: function(a, b, c, d, e, f, g, h, i) {\n\n    // Multiply scalar\n\n    if (typeof b === 'undefined') {\n\n      this.elements[0] *= a;\n      this.elements[1] *= a;\n      this.elements[2] *= a;\n      this.elements[3] *= a;\n      this.elements[4] *= a;\n      this.elements[5] *= a;\n      this.elements[6] *= a;\n      this.elements[7] *= a;\n      this.elements[8] *= a;\n\n      return this.trigger(Events.Types.change);\n\n    }\n\n    if (typeof d === 'undefined') { // Multiply Vector\n\n      var x, y, z;\n      a = a || 0;\n      b = b || 0;\n      c = c || 0;\n      e = this.elements;\n\n      // Go down rows first\n      // a, d, g, b, e, h, c, f, i\n\n      x = e[0] * a + e[1] * b + e[2] * c;\n      y = e[3] * a + e[4] * b + e[5] * c;\n      z = e[6] * a + e[7] * b + e[8] * c;\n\n      return { x: x, y: y, z: z };\n\n    }\n\n    // Multiple matrix\n\n    var A = this.elements;\n    var B = [a, b, c, d, e, f, g, h, i];\n\n    var A0 = A[0], A1 = A[1], A2 = A[2];\n    var A3 = A[3], A4 = A[4], A5 = A[5];\n    var A6 = A[6], A7 = A[7], A8 = A[8];\n\n    var B0 = B[0], B1 = B[1], B2 = B[2];\n    var B3 = B[3], B4 = B[4], B5 = B[5];\n    var B6 = B[6], B7 = B[7], B8 = B[8];\n\n    this.elements[0] = A0 * B0 + A1 * B3 + A2 * B6;\n    this.elements[1] = A0 * B1 + A1 * B4 + A2 * B7;\n    this.elements[2] = A0 * B2 + A1 * B5 + A2 * B8;\n\n    this.elements[3] = A3 * B0 + A4 * B3 + A5 * B6;\n    this.elements[4] = A3 * B1 + A4 * B4 + A5 * B7;\n    this.elements[5] = A3 * B2 + A4 * B5 + A5 * B8;\n\n    this.elements[6] = A6 * B0 + A7 * B3 + A8 * B6;\n    this.elements[7] = A6 * B1 + A7 * B4 + A8 * B7;\n    this.elements[8] = A6 * B2 + A7 * B5 + A8 * B8;\n\n    return this.trigger(Events.Types.change);\n\n  },\n\n  /**\n   * @name Two.Matrix#inverse\n   * @function\n   * @param {Two.Matrix} [out] - The optional matrix to apply the inversion to.\n   * @description Return an inverted version of the matrix. If no optional one is passed a new matrix is created and returned.\n   */\n  inverse: function(out) {\n\n    var a = this.elements;\n    out = out || new Matrix();\n\n    var a00 = a[0], a01 = a[1], a02 = a[2];\n    var a10 = a[3], a11 = a[4], a12 = a[5];\n    var a20 = a[6], a21 = a[7], a22 = a[8];\n\n    var b01 = a22 * a11 - a12 * a21;\n    var b11 = -a22 * a10 + a12 * a20;\n    var b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n      return null;\n    }\n\n    det = 1.0 / det;\n\n    out.elements[0] = b01 * det;\n    out.elements[1] = (-a22 * a01 + a02 * a21) * det;\n    out.elements[2] = (a12 * a01 - a02 * a11) * det;\n    out.elements[3] = b11 * det;\n    out.elements[4] = (a22 * a00 - a02 * a20) * det;\n    out.elements[5] = (-a12 * a00 + a02 * a10) * det;\n    out.elements[6] = b21 * det;\n    out.elements[7] = (-a21 * a00 + a01 * a20) * det;\n    out.elements[8] = (a11 * a00 - a01 * a10) * det;\n\n    return out;\n\n  },\n\n  /**\n   * @name Two.Matrix#scale\n   * @function\n   * @param {Number} scale - The one dimensional scale to apply to the matrix.\n   * @description Uniformly scale the transformation matrix.\n   */\n\n  /**\n   * @name Two.Matrix#scale\n   * @function\n   * @param {Number} sx - The horizontal scale factor.\n   * @param {Number} sy - The vertical scale factor\n   * @description Scale the transformation matrix in two dimensions.\n   */\n  scale: function(sx, sy) {\n\n    var l = arguments.length;\n    if (l <= 1) {\n      sy = sx;\n    }\n\n    return this.multiply(sx, 0, 0, 0, sy, 0, 0, 0, 1);\n\n  },\n\n  /**\n   * @name Two.Matrix#rotate\n   * @function\n   * @param {Number} Number - The amount to rotate in Number.\n   * @description Rotate the matrix.\n   */\n  rotate: function(Number) {\n\n    var c = cos$5(Number);\n    var s = sin$5(Number);\n\n    return this.multiply(c, -s, 0, s, c, 0, 0, 0, 1);\n\n  },\n\n  /**\n   * @name Two.Matrix#translate\n   * @function\n   * @param {Number} x - The horizontal translation value to apply.\n   * @param {Number} y - The vertical translation value to apply.\n   * @description Translate the matrix.\n   */\n  translate: function(x, y) {\n\n    return this.multiply(1, 0, x, 0, 1, y, 0, 0, 1);\n\n  },\n\n  /**\n   * @name Two.Matrix#skewX\n   * @function\n   * @param {Number} Number - The amount to skew in Number.\n   * @description Skew the matrix by an angle in the x axis direction.\n   */\n  skewX: function(Number) {\n\n    var a = tan(Number);\n\n    return this.multiply(1, a, 0, 0, 1, 0, 0, 0, 1);\n\n  },\n\n  /**\n   * @name Two.Matrix#skewY\n   * @function\n   * @param {Number} Number - The amount to skew in Number.\n   * @description Skew the matrix by an angle in the y axis direction.\n   */\n  skewY: function(Number) {\n\n    var a = tan(Number);\n\n    return this.multiply(1, 0, 0, a, 1, 0, 0, 0, 1);\n\n  },\n\n  /**\n   * @name Two.Matrix#toString\n   * @function\n   * @param {Boolean} [fullMatrix=false] - Return the full 9 elements of the matrix or just 6 for 2D transformations.\n   * @returns {String} - The transformation matrix as a 6 component string separated by spaces.\n   * @description Create a transform string. Used for the Two.js rendering APIs.\n   */\n  toString: function(fullMatrix) {\n\n    array.length = 0;\n    this.toTransformArray(fullMatrix, array);\n\n    return array.map(toFixed).join(' ');\n\n  },\n\n  /**\n   * @name Two.Matrix#toTransformArray\n   * @function\n   * @param {Boolean} [fullMatrix=false] - Return the full 9 elements of the matrix or just 6 in the format for 2D transformations.\n   * @param {Number[]} [output] - An array empty or otherwise to apply the values to.\n   * @description Create a transform array. Used for the Two.js rendering APIs.\n   */\n  toTransformArray: function(fullMatrix, output) {\n\n    var elements = this.elements;\n    var hasOutput = !!output;\n\n    var a = elements[0];\n    var b = elements[1];\n    var c = elements[2];\n    var d = elements[3];\n    var e = elements[4];\n    var f = elements[5];\n\n    if (fullMatrix) {\n\n      var g = elements[6];\n      var h = elements[7];\n      var i = elements[8];\n\n      if (hasOutput) {\n        output[0] = a;\n        output[1] = d;\n        output[2] = g;\n        output[3] = b;\n        output[4] = e;\n        output[5] = h;\n        output[6] = c;\n        output[7] = f;\n        output[8] = i;\n        return;\n      }\n\n      return [\n        a, d, g, b, e, h, c, f, i\n      ];\n    }\n\n    if (hasOutput) {\n      output[0] = a;\n      output[1] = d;\n      output[2] = b;\n      output[3] = e;\n      output[4] = c;\n      output[5] = f;\n      return;\n    }\n\n    return [\n      a, d, b, e, c, f  // Specific format see LN:19\n    ];\n\n  },\n\n  /**\n   * @name Two.Matrix#toArray\n   * @function\n   * @param {Boolean} [fullMatrix=false] - Return the full 9 elements of the matrix or just 6 for 2D transformations.\n   * @param {Number[]} [output] - An array empty or otherwise to apply the values to.\n   * @description Create a transform array. Used for the Two.js rendering APIs.\n   */\n  toArray: function(fullMatrix, output) {\n\n    var elements = this.elements;\n    var hasOutput = !!output;\n\n    var a = elements[0];\n    var b = elements[1];\n    var c = elements[2];\n    var d = elements[3];\n    var e = elements[4];\n    var f = elements[5];\n\n    if (fullMatrix) {\n\n      var g = elements[6];\n      var h = elements[7];\n      var i = elements[8];\n\n      if (hasOutput) {\n        output[0] = a;\n        output[1] = b;\n        output[2] = c;\n        output[3] = d;\n        output[4] = e;\n        output[5] = f;\n        output[6] = g;\n        output[7] = h;\n        output[8] = i;\n        return;\n      }\n\n      return [\n        a, b, c, d, e, f, g, h, i\n      ];\n    }\n\n    if (hasOutput) {\n      output[0] = a;\n      output[1] = b;\n      output[2] = c;\n      output[3] = d;\n      output[4] = e;\n      output[5] = f;\n      return;\n    }\n\n    return [\n      a, b, c, d, e, f\n    ];\n\n  },\n\n  /**\n   * @name Two.Matrix#toObject\n   * @function\n   * @description Create a JSON compatible object that represents information of the matrix.\n   */\n  toObject: function() {\n    return {\n      elements: this.toArray(true),\n      manual: !!this.manual\n    };\n  },\n\n  /**\n   * @name Two.Matrix#clone\n   * @function\n   * @description Clone the current matrix.\n   */\n  clone: function() {\n\n    return new Matrix().copy(this);\n\n  }\n\n});\n\n/**\n * @name Two.Shape\n * @class\n * @extends Two.Events\n * @description The foundational transformation object for the Two.js scenegraph.\n */\nfunction Shape() {\n\n  /**\n   * @name Two.Shape#renderer\n   * @property {Object}\n   * @description Object access to store relevant renderer specific variables. Warning: manipulating this object can create unintended consequences.\n   * @nota-bene With the {@link Two.SvgRenderer} you can access the underlying SVG element created via `shape.renderer.elem`.\n   */\n  this.renderer = {};\n  this._renderer.flagMatrix = Shape.FlagMatrix.bind(this);\n  this.isShape = true;\n\n  /**\n   * @name Two.Shape#id\n   * @property {String} - Session specific unique identifier.\n   * @nota-bene In the {@link Two.SvgRenderer} change this to change the underlying SVG element's id too.\n   */\n  this.id = Constants.Identifier + Constants.uniqueId();\n\n  /**\n   * @name Two.Shape#classList\n   * @property {String[]}\n   * @description A list of class strings stored if imported / interpreted  from an SVG element.\n   */\n  this.classList = [];\n\n  /**\n   * @name Two.Shape#matrix\n   * @property {Two.Matrix}\n   * @description The transformation matrix of the shape.\n   * @nota-bene {@link Two.Shape#translation}, {@link Two.Shape#rotation}, {@link Two.Shape#scale}, {@link Two.Shape#skewX}, and {@link Two.Shape#skewY} apply their values to the matrix when changed. The matrix is what is sent to the renderer to be drawn.\n   */\n  this.matrix = new Matrix();\n\n  /**\n   * @name Two.Shape#translation\n   * @property {Two.Vector} - The x and y value for where the shape is placed relative to its parent.\n   */\n  this.translation = new Vector();\n\n  /**\n   * @name Two.Shape#rotation\n   * @property {Number} - The value in Number for how much the shape is rotated relative to its parent.\n   */\n  this.rotation = 0;\n\n  /**\n   * @name Two.Shape#scale\n   * @property {Number} - The value for how much the shape is scaled relative to its parent.\n   * @nota-bene This value can be replaced with a {@link Two.Vector} to do non-uniform scaling. e.g: `shape.scale = new Two.Vector(2, 1);`\n   */\n  this.scale = 1;\n\n  /**\n   * @name Two.Shape#skewX\n   * @property {Number} - The value in Number for how much the shape is skewed relative to its parent.\n   * @description Skew the shape by an angle in the x axis direction.\n   */\n  this.skewX = 0;\n\n  /**\n   * @name Two.Shape#skewY\n   * @property {Number} - The value in Number for how much the shape is skewed relative to its parent.\n   * @description Skew the shape by an angle in the y axis direction.\n   */\n  this.skewY = 0;\n\n}\n\n_.extend(Shape, {\n\n  /**\n   * @name Two.Shape.FlagMatrix\n   * @function\n   * @description Utility function used in conjunction with event handlers to update the flagMatrix of a shape.\n   */\n  FlagMatrix: function() {\n    this._flagMatrix = true;\n  },\n\n  /**\n   * @name Two.Shape.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Shape} to any object. Handy if you'd like to extend the {@link Two.Shape} class on a custom class.\n   */\n  MakeObservable: function(object) {\n\n    var translation = {\n      enumerable: false,\n      get: function() {\n        return this._translation;\n      },\n      set: function(v) {\n        if (this._translation) {\n          this._translation.unbind(Events.Types.change, this._renderer.flagMatrix);\n        }\n        this._translation = v;\n        this._translation.bind(Events.Types.change, this._renderer.flagMatrix);\n        Shape.FlagMatrix.call(this);\n      }\n    };\n\n    Object.defineProperty(object, 'translation', translation);\n    Object.defineProperty(object, 'position', translation);\n\n    Object.defineProperty(object, 'rotation', {\n      enumerable: true,\n      get: function() {\n        return this._rotation;\n      },\n      set: function(v) {\n        this._rotation = v;\n        this._flagMatrix = true;\n      }\n    });\n\n    Object.defineProperty(object, 'scale', {\n      enumerable: true,\n      get: function() {\n        return this._scale;\n      },\n      set: function(v) {\n\n        if (this._scale instanceof Vector) {\n          this._scale.unbind(Events.Types.change, this._renderer.flagMatrix);\n        }\n\n        this._scale = v;\n\n        if (this._scale instanceof Vector) {\n          this._scale.bind(Events.Types.change, this._renderer.flagMatrix);\n        }\n\n        this._flagMatrix = true;\n        this._flagScale = true;\n\n      }\n    });\n\n    Object.defineProperty(object, 'skewX', {\n      enumerable: true,\n      get: function() {\n        return this._skewX;\n      },\n      set: function(v) {\n        this._skewX = v;\n        this._flagMatrix = true;\n      }\n    });\n\n    Object.defineProperty(object, 'skewY', {\n      enumerable: true,\n      get: function() {\n        return this._skewY;\n      },\n      set: function(v) {\n        this._skewY = v;\n        this._flagMatrix = true;\n      }\n    });\n\n    Object.defineProperty(object, 'matrix', {\n      enumerable: true,\n      get: function() {\n        return this._matrix;\n      },\n      set: function(v) {\n        this._matrix = v;\n        this._flagMatrix = true;\n      }\n    });\n\n    Object.defineProperty(object, 'id', {\n      enumerable: true,\n      get: function() {\n        return this._id;\n      },\n      set: function(v) {\n        var id = this._id;\n        if (v === this._id) {\n          return;\n        }\n        this._id = v;\n        this._flagId = true;\n        if (this.parent) {\n          delete this.parent.children.ids[id];\n          this.parent.children.ids[this._id] = this;\n        }\n      }\n    });\n\n    Object.defineProperty(object, 'className', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._className;\n      },\n\n      set: function(v) {\n\n        this._flagClassName = this._className !== v;\n\n        if (this._flagClassName) {\n\n          var prev = this._className.split(/\\s+?/);\n          var dest = v.split(/\\s+?/);\n\n          for (var i = 0; i < prev.length; i++) {\n            var className = prev[i];\n            var index = Array.prototype.indexOf.call(this.classList, className);\n            if (index >= 0) {\n              this.classList.splice(index, 1);\n            }\n          }\n\n          this.classList = this.classList.concat(dest);\n\n        }\n\n        this._className = v;\n\n      }\n\n    });\n\n    Object.defineProperty(object, 'renderer', {\n\n      enumerable: false,\n\n      get: function() {\n        return this._renderer;\n      },\n\n      set: function(obj) {\n        this._renderer = obj;\n      }\n\n    });\n\n  }\n\n});\n\n_.extend(Shape.prototype, Events, {\n\n  constructor: Shape,\n\n  // Flags\n\n  /**\n   * @name Two.Shape#_id\n   * @private\n   * @property {Boolean} - Determines whether the id needs updating.\n   */\n  _flagId: true,\n\n  /**\n   * @name Two.Shape#_flagMatrix\n   * @private\n   * @property {Boolean} - Determines whether the matrix needs updating.\n   */\n  _flagMatrix: true,\n\n  /**\n   * @name Two.Shape#_flagScale\n   * @private\n   * @property {Boolean} - Determines whether the scale needs updating.\n   */\n  _flagScale: false,\n\n  // _flagMask: false,\n  // _flagClip: false,\n\n  /**\n   * @name Two.Shape#_flagClassName\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Group#className} need updating.\n   */\n  _flagClassName: false,\n\n  // Underlying Properties\n\n  _id: '',\n\n  /**\n   * @name Two.Shape#_translation\n   * @private\n   * @property {Two.Vector} - The translation values as a {@link Two.Vector}.\n   */\n  _translation: null,\n\n  /**\n   * @name Two.Shape#_rotation\n   * @private\n   * @property {Number} - The rotation value in Number.\n   */\n  _rotation: 0,\n\n  /**\n   * @name Two.Shape#_translation\n   * @private\n   * @property {Two.Vector} - The translation values as a {@link Two.Vector}.\n   */\n  _scale: 1,\n\n  /**\n   * @name Two.Shape#_skewX\n   * @private\n   * @property {Number} - The rotation value in Number.\n   */\n  _skewX: 0,\n\n  /**\n   * @name Two.Shape#_skewY\n   * @private\n   * @property {Number} - The rotation value in Number.\n   */\n  _skewY: 0,\n\n  /**\n   * @name Two.Shape#className\n   * @property {String} - A class to be applied to the element to be compatible with CSS styling.\n   * @nota-bene Only available for the SVG renderer.\n   */\n  _className: '',\n\n  /**\n   * @name Two.Shape#addTo\n   * @function\n   * @param {Two.Group} group - The parent the shape adds itself to.\n   * @description Convenience method to add itself to the scenegraph.\n   */\n  addTo: function(group) {\n    group.add(this);\n    return this;\n  },\n\n  /**\n   * @name Two.Shape#clone\n   * @function\n   * @param {Two.Group} [parent] - Optional argument to automatically add the shape to a scenegraph.\n   * @returns {Two.Shape}\n   * @description Create a new {@link Two.Shape} with the same values as the current shape.\n   */\n  clone: function(parent) {\n\n    var clone = new Shape();\n\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n    clone.skewX = this.skewX;\n    clone.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone._update();\n\n  },\n\n  /**\n   * @name Two.Shape#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function(bubbles) {\n\n    if (!this._matrix.manual && this._flagMatrix) {\n\n      this._matrix\n        .identity()\n        .translate(this.translation.x, this.translation.y);\n\n        if (this._scale instanceof Vector) {\n          this._matrix.scale(this._scale.x, this._scale.y);\n        } else {\n          this._matrix.scale(this._scale);\n        }\n\n        this._matrix.rotate(this.rotation);\n        this._matrix.skewX(this.skewX);\n        this._matrix.skewY(this.skewY);\n    }\n\n    if (bubbles) {\n      if (this.parent && this.parent._update) {\n        this.parent._update();\n      }\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Shape#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagId = this._flagMatrix = this._flagScale =\n      this._flagClassName = false;\n\n    return this;\n\n  }\n\n});\n\nShape.MakeObservable(Shape.prototype);\n\n/**\n * @name Two.Collection\n * @class\n * @extends Two.Events\n * @description An `Array` like object with additional event propagation on actions. `pop`, `shift`, and `splice` trigger `removed` events. `push`, `unshift`, and `splice` with more than 2 arguments trigger 'inserted'. Finally, `sort` and `reverse` trigger `order` events.\n */\nfunction Collection() {\n\n  Array.call(this);\n\n  if (arguments[0] && Array.isArray(arguments[0])) {\n    if (arguments[0].length > 0) {\n      Array.prototype.push.apply(this, arguments[0]);\n    }\n  } else if (arguments.length > 0) {\n    Array.prototype.push.apply(this, arguments);\n  }\n\n}\n\nCollection.prototype = new Array();\n\n_.extend(Collection.prototype, Events, {\n\n  constructor: Collection,\n\n  pop: function() {\n    var popped = Array.prototype.pop.apply(this, arguments);\n    this.trigger(Events.Types.remove, [popped]);\n    return popped;\n  },\n\n  shift: function() {\n    var shifted = Array.prototype.shift.apply(this, arguments);\n    this.trigger(Events.Types.remove, [shifted]);\n    return shifted;\n  },\n\n  push: function() {\n    var pushed = Array.prototype.push.apply(this, arguments);\n    this.trigger(Events.Types.insert, arguments);\n    return pushed;\n  },\n\n  unshift: function() {\n    var unshifted = Array.prototype.unshift.apply(this, arguments);\n    this.trigger(Events.Types.insert, arguments);\n    return unshifted;\n  },\n\n  splice: function() {\n    var spliced = Array.prototype.splice.apply(this, arguments);\n    var inserted;\n\n    this.trigger(Events.Types.remove, spliced);\n\n    if (arguments.length > 2) {\n      inserted = this.slice(arguments[0], arguments[0] + arguments.length - 2);\n      this.trigger(Events.Types.insert, inserted);\n      this.trigger(Events.Types.order);\n    }\n    return spliced;\n  },\n\n  sort: function() {\n    Array.prototype.sort.apply(this, arguments);\n    this.trigger(Events.Types.order);\n    return this;\n  },\n\n  reverse: function() {\n    Array.prototype.reverse.apply(this, arguments);\n    this.trigger(Events.Types.order);\n    return this;\n  },\n\n  indexOf: function() {\n    return Array.prototype.indexOf.apply(this, arguments);\n  }\n\n});\n\n/**\n * @class\n * @name Two.Group.Children\n * @extends Two.Collection\n * @description A children collection which is accesible both by index and by object `id`.\n */\nfunction Children(children) {\n\n  Collection.apply(this, arguments);\n\n  Object.defineProperty(this, '_events', {\n    value : {},\n    enumerable: false\n  });\n\n  /**\n   * @name Two.Group.Children#ids\n   * @property {Object} - Map of all elements in the list keyed by `id`s.\n   */\n  this.ids = {};\n\n  this.attach(\n    Array.isArray(children) ? children : Array.prototype.slice.call(arguments)\n  );\n\n  this.on(Events.Types.insert, this.attach);\n  this.on(Events.Types.remove, this.detach);\n\n}\n\nChildren.prototype = new Collection();\n\n_.extend(Children.prototype, {\n\n  constructor: Children,\n\n  /**\n   * @function\n   * @name Two.Group.Children#attach\n   * @param {Two.Shape[]} children - The objects which extend {@link Two.Shape} to be added.\n   * @description Adds elements to the `ids` map.\n   */\n  attach: function(children) {\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      if (child && child.id) {\n        this.ids[child.id] = child;\n      }\n    }\n    return this;\n  },\n\n  /**\n   * @function\n   * @name Two.Group.Children#detach\n   * @param {Two.Shape[]} children - The objects which extend {@link Two.Shape} to be removed.\n   * @description Removes elements to the `ids` map.\n   */\n  detach: function(children) {\n    for (var i = 0; i < children.length; i++) {\n      delete this.ids[children[i].id];\n    }\n    return this;\n  }\n\n});\n\n// Constants\n\nvar min$3 = Math.min, max$3 = Math.max;\n\n/**\n * @name Two.Group\n * @class\n * @extends Two.Shape\n * @param {Two.Shape[]} [children] - A list of objects that inherit {@link Two.Shape}. For instance, the array could be a {@link Two.Path}, {@link Two.Text}, and {@link Two.RoundedRectangle}.\n * @description This is the primary class for grouping objects that are then drawn in Two.js. In Illustrator this is a group, in After Effects it would be a Null Object. Whichever the case, the `Two.Group` contains a transformation matrix and commands to style its children, but it by itself doesn't render to the screen.\n * @nota-bene The {@link Two#scene} is an instance of `Two.Group`.\n */\nfunction Group(children) {\n\n  Shape.call(this, true);\n\n  this._renderer.type = 'group';\n\n  /**\n   * @name Two.Group#additions\n   * @property {Two.Shape[]}\n   * @description An automatically updated list of children that need to be appended to the renderer's scenegraph.\n   */\n  this.additions = [];\n\n  /**\n   * @name Two.Group#subtractions\n   * @property {Two.Shape[]}\n   * @description An automatically updated list of children that need to be removed from the renderer's scenegraph.\n   */\n  this.subtractions = [];\n\n  /**\n   * @name Two.Group#children\n   * @property {Two.Group.Children}\n   * @description A list of all the children in the scenegraph.\n   * @nota-bene Ther order of this list indicates the order each element is rendered to the screen.\n   */\n  this.children = Array.isArray(children) ? children : Array.prototype.slice.call(arguments);\n\n}\n\n_.extend(Group, {\n\n  Children: Children,\n\n  /**\n   * @name Two.Group.InsertChildren\n   * @function\n   * @param {Two.Shape[]} children - The objects to be inserted.\n   * @description Cached method to let renderers know children have been added to a {@link Two.Group}.\n   */\n  InsertChildren: function(children) {\n    for (var i = 0; i < children.length; i++) {\n      replaceParent.call(this, children[i], this);\n    }\n  },\n\n  /**\n   * @name Two.Group.RemoveChildren\n   * @function\n   * @param {Two.Shape[]} children - The objects to be removed.\n   * @description Cached method to let renderers know children have been removed from a {@link Two.Group}.\n   */\n  RemoveChildren: function(children) {\n    for (var i = 0; i < children.length; i++) {\n      replaceParent.call(this, children[i]);\n    }\n  },\n\n  /**\n   * @name Two.Group.OrderChildren\n   * @function\n   * @description Cached method to let renderers know order has been updated on a {@link Two.Group}.\n   */\n  OrderChildren: function(children) {\n    this._flagOrder = true;\n  },\n\n  /**\n   * @name Two.Group.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Group}.\n   */\n  Properties: [\n    'fill',\n    'stroke',\n    'linewidth',\n    'cap',\n    'join',\n    'miter',\n\n    'closed',\n    'curved',\n    'automatic'\n  ],\n\n  /**\n   * @name Two.Group.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Group} to any object. Handy if you'd like to extend the {@link Two.Group} class on a custom class.\n   */\n  MakeObservable: function(object) {\n\n    var properties = Group.Properties;\n\n    Object.defineProperty(object, 'visible', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._visible;\n      },\n\n      set: function(v) {\n        this._flagVisible = this._visible !== v || this._flagVisible;\n        this._visible = v;\n      }\n\n    });\n\n    Object.defineProperty(object, 'opacity', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._opacity;\n      },\n\n      set: function(v) {\n        this._flagOpacity = this._opacity !== v || this._flagOpacity;\n        this._opacity = v;\n      }\n\n    });\n\n    Object.defineProperty(object, 'beginning', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._beginning;\n      },\n\n      set: function(v) {\n        this._flagBeginning = this._beginning !== v || this._flagBeginning;\n        this._beginning = v;\n      }\n\n    });\n\n    Object.defineProperty(object, 'ending', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._ending;\n      },\n\n      set: function(v) {\n        this._flagEnding = this._ending !== v || this._flagEnding;\n        this._ending = v;\n      }\n\n    });\n\n    Object.defineProperty(object, 'length', {\n\n      enumerable: true,\n\n      get: function() {\n        if (this._flagLength || this._length <= 0) {\n          this._length = 0;\n          if (!this.children) {\n            return this._length;\n          }\n          for (var i = 0; i < this.children.length; i++) {\n            var child = this.children[i];\n            this._length += child.length;\n          }\n        }\n        return this._length;\n      }\n\n    });\n\n    Shape.MakeObservable(object);\n    Group.MakeGetterSetters(object, properties);\n\n    Object.defineProperty(object, 'children', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._children;\n      },\n\n      set: function(children) {\n\n        var insertChildren = Group.InsertChildren.bind(this);\n        var removeChildren = Group.RemoveChildren.bind(this);\n        var orderChildren = Group.OrderChildren.bind(this);\n\n        if (this._children) {\n          this._children.unbind();\n          if (this._children.length > 0) {\n            removeChildren(this._children);\n          }\n        }\n\n        this._children = new Children(children);\n        this._children.bind(Events.Types.insert, insertChildren);\n        this._children.bind(Events.Types.remove, removeChildren);\n        this._children.bind(Events.Types.order, orderChildren);\n\n        if (children.length > 0) {\n          insertChildren(children);\n        }\n\n      }\n\n    });\n\n    Object.defineProperty(object, 'mask', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._mask;\n      },\n\n      set: function(v) {\n        if (this._mask) {\n          this._mask.clip = false;\n        }\n        this._mask = v;\n        this._flagMask = true;\n        if (v && !v.clip) {\n          v.clip = true;\n        }\n      }\n\n    });\n\n  },\n\n  /**\n   * @name Two.Group.MakeGetterSetters\n   * @function\n   * @param {Two.Group} group - The group to apply getters and setters.\n   * @param {Object} properties - A key / value object containing properties to inherit.\n   * @description Convenience method to apply getter / setter logic on an array of properties. Used in {@link Two.Group.MakeObservable}.\n   */\n  MakeGetterSetters: function(group, properties) {\n\n    if (!Array.isArray(properties)) {\n      properties = [properties];\n    }\n\n    _.each(properties, function(k) {\n      Group.MakeGetterSetter(group, k);\n    });\n\n  },\n\n  /**\n   * @name Two.Group.MakeGetterSetter\n   * @function\n   * @param {Two.Group} group - The group to apply getters and setters.\n   * @param {String} key - The key which will become a property on the group.\n   * @description Convenience method to apply getter / setter logic specific to how `Two.Group`s trickle down styles to their children. Used in {@link Two.Group.MakeObservable}.\n   */\n  MakeGetterSetter: function(group, key) {\n\n    var secret = '_' + key;\n\n    Object.defineProperty(group, key, {\n\n      enumerable: true,\n\n      get: function() {\n        return this[secret];\n      },\n\n      set: function(v) {\n        this[secret] = v;\n        // Trickle down styles\n        for (var i = 0; i < this.children.length; i++) {\n          var child = this.children[i];\n          child[key] = v;\n        }\n      }\n\n    });\n\n  }\n\n});\n\n_.extend(Group.prototype, Shape.prototype, {\n\n  constructor: Group,\n\n  // Flags\n  // http://en.wikipedia.org/wiki/Flag\n\n  /**\n   * @name Two.Group#_flagAdditions\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Group#additions} needs updating.\n   */\n  _flagAdditions: false,\n\n  /**\n   * @name Two.Group#_flagSubtractions\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Group#subtractions} needs updating.\n   */\n  _flagSubtractions: false,\n\n  /**\n   * @name Two.Group#_flagOrder\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Group#order} needs updating.\n   */\n  _flagOrder: false,\n\n  /**\n   * @name Two.Group#_flagVisible\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Group#visible} needs updating.\n   */\n\n  /**\n   * @name Two.Group#_flagOpacity\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Group#opacity} needs updating.\n   */\n  _flagOpacity: true,\n\n  /**\n   * @name Two.Group#_flagBeginning\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Group#beginning} needs updating.\n   */\n  _flagBeginning: false,\n\n  /**\n   * @name Two.Group#_flagEnding\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Group#ending} needs updating.\n   */\n  _flagEnding: false,\n\n  /**\n   * @name Two.Group#_flagLength\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Group#length} needs updating.\n   */\n  _flagLength: false,\n\n  /**\n   * @name Two.Group#_flagMask\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Group#mask} needs updating.\n   */\n  _flagMask: false,\n\n  // Underlying Properties\n\n  /**\n   * @name Two.Group#fill\n   * @property {(String|Two.Gradient|Two.Texture)} - The value of what all child shapes should be filled in with.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n   */\n  _fill: '#fff',\n\n  /**\n   * @name Two.Group#stroke\n   * @property {(String|Two.Gradient|Two.Texture)} - The value of what all child shapes should be outlined in with.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n   */\n  _stroke: '#000',\n\n  /**\n   * @name Two.Group#linewidth\n   * @property {Number} - The thickness in pixels of the stroke for all child shapes.\n   */\n  _linewidth: 1.0,\n\n  /**\n   * @name Two.Group#opacity\n   * @property {Number} - The opaqueness of all child shapes.\n   * @nota-bene Becomes multiplied by the individual child's opacity property.\n   */\n  _opacity: 1.0,\n\n  /**\n   * @name Two.Group#visible\n   * @property {Boolean} - Display the path or not.\n   * @nota-bene For {@link Two.CanvasRenderer} and {@link Two.WebGLRenderer} when set to false all updating is disabled improving performance dramatically with many objects in the scene.\n   */\n  _visible: true,\n\n  /**\n   * @name Two.Group#cap\n   * @property {String}\n   * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeLinecapProperty}\n   */\n  _cap: 'round',\n\n  /**\n   * @name Two.Group#join\n   * @property {String}\n   * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeLinejoinProperty}\n   */\n  _join: 'round',\n\n  /**\n   * @name Two.Group#miter\n   * @property {String}\n   * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeMiterlimitProperty}\n   */\n  _miter: 4,\n\n  /**\n   * @name Two.Group#closed\n   * @property {Boolean} - Determines whether a final line is drawn between the final point in the `vertices` array and the first point of all child shapes.\n   */\n  _closed: true,\n\n  /**\n   * @name Two.Group#curved\n   * @property {Boolean} - When the child's path is `automatic = true` this boolean determines whether the lines between the points are curved or not.\n   */\n  _curved: false,\n\n  /**\n   * @name Two.Group#automatic\n   * @property {Boolean} - Determines whether or not Two.js should calculate curves, lines, and commands automatically for you or to let the developer manipulate them for themselves.\n   */\n  _automatic: true,\n\n  /**\n   * @name Two.Group#beginning\n   * @property {Number} - Number between zero and one to state the beginning of where the path is rendered.\n   * @description {@link Two.Group#beginning} is a percentage value that represents at what percentage into all child shapes should the renderer start drawing.\n   * @nota-bene This is great for animating in and out stroked paths in conjunction with {@link Two.Group#ending}.\n   */\n  _beginning: 0,\n\n  /**\n   * @name Two.Group#ending\n   * @property {Number} - Number between zero and one to state the ending of where the path is rendered.\n   * @description {@link Two.Group#ending} is a percentage value that represents at what percentage into all child shapes should the renderer start drawing.\n   * @nota-bene This is great for animating in and out stroked paths in conjunction with {@link Two.Group#beginning}.\n   */\n  _ending: 1.0,\n\n  /**\n   * @name Two.Group#length\n   * @property {Number} - The sum of distances between all child lengths.\n   */\n  _length: 0,\n\n  /**\n   * @name Two.Group#mask\n   * @property {Two.Shape} - The Two.js object to clip from a group's rendering.\n   */\n  _mask: null,\n\n  /**\n   * @name Two.Group#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Group}\n   * @description Create a new instance of {@link Two.Group} with the same properties of the current group.\n   */\n  clone: function(parent) {\n\n    // /**\n    //  * TODO: Group has a gotcha in that it's at the moment required to be bound to\n    //  * an instance of two in order to add elements correctly. This needs to\n    //  * be rethought and fixed.\n    //  */\n\n    var clone = new Group();\n    var children = this.children.map(function(child) {\n      return child.clone();\n    });\n\n    clone.add(children);\n\n    clone.opacity = this.opacity;\n\n    if (this.mask) {\n      clone.mask = this.mask;\n    }\n\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n    clone.className = this.className;\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone._update();\n\n  },\n\n  /**\n   * @name Two.Group#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the group.\n   */\n  toObject: function() {\n\n    var result = {\n      children: [],\n      translation: this.translation.toObject(),\n      rotation: this.rotation,\n      scale: this.scale instanceof Vector ? this.scale.toObject() : this.scale,\n      opacity: this.opacity,\n      className: this.className,\n      mask: (this.mask ? this.mask.toObject() : null)\n    };\n\n    if (this.matrix.manual) {\n      result.matrix = this.matrix.toObject();\n    }\n\n    _.each(this.children, function(child, i) {\n      result.children[i] = child.toObject();\n    }, this);\n\n    return result;\n\n  },\n\n  /**\n   * @name Two.Group#corner\n   * @function\n   * @description Orient the children of the group to the upper left-hand corner of that group.\n   */\n  corner: function() {\n\n    var rect = this.getBoundingClientRect(true);\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.translation.x -= rect.left;\n      child.translation.y -= rect.top;\n    }\n\n    if (this.mask) {\n      this.mask.translation.x -= rect.left;\n      this.mask.translation.y -= rect.top;\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Group#center\n   * @function\n   * @description Orient the children of the group to the center of that group.\n   */\n  center: function() {\n\n    var rect = this.getBoundingClientRect(true);\n    var cx = rect.left + rect.width / 2 - this.translation.x;\n    var cy = rect.top + rect.height / 2 - this.translation.y;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      if (child.isShape) {\n        child.translation.x -= cx;\n        child.translation.y -= cy;\n      }\n    }\n\n    if (this.mask) {\n      this.mask.translation.x -= cx;\n      this.mask.translation.y -= cy;\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Group#getById\n   * @function\n   * @description Recursively search for id. Returns the first element found.\n   * @returns {Two.Shape} - Or `null` if nothing is found.\n   */\n  getById: function (id) {\n    var found = null;\n    function search(node) {\n      if (node.id === id) {\n        return node;\n      } else if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n          found = search(node.children[i]);\n          if (found) {\n            return found;\n          }\n        }\n      }\n      return null;\n    }\n    return search(this);\n  },\n\n  /**\n   * @name Two.Group#getByClassName\n   * @function\n   * @description Recursively search for classes. Returns an array of matching elements.\n   * @returns {Two.Shape[]} - Or empty array if nothing is found.\n   */\n  getByClassName: function(className) {\n    var found = [];\n    function search(node) {\n      if (Array.prototype.indexOf.call(node.classList, className) >= 0) {\n        found.push(node);\n      }\n      if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n          var child = node.children[i];\n          search(child);\n        }\n      }\n      return found;\n    }\n    return search(this);\n  },\n\n  /**\n   * @name Two.Group#getByType\n   * @function\n   * @description Recursively search for children of a specific type, e.g. {@link Two.Path}. Pass a reference to this type as the param. Returns an array of matching elements.\n   * @returns {Two.Shape[]} - Empty array if nothing is found.\n   */\n  getByType: function(type) {\n    var found = [];\n    function search(node) {\n      if (node instanceof type) {\n        found.push(node);\n      }\n      if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n          var child = node.children[i];\n          search(child);\n        }\n      }\n      return found;\n    }\n    return search(this);\n  },\n\n  /**\n   * @name Two.Group#add\n   * @function\n   * @param {Two.Shape[]} objects - An array of objects to be added. Can be also be supplied as individual arguments.\n   * @description Add objects to the group.\n   */\n  add: function(objects) {\n\n    // Allow to pass multiple objects either as array or as multiple arguments\n    // If it's an array also create copy of it in case we're getting passed\n    // a childrens array directly.\n    if (!(objects instanceof Array)) {\n      objects = Array.prototype.slice.call(arguments);\n    } else {\n      objects = objects.slice();\n    }\n\n    // Add the objects\n    for (var i = 0; i < objects.length; i++) {\n      var child = objects[i];\n      if (!(child && child.id)) {\n        continue;\n      }\n      var index = Array.prototype.indexOf.call(this.children, child);\n      if (index >= 0) {\n        this.children.splice(index, 1);\n      }\n      this.children.push(child);\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Group#add\n   * @function\n   * @param {Two.Shape[]} objects - An array of objects to be removed. Can be also removed as individual arguments.\n   * @description Remove objects from the group.\n   */\n  remove: function(objects) {\n\n    var l = arguments.length,\n      grandparent = this.parent;\n\n    // Allow to call remove without arguments\n    // This will detach the object from its own parent.\n    if (l <= 0 && grandparent) {\n      grandparent.remove(this);\n      return this;\n    }\n\n    // Allow to pass multiple objects either as array or as multiple arguments\n    // If it's an array also create copy of it in case we're getting passed\n    // a childrens array directly.\n    if (!(objects instanceof Array)) {\n      objects = Array.prototype.slice.call(arguments);\n    } else {\n      objects = objects.slice();\n    }\n\n    // Remove the objects\n    for (var i = 0; i < objects.length; i++) {\n      var object = objects[i];\n      if (!object || !this.children.ids[object.id]) {\n        continue;\n      }\n      var index = this.children.indexOf(object);\n      if (index >= 0) {\n        this.children.splice(index, 1);\n      }\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Group#getBoundingClientRect\n   * @function\n   * @param {Boolean} [shallow=false] - Describes whether to calculate off local matrix or world matrix.\n   * @returns {Object} - Returns object with top, left, right, bottom, width, height attributes.\n   * @description Return an object with top, left, right, bottom, width, and height parameters of the group.\n   */\n  getBoundingClientRect: function(shallow) {\n    var rect, matrix, a, b, c, d, tc, lc, rc, bc;\n\n    // TODO: Update this to not __always__ update. Just when it needs to.\n    this._update(true);\n\n    // Variables need to be defined here, because of nested nature of groups.\n    var left = Infinity, right = -Infinity,\n        top = Infinity, bottom = -Infinity;\n\n    var regex = /texture|gradient/i;\n\n    matrix = shallow ? this._matrix : getComputedMatrix(this);\n\n    for (var i = 0; i < this.children.length; i++) {\n\n      var child = this.children[i];\n\n      if (!child.visible || regex.test(child._renderer.type)) {\n        continue;\n      }\n\n      rect = child.getBoundingClientRect(shallow);\n\n      tc = typeof rect.top !== 'number' || _.isNaN(rect.top) || !isFinite(rect.top);\n      lc = typeof rect.left !== 'number' || _.isNaN(rect.left) || !isFinite(rect.left);\n      rc = typeof rect.right !== 'number' || _.isNaN(rect.right) || !isFinite(rect.right);\n      bc = typeof rect.bottom !== 'number' || _.isNaN(rect.bottom) || !isFinite(rect.bottom);\n\n      if (tc || lc || rc || bc) {\n        continue;\n      }\n\n      top = min$3(rect.top, top);\n      left = min$3(rect.left, left);\n      right = max$3(rect.right, right);\n      bottom = max$3(rect.bottom, bottom);\n\n    }\n\n    if (shallow) {\n\n      a = matrix.multiply(left, top, 1);\n      b = matrix.multiply(left, bottom, 1);\n      c = matrix.multiply(right, top, 1);\n      d = matrix.multiply(right, bottom, 1);\n\n      top = min$3(a.y, b.y, c.y, d.y);\n      left = min$3(a.x, b.x, c.x, d.x);\n      right = max$3(a.x, b.x, c.x, d.x);\n      bottom = max$3(a.y, b.y, c.y, d.y);\n\n    }\n\n    return {\n      top: top,\n      left: left,\n      right: right,\n      bottom: bottom,\n      width: right - left,\n      height: bottom - top\n    };\n\n  },\n\n  /**\n   * @name Two.Group#noFill\n   * @function\n   * @description Apply `noFill` method to all child shapes.\n   */\n  noFill: function() {\n    this.children.forEach(function(child) {\n      child.noFill();\n    });\n    return this;\n  },\n\n  /**\n   * @name Two.Group#noStroke\n   * @function\n   * @description Apply `noStroke` method to all child shapes.\n   */\n  noStroke: function() {\n    this.children.forEach(function(child) {\n      child.noStroke();\n    });\n    return this;\n  },\n\n  /**\n   * @name Two.Group#subdivide\n   * @function\n   * @description Apply `subdivide` method to all child shapes.\n   */\n  subdivide: function() {\n    var args = arguments;\n    this.children.forEach(function(child) {\n      child.subdivide.apply(child, args);\n    });\n    return this;\n  },\n\n  /**\n   * @name Two.Group#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    var i, l, child;\n\n    if (this._flagBeginning || this._flagEnding) {\n\n      var beginning = Math.min(this._beginning, this._ending);\n      var ending = Math.max(this._beginning, this._ending);\n      var length = this.length;\n      var sum = 0;\n\n      var bd = beginning * length;\n      var ed = ending * length;\n\n      for (i = 0; i < this.children.length; i++) {\n\n        child = this.children[i];\n        l = child.length;\n\n        if (bd > sum + l) {\n          child.beginning = 1;\n          child.ending = 1;\n        } else if (ed < sum) {\n          child.beginning = 0;\n          child.ending = 0;\n        } else if (bd > sum && bd < sum + l) {\n          child.beginning = (bd - sum) / l;\n          child.ending = 1;\n        } else if (ed > sum && ed < sum + l) {\n          child.beginning = 0;\n          child.ending = (ed - sum) / l;\n        } else {\n          child.beginning = 0;\n          child.ending = 1;\n        }\n\n        sum += l;\n\n      }\n\n    }\n\n    return Shape.prototype._update.apply(this, arguments);\n\n  },\n\n  /**\n   * @name Two.Group#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    if (this._flagAdditions) {\n      this.additions.length = 0;\n      this._flagAdditions = false;\n    }\n\n    if (this._flagSubtractions) {\n      this.subtractions.length = 0;\n      this._flagSubtractions = false;\n    }\n\n    this._flagOrder = this._flagMask = this._flagOpacity =\n      this._flagBeginning = this._flagEnding = false;\n\n    Shape.prototype.flagReset.call(this);\n\n    return this;\n\n  }\n\n});\n\nGroup.MakeObservable(Group.prototype);\n\n// /**\n//  * Helper function used to sync parent-child relationship within the\n//  * `Two.Group.children` object.\n//  *\n//  * Set the parent of the passed object to another object\n//  * and updates parent-child relationships\n//  * Calling with one arguments will simply remove the parenting\n//  */\nfunction replaceParent(child, newParent) {\n\n  var parent = child.parent;\n  var index;\n\n  if (parent === newParent) {\n    add();\n    return;\n  }\n\n  if (parent && parent.children.ids[child.id]) {\n\n    index = Array.prototype.indexOf.call(parent.children, child);\n    parent.children.splice(index, 1);\n\n    splice();\n\n  }\n\n  if (newParent) {\n    add();\n    return;\n  }\n\n  splice();\n\n  if (parent._flagAdditions && parent.additions.length === 0) {\n    parent._flagAdditions = false;\n  }\n  if (parent._flagSubtractions && parent.subtractions.length === 0) {\n    parent._flagSubtractions = false;\n  }\n\n  delete child.parent;\n\n  function add() {\n\n    if (newParent.subtractions.length > 0) {\n      index = Array.prototype.indexOf.call(newParent.subtractions, child);\n\n      if (index >= 0) {\n        newParent.subtractions.splice(index, 1);\n      }\n    }\n\n    if (newParent.additions.length > 0) {\n      index = Array.prototype.indexOf.call(newParent.additions, child);\n\n      if (index >= 0) {\n        newParent.additions.splice(index, 1);\n      }\n    }\n\n    child.parent = newParent;\n    newParent.additions.push(child);\n    newParent._flagAdditions = true;\n\n  }\n\n  function splice() {\n\n    index = Array.prototype.indexOf.call(parent.additions, child);\n\n    if (index >= 0) {\n      parent.additions.splice(index, 1);\n    }\n\n    index = Array.prototype.indexOf.call(parent.subtractions, child);\n\n    if (index < 0) {\n      parent.subtractions.push(child);\n      parent._flagSubtractions = true;\n    }\n\n  }\n\n}\n\nvar matrix$1 =  new Matrix();\n\n// Constants\nvar emptyArray = [];\nvar max$2 = Math.max,\n  min$2 = Math.min,\n  abs = Math.abs,\n  sin$4 = Math.sin,\n  cos$4 = Math.cos,\n  acos = Math.acos,\n  sqrt = Math.sqrt;\n\n// Returns true if this is a non-transforming matrix\nvar isDefaultMatrix = function (m) {\n  return (m[0] == 1 && m[3] == 0 && m[1] == 0 && m[4] == 1 && m[2] == 0 && m[5] == 0);\n};\n\nvar canvas = {\n\n  isHidden: /(undefined|none|transparent)/i,\n\n  alignments: {\n    left: 'start',\n    middle: 'center',\n    right: 'end'\n  },\n\n  shim: function(elem, name) {\n    elem.tagName = elem.nodeName = name || 'canvas';\n    elem.nodeType = 1;\n    elem.getAttribute = function(prop) {\n      return this[prop];\n    };\n    elem.setAttribute = function(prop, val) {\n      this[prop] = val;\n      return this;\n    };\n    return elem;\n  },\n\n  group: {\n\n    renderChild: function(child) {\n      canvas[child._renderer.type].render.call(child, this.ctx, true, this.clip);\n    },\n\n    render: function(ctx) {\n\n      if (!this._visible) {\n        return this;\n      }\n\n      this._update();\n\n      var matrix = this._matrix.elements;\n      var parent = this.parent;\n      this._renderer.opacity = this._opacity\n        * (parent && parent._renderer ? parent._renderer.opacity : 1);\n\n      var mask = this._mask;\n      // var clip = this._clip;\n\n      var defaultMatrix = isDefaultMatrix(matrix);\n      var shouldIsolate = !defaultMatrix || !!mask;\n\n      if (!this._renderer.context) {\n        this._renderer.context = {};\n      }\n\n      this._renderer.context.ctx = ctx;\n      // this._renderer.context.clip = clip;\n\n      if (shouldIsolate) {\n        ctx.save();\n        if (!defaultMatrix) {\n          ctx.transform(matrix[0], matrix[3], matrix[1],\n            matrix[4], matrix[2], matrix[5]);\n        }\n      }\n\n      if (mask) {\n        canvas[mask._renderer.type].render.call(mask, ctx, true);\n      }\n\n      if (this._opacity > 0 && this._scale !== 0) {\n        for (var i = 0; i < this.children.length; i++) {\n          var child = this.children[i];\n          canvas[child._renderer.type].render.call(child, ctx);\n        }\n      }\n\n      if (shouldIsolate) {\n        ctx.restore();\n      }\n\n      // Commented two-way functionality of clips / masks with groups and\n      // polygons. Uncomment when this bug is fixed:\n      // https://code.google.com/p/chromium/issues/detail?id=370951\n\n      // if (clip) {\n      //   ctx.clip();\n      // }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  path: {\n\n    render: function(ctx, forced, parentClipped) {\n\n      var matrix, stroke, linewidth, fill, opacity, visible, cap, join, miter,\n          closed, commands, length, last, next, prev, a, b, c, d, ux, uy, vx, vy,\n          ar, bl, br, cl, x, y, mask, clip, defaultMatrix, isOffset, dashes, po;\n\n      po = (this.parent && this.parent._renderer)\n        ? this.parent._renderer.opacity : 1;\n      mask = this._mask;\n      clip = this._clip;\n      opacity = this._opacity * (po || 1);\n      visible = this._visible;\n\n      if (!forced && (!visible || clip || opacity === 0)) {\n        return this;\n      }\n\n      this._update();\n\n      matrix = this._matrix.elements;\n      stroke = this._stroke;\n      linewidth = this._linewidth;\n      fill = this._fill;\n      cap = this._cap;\n      join = this._join;\n      miter = this._miter;\n      closed = this._closed;\n      commands = this._renderer.vertices; // Commands\n      length = commands.length;\n      last = length - 1;\n      defaultMatrix = isDefaultMatrix(matrix);\n      dashes = this.dashes;\n\n      // Transform\n      if (!defaultMatrix) {\n        ctx.save();\n        ctx.transform(matrix[0], matrix[3], matrix[1], matrix[4], matrix[2], matrix[5]);\n      }\n\n      // Commented two-way functionality of clips / masks with groups and\n      // polygons. Uncomment when this bug is fixed:\n      // https://code.google.com/p/chromium/issues/detail?id=370951\n      if (mask) {\n        canvas[mask._renderer.type].render.call(mask, ctx, true);\n      }\n\n      // Styles\n      if (fill) {\n        if (typeof fill === 'string') {\n          ctx.fillStyle = fill;\n        } else {\n          canvas[fill._renderer.type].render.call(fill, ctx);\n          ctx.fillStyle = fill._renderer.effect;\n        }\n      }\n      if (stroke) {\n        if (typeof stroke === 'string') {\n          ctx.strokeStyle = stroke;\n        } else {\n          canvas[stroke._renderer.type].render.call(stroke, ctx);\n          ctx.strokeStyle = stroke._renderer.effect;\n        }\n        if (linewidth) {\n          ctx.lineWidth = linewidth;\n        }\n        if (miter) {\n          ctx.miterLimit = miter;\n        }\n        if (join) {\n          ctx.lineJoin = join;\n        }\n        if (!closed && cap) {\n          ctx.lineCap = cap;\n        }\n      }\n      if (typeof opacity === 'number') {\n        ctx.globalAlpha = opacity;\n      }\n\n      if (dashes && dashes.length > 0) {\n        ctx.lineDashOffset = dashes.offset || 0;\n        ctx.setLineDash(dashes);\n      }\n\n      ctx.beginPath();\n\n      for (var i = 0; i < length; i++) {\n\n        b = commands[i];\n\n        x = b.x;\n        y = b.y;\n\n        switch (b.command) {\n\n          case Commands.close:\n            ctx.closePath();\n            break;\n\n          case Commands.arc:\n\n            var rx = b.rx;\n            var ry = b.ry;\n            var xAxisRotation = b.xAxisRotation;\n            var largeArcFlag = b.largeArcFlag;\n            var sweepFlag = b.sweepFlag;\n\n            prev = closed ? mod(i - 1, length) : max$2(i - 1, 0);\n            a = commands[prev];\n\n            var ax = a.x;\n            var ay = a.y;\n\n            canvas.renderSvgArcCommand(ctx, ax, ay, rx, ry, largeArcFlag, sweepFlag, xAxisRotation, x, y);\n            break;\n\n          case Commands.curve:\n\n            prev = closed ? mod(i - 1, length) : Math.max(i - 1, 0);\n            next = closed ? mod(i + 1, length) : Math.min(i + 1, last);\n\n            a = commands[prev];\n            c = commands[next];\n            ar = (a.controls && a.controls.right) || Vector.zero;\n            bl = (b.controls && b.controls.left) || Vector.zero;\n\n            if (a._relative) {\n              vx = (ar.x + a.x);\n              vy = (ar.y + a.y);\n            } else {\n              vx = ar.x;\n              vy = ar.y;\n            }\n\n            if (b._relative) {\n              ux = (bl.x + b.x);\n              uy = (bl.y + b.y);\n            } else {\n              ux = bl.x;\n              uy = bl.y;\n            }\n\n            ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\n\n            if (i >= last && closed) {\n\n              c = d;\n\n              br = (b.controls && b.controls.right) || Vector.zero;\n              cl = (c.controls && c.controls.left) || Vector.zero;\n\n              if (b._relative) {\n                vx = (br.x + b.x);\n                vy = (br.y + b.y);\n              } else {\n                vx = br.x;\n                vy = br.y;\n              }\n\n              if (c._relative) {\n                ux = (cl.x + c.x);\n                uy = (cl.y + c.y);\n              } else {\n                ux = cl.x;\n                uy = cl.y;\n              }\n\n              x = c.x;\n              y = c.y;\n\n              ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\n\n            }\n\n            break;\n\n          case Commands.line:\n            ctx.lineTo(x, y);\n            break;\n\n          case Commands.move:\n            d = b;\n            ctx.moveTo(x, y);\n            break;\n\n        }\n      }\n\n      // Loose ends\n\n      if (closed) {\n        ctx.closePath();\n      }\n\n      if (!clip && !parentClipped) {\n        if (!canvas.isHidden.test(fill)) {\n          isOffset = fill._renderer && fill._renderer.offset;\n          if (isOffset) {\n            ctx.save();\n            ctx.translate(\n              - fill._renderer.offset.x, - fill._renderer.offset.y);\n            ctx.scale(fill._renderer.scale.x, fill._renderer.scale.y);\n          }\n          ctx.fill();\n          if (isOffset) {\n            ctx.restore();\n          }\n        }\n        if (!canvas.isHidden.test(stroke)) {\n          isOffset = stroke._renderer && stroke._renderer.offset;\n          if (isOffset) {\n            ctx.save();\n            ctx.translate(\n              - stroke._renderer.offset.x, - stroke._renderer.offset.y);\n            ctx.scale(stroke._renderer.scale.x, stroke._renderer.scale.y);\n            ctx.lineWidth = linewidth / stroke._renderer.scale.x;\n          }\n          ctx.stroke();\n          if (isOffset) {\n            ctx.restore();\n          }\n        }\n      }\n\n      if (!defaultMatrix) {\n        ctx.restore();\n      }\n\n      if (clip && !parentClipped) {\n        ctx.clip();\n      }\n\n      if (dashes && dashes.length > 0) {\n        ctx.setLineDash(emptyArray);\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  points: {\n\n    render: function(ctx, forced, parentClipped) {\n\n      var me, stroke, linewidth, fill, opacity, visible, size, commands,\n          length, b, x, y, defaultMatrix, isOffset, dashes, po;\n\n      po = (this.parent && this.parent._renderer)\n        ? this.parent._renderer.opacity : 1;\n      opacity = this._opacity * (po || 1);\n      visible = this._visible;\n\n      if (!forced && (!visible || opacity === 0)) {\n        return this;\n      }\n\n      this._update();\n\n      me = this._matrix.elements;\n      stroke = this._stroke;\n      linewidth = this._linewidth;\n      fill = this._fill;\n      commands = this._renderer.collection; // Commands\n      length = commands.length;\n      defaultMatrix = isDefaultMatrix(me);\n      dashes = this.dashes;\n      size = this._size;\n\n      // Transform\n      if (!defaultMatrix) {\n        ctx.save();\n        ctx.transform(me[0], me[3], me[1], me[4], me[2], me[5]);\n      }\n\n      // Styles\n      if (fill) {\n        if (typeof fill === 'string') {\n          ctx.fillStyle = fill;\n        } else {\n          canvas[fill._renderer.type].render.call(fill, ctx);\n          ctx.fillStyle = fill._renderer.effect;\n        }\n      }\n      if (stroke) {\n        if (typeof stroke === 'string') {\n          ctx.strokeStyle = stroke;\n        } else {\n          canvas[stroke._renderer.type].render.call(stroke, ctx);\n          ctx.strokeStyle = stroke._renderer.effect;\n        }\n        if (linewidth) {\n          ctx.lineWidth = linewidth;\n        }\n      }\n      if (typeof opacity === 'number') {\n        ctx.globalAlpha = opacity;\n      }\n\n      if (dashes && dashes.length > 0) {\n        ctx.lineDashOffset = dashes.offset || 0;\n        ctx.setLineDash(dashes);\n      }\n\n      ctx.beginPath();\n\n      var radius = size * 0.5, m;\n\n      if (!this._sizeAttenuation) {\n        getComputedMatrix(this, matrix$1);\n        m = matrix$1.elements;\n        m = decomposeMatrix(m[0], m[3], m[1], m[4], m[2], m[5]);\n        radius /= Math.max(m.scaleX, m.scaleY);\n      }\n\n      for (var i = 0; i < length; i++) {\n\n        b = commands[i];\n\n        x = b.x;\n        y = b.y;\n\n        ctx.moveTo(x + radius, y);\n        ctx.arc(x, y, radius, 0, TWO_PI);\n\n      }\n\n      if (!parentClipped) {\n        if (!canvas.isHidden.test(fill)) {\n          isOffset = fill._renderer && fill._renderer.offset;\n          if (isOffset) {\n            ctx.save();\n            ctx.translate(\n              - fill._renderer.offset.x, - fill._renderer.offset.y);\n            ctx.scale(fill._renderer.scale.x, fill._renderer.scale.y);\n          }\n          ctx.fill();\n          if (isOffset) {\n            ctx.restore();\n          }\n        }\n        if (!canvas.isHidden.test(stroke)) {\n          isOffset = stroke._renderer && stroke._renderer.offset;\n          if (isOffset) {\n            ctx.save();\n            ctx.translate(\n              - stroke._renderer.offset.x, - stroke._renderer.offset.y);\n            ctx.scale(stroke._renderer.scale.x, stroke._renderer.scale.y);\n            ctx.lineWidth = linewidth / stroke._renderer.scale.x;\n          }\n          ctx.stroke();\n          if (isOffset) {\n            ctx.restore();\n          }\n        }\n      }\n\n      // Loose ends\n\n      if (!defaultMatrix) {\n        ctx.restore();\n      }\n\n      if (dashes && dashes.length > 0) {\n        ctx.setLineDash(emptyArray);\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  text: {\n\n    render: function(ctx, forced, parentClipped) {\n\n      var po = (this.parent && this.parent._renderer)\n        ? this.parent._renderer.opacity : 1;\n      var opacity = this._opacity * po;\n      var visible = this._visible;\n      var mask = this._mask;\n      var clip = this._clip;\n\n      if (!forced && (!visible || clip || opacity === 0)) {\n        return this;\n      }\n\n      this._update();\n\n      var matrix = this._matrix.elements;\n      var stroke = this._stroke;\n      var linewidth = this._linewidth;\n      var fill = this._fill;\n      var decoration = this._decoration;\n      var defaultMatrix = isDefaultMatrix(matrix);\n      var isOffset = fill._renderer && fill._renderer.offset\n        && stroke._renderer && stroke._renderer.offset;\n      var dashes = this.dashes;\n      var alignment = canvas.alignments[this._alignment] || this._alignment;\n      var baseline = this._baseline;\n\n      var a, b, c, d, e, sx, sy, x1, y1, x2, y2;\n\n      // Transform\n      if (!defaultMatrix) {\n        ctx.save();\n        ctx.transform(matrix[0], matrix[3], matrix[1], matrix[4], matrix[2], matrix[5]);\n      }\n\n      // Commented two-way functionality of clips / masks with groups and\n      // polygons. Uncomment when this bug is fixed:\n      // https://code.google.com/p/chromium/issues/detail?id=370951\n      if (mask) {\n        canvas[mask._renderer.type].render.call(mask, ctx, true);\n      }\n\n      if (!isOffset) {\n        ctx.font = [this._style, this._weight, this._size + 'px/' +\n          this._leading + 'px', this._family].join(' ');\n      }\n\n      ctx.textAlign = alignment;\n      ctx.textBaseline = baseline;\n\n      // Styles\n      if (fill) {\n        if (typeof fill === 'string') {\n          ctx.fillStyle = fill;\n        } else {\n          canvas[fill._renderer.type].render.call(fill, ctx);\n          ctx.fillStyle = fill._renderer.effect;\n        }\n      }\n      if (stroke) {\n        if (typeof stroke === 'string') {\n          ctx.strokeStyle = stroke;\n        } else {\n          canvas[stroke._renderer.type].render.call(stroke, ctx);\n          ctx.strokeStyle = stroke._renderer.effect;\n        }\n        if (linewidth) {\n          ctx.lineWidth = linewidth;\n        }\n      }\n      if (typeof opacity === 'number') {\n        ctx.globalAlpha = opacity;\n      }\n      if (dashes && dashes.length > 0) {\n        ctx.lineDashOffset = dashes.offset || 0;\n        ctx.setLineDash(dashes);\n      }\n\n      if (!clip && !parentClipped) {\n\n        if (!canvas.isHidden.test(fill)) {\n\n          if (fill._renderer && fill._renderer.offset) {\n\n            sx = fill._renderer.scale.x;\n            sy = fill._renderer.scale.y;\n\n            ctx.save();\n            ctx.translate( - fill._renderer.offset.x,\n              - fill._renderer.offset.y);\n            ctx.scale(sx, sy);\n\n            a = this._size / fill._renderer.scale.y;\n            b = this._leading / fill._renderer.scale.y;\n            ctx.font = [this._style, this._weight, a + 'px/',\n              b + 'px', this._family].join(' ');\n\n            c = fill._renderer.offset.x / fill._renderer.scale.x;\n            d = fill._renderer.offset.y / fill._renderer.scale.y;\n\n            ctx.fillText(this.value, c, d);\n            ctx.restore();\n\n          } else {\n            ctx.fillText(this.value, 0, 0);\n          }\n\n        }\n\n        if (!canvas.isHidden.test(stroke)) {\n\n          if (stroke._renderer && stroke._renderer.offset) {\n\n            sx = stroke._renderer.scale.x;\n            sy = stroke._renderer.scale.y;\n\n            ctx.save();\n            ctx.translate(- stroke._renderer.offset.x,\n              - stroke._renderer.offset.y);\n            ctx.scale(sx, sy);\n\n            a = this._size / stroke._renderer.scale.y;\n            b = this._leading / stroke._renderer.scale.y;\n            ctx.font = [this._style, this._weight, a + 'px/',\n              b + 'px', this._family].join(' ');\n\n            c = stroke._renderer.offset.x / stroke._renderer.scale.x;\n            d = stroke._renderer.offset.y / stroke._renderer.scale.y;\n            e = linewidth / stroke._renderer.scale.x;\n\n            ctx.lineWidth = e;\n            ctx.strokeText(this.value, c, d);\n            ctx.restore();\n\n          } else {\n            ctx.strokeText(this.value, 0, 0);\n          }\n        }\n      }\n\n      // Handle text-decoration\n      if (/(underline|strikethrough)/i.test(decoration)) {\n\n        var metrics = ctx.measureText(this.value);\n        var scalar = 1;\n\n        switch (decoration) {\n          case 'underline':\n            y1 = metrics.actualBoundingBoxAscent;\n            y2 = metrics.actualBoundingBoxAscent;\n            break;\n          case 'strikethrough':\n            y1 = 0;\n            y2 = 0;\n            scalar = 0.5;\n            break;\n        }\n\n        switch (baseline) {\n          case 'top':\n            y1 += this._size * scalar;\n            y2 += this._size * scalar;\n            break;\n          case 'baseline':\n          case 'bottom':\n            y1 -= this._size * scalar;\n            y2 -= this._size * scalar;\n            break;\n        }\n\n        switch (alignment) {\n          case 'left':\n          case 'start':\n            x1 = 0;\n            x2 = metrics.width;\n            break;\n          case 'right':\n          case 'end':\n            x1 = - metrics.width;\n            x2 = 0;\n            break;\n          default:\n            x1 = - metrics.width / 2;\n            x2 = metrics.width / 2;\n        }\n\n        ctx.lineWidth = Math.max(Math.floor(this._size / 15), 1);\n        ctx.strokeStyle = ctx.fillStyle;\n\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n\n      }\n\n      if (!defaultMatrix) {\n        ctx.restore();\n      }\n\n      // TODO: Test for text\n      if (clip && !parentClipped) {\n        ctx.clip();\n      }\n\n      if (dashes && dashes.length > 0) {\n        ctx.setLineDash(emptyArray);\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  'linear-gradient': {\n\n    render: function(ctx) {\n\n      this._update();\n\n      if (!this._renderer.effect || this._flagEndPoints || this._flagStops) {\n\n        this._renderer.effect = ctx.createLinearGradient(\n          this.left._x, this.left._y,\n          this.right._x, this.right._y\n        );\n\n        for (var i = 0; i < this.stops.length; i++) {\n          var stop = this.stops[i];\n          this._renderer.effect.addColorStop(stop._offset, stop._color);\n        }\n\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  'radial-gradient': {\n\n    render: function(ctx) {\n\n      this._update();\n\n      if (!this._renderer.effect || this._flagCenter || this._flagFocal\n          || this._flagRadius || this._flagStops) {\n\n        this._renderer.effect = ctx.createRadialGradient(\n          this.center._x, this.center._y, 0,\n          this.focal._x, this.focal._y, this._radius\n        );\n\n        for (var i = 0; i < this.stops.length; i++) {\n          var stop = this.stops[i];\n          this._renderer.effect.addColorStop(stop._offset, stop._color);\n        }\n\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  texture: {\n\n    render: function(ctx) {\n\n      this._update();\n\n      var image = this.image;\n\n      if (!this._renderer.effect || ((this._flagLoaded || this._flagImage || this._flagVideo || this._flagRepeat) && this.loaded)) {\n        this._renderer.effect = ctx.createPattern(this.image, this._repeat);\n      }\n\n      if (this._flagOffset || this._flagLoaded || this._flagScale) {\n\n        if (!(this._renderer.offset instanceof Vector)) {\n          this._renderer.offset = new Vector();\n        }\n\n        this._renderer.offset.x = - this._offset.x;\n        this._renderer.offset.y = - this._offset.y;\n\n        if (image) {\n\n          this._renderer.offset.x += image.width / 2;\n          this._renderer.offset.y += image.height / 2;\n\n          if (this._scale instanceof Vector) {\n            this._renderer.offset.x *= this._scale.x;\n            this._renderer.offset.y *= this._scale.y;\n          } else {\n            this._renderer.offset.x *= this._scale;\n            this._renderer.offset.y *= this._scale;\n          }\n        }\n\n      }\n\n      if (this._flagScale || this._flagLoaded) {\n\n        if (!(this._renderer.scale instanceof Vector)) {\n          this._renderer.scale = new Vector();\n        }\n\n        if (this._scale instanceof Vector) {\n          this._renderer.scale.copy(this._scale);\n        } else {\n          this._renderer.scale.set(this._scale, this._scale);\n        }\n\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  renderSvgArcCommand: function(ctx, ax, ay, rx, ry, largeArcFlag, sweepFlag, xAxisRotation, x, y) {\n\n    xAxisRotation = xAxisRotation * Math.PI / 180;\n\n    // Ensure radii are positive\n    rx = abs(rx);\n    ry = abs(ry);\n\n    // Compute (x1′, y1′)\n    var dx2 = (ax - x) / 2.0;\n    var dy2 = (ay - y) / 2.0;\n    var x1p = cos$4(xAxisRotation) * dx2 + sin$4(xAxisRotation) * dy2;\n    var y1p = - sin$4(xAxisRotation) * dx2 + cos$4(xAxisRotation) * dy2;\n\n    // Compute (cx′, cy′)\n    var rxs = rx * rx;\n    var rys = ry * ry;\n    var x1ps = x1p * x1p;\n    var y1ps = y1p * y1p;\n\n    // Ensure radii are large enough\n    var cr = x1ps / rxs + y1ps / rys;\n\n    if (cr > 1) {\n\n      // scale up rx,ry equally so cr == 1\n      var s = sqrt(cr);\n      rx = s * rx;\n      ry = s * ry;\n      rxs = rx * rx;\n      rys = ry * ry;\n\n    }\n\n    var dq = (rxs * y1ps + rys * x1ps);\n    var pq = (rxs * rys - dq) / dq;\n    var q = sqrt(max$2(0, pq));\n    if (largeArcFlag === sweepFlag) q = - q;\n    var cxp = q * rx * y1p / ry;\n    var cyp = - q * ry * x1p / rx;\n\n    // Step 3: Compute (cx, cy) from (cx′, cy′)\n    var cx = cos$4(xAxisRotation) * cxp\n      - sin$4(xAxisRotation) * cyp + (ax + x) / 2;\n    var cy = sin$4(xAxisRotation) * cxp\n      + cos$4(xAxisRotation) * cyp + (ay + y) / 2;\n\n    // Step 4: Compute θ1 and Δθ\n    var startAngle = svgAngle(1, 0, (x1p - cxp) / rx, (y1p - cyp) / ry);\n    var delta = svgAngle((x1p - cxp) / rx, (y1p - cyp) / ry,\n      (- x1p - cxp) / rx, (- y1p - cyp) / ry) % TWO_PI;\n\n    var endAngle = startAngle + delta;\n\n    var clockwise = sweepFlag === 0;\n\n    renderArcEstimate(ctx, cx, cy, rx, ry, startAngle, endAngle,\n      clockwise, xAxisRotation);\n\n  }\n\n};\n\n/**\n * @name Two.CanvasRenderer\n * @class\n * @extends Two.Events\n * @param {Object} [parameters] - This object is inherited when constructing a new instance of {@link Two}.\n * @param {Element} [parameters.domElement] - The `<canvas />` to draw to. If none given a new one will be constructed.\n * @param {Boolean} [parameters.overdraw] - Determines whether the canvas should clear the background or not. Defaults to `true`.\n * @param {Boolean} [parameters.smoothing=true] - Determines whether the canvas should antialias drawing. Set it to `false` when working with pixel art. `false` can lead to better performance, since it would use a cheaper interpolation algorithm.\n * @description This class is used by {@link Two} when constructing with `type` of `Two.Types.canvas`. It takes Two.js' scenegraph and renders it to a `<canvas />`.\n */\nfunction Renderer$2(params) {\n\n  // It might not make a big difference on GPU backed canvases.\n  var smoothing = (params.smoothing !== false);\n\n  /**\n   * @name Two.CanvasRenderer#domElement\n   * @property {Element} - The `<canvas />` associated with the Two.js scene.\n   */\n  this.domElement = params.domElement || document.createElement('canvas');\n\n  /**\n   * @name Two.CanvasRenderer#ctx\n   * @property {Canvas2DContext} - Associated two dimensional context to render on the `<canvas />`.\n   */\n  this.ctx = this.domElement.getContext('2d');\n\n  /**\n   * @name Two.CanvasRenderer#overdraw\n   * @property {Boolean} - Determines whether the canvas clears the background each draw call.\n   * @default true\n   */\n  this.overdraw = params.overdraw || false;\n\n  if (typeof this.ctx.imageSmoothingEnabled !== 'undefined') {\n    this.ctx.imageSmoothingEnabled = smoothing;\n  }\n\n  /**\n   * @name Two.CanvasRenderer#scene\n   * @property {Two.Group} - The root group of the scenegraph.\n   */\n  this.scene = new Group();\n  this.scene.parent = this;\n}\n\n\n_.extend(Renderer$2, {\n\n  /**\n   * @name Two.CanvasRenderer.Utils\n   * @property {Object} - A massive object filled with utility functions and properties to render Two.js objects to a `<canvas />`.\n   */\n  Utils: canvas\n\n});\n\n_.extend(Renderer$2.prototype, Events, {\n\n  constructor: Renderer$2,\n\n  /**\n   * @name Two.CanvasRenderer#setSize\n   * @function\n   * @fires resize\n   * @param {Number} width - The new width of the renderer.\n   * @param {Number} height - The new height of the renderer.\n   * @param {Number} [ratio] - The new pixel ratio (pixel density) of the renderer. Defaults to calculate the pixel density of the user's screen.\n   * @description Change the size of the renderer.\n   */\n  setSize: function(width, height, ratio) {\n\n    this.width = width;\n    this.height = height;\n\n    this.ratio = typeof ratio === 'undefined' ? getRatio(this.ctx) : ratio;\n\n    this.domElement.width = width * this.ratio;\n    this.domElement.height = height * this.ratio;\n\n    if (this.domElement.style) {\n      _.extend(this.domElement.style, {\n        width: width + 'px',\n        height: height + 'px'\n      });\n    }\n\n    return this.trigger(Events.Types.resize, width, height, ratio);\n\n  },\n\n  /**\n   * @name Two.CanvasRenderer#render\n   * @function\n   * @description Render the current scene to the `<canvas />`.\n   */\n  render: function() {\n\n    var isOne = this.ratio === 1;\n\n    if (!isOne) {\n      this.ctx.save();\n      this.ctx.scale(this.ratio, this.ratio);\n    }\n\n    if (!this.overdraw) {\n      this.ctx.clearRect(0, 0, this.width, this.height);\n    }\n\n    canvas.group.render.call(this.scene, this.ctx);\n\n    if (!isOne) {\n      this.ctx.restore();\n    }\n\n    return this;\n\n  }\n\n});\n\nfunction renderArcEstimate(ctx, ox, oy, rx, ry, startAngle, endAngle, clockwise, xAxisRotation) {\n\n  var epsilon = Curve.Tolerance.epsilon;\n  var deltaAngle = endAngle - startAngle;\n  var samePoints = Math.abs(deltaAngle) < epsilon;\n\n  // ensures that deltaAngle is 0 .. 2 PI\n  deltaAngle = mod(deltaAngle, TWO_PI);\n\n  if (deltaAngle < epsilon) {\n\n    if (samePoints) {\n\n      deltaAngle = 0;\n\n    } else {\n\n      deltaAngle = TWO_PI;\n\n    }\n\n  }\n\n  if (clockwise === true && ! samePoints) {\n\n    if (deltaAngle === TWO_PI) {\n\n      deltaAngle = - TWO_PI;\n\n    } else {\n\n      deltaAngle = deltaAngle - TWO_PI;\n\n    }\n\n  }\n\n  for (var i = 0; i < Constants.Resolution; i++) {\n\n    var t = i / (Constants.Resolution - 1);\n\n    var angle = startAngle + t * deltaAngle;\n    var x = ox + rx * Math.cos(angle);\n    var y = oy + ry * Math.sin(angle);\n\n    if (xAxisRotation !== 0) {\n\n      var cos = Math.cos(xAxisRotation);\n      var sin = Math.sin(xAxisRotation);\n\n      var tx = x - ox;\n      var ty = y - oy;\n\n      // Rotate the point about the center of the ellipse.\n      x = tx * cos - ty * sin + ox;\n      y = tx * sin + ty * cos + oy;\n\n    }\n\n    ctx.lineTo(x, y);\n\n  }\n\n}\n\nfunction svgAngle(ux, uy, vx, vy) {\n\n  var dot = ux * vx + uy * vy;\n  var len = sqrt(ux * ux + uy * uy) *  sqrt(vx * vx + vy * vy);\n  // floating point precision, slightly over values appear\n  var ang = acos(max$2(-1, min$2(1, dot / len)));\n  if ((ux * vy - uy * vx) < 0) {\n    ang = - ang;\n  }\n\n  return ang;\n\n}\n\nvar CanvasShim = {\n\n  Image: null,\n\n  isHeadless: false,\n\n  /**\n   * @name Two.Utils.shim\n   * @function\n   * @param {canvas} canvas - The instanced `Canvas` object provided by `node-canvas`.\n   * @param {Image} [Image] - The prototypical `Image` object provided by `node-canvas`. This is only necessary to pass if you're going to load bitmap imagery.\n   * @returns {canvas} Returns the instanced canvas object you passed from with additional attributes needed for Two.js.\n   * @description Convenience method for defining all the dependencies from the npm package `node-canvas`. See [node-canvas](https://github.com/Automattic/node-canvas) for additional information on setting up HTML5 `<canvas />` drawing in a node.js environment.\n   */\n  shim: function(canvas, Image) {\n    Renderer$2.Utils.shim(canvas);\n    if (typeof Image !== 'undefined') {\n      CanvasShim.Image = Image;\n    }\n    CanvasShim.isHeadless = true;\n    return canvas;\n  }\n\n};\n\nvar dom = {\n\n  hasEventListeners: typeof root$1.addEventListener === 'function',\n\n  bind: function(elem, event, func, bool) {\n    if (this.hasEventListeners) {\n      elem.addEventListener(event, func, !!bool);\n    } else {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  unbind: function(elem, event, func, bool) {\n    if (dom.hasEventListeners) {\n      elem.removeEventListeners(event, func, !!bool);\n    } else {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  getRequestAnimationFrame: function() {\n\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n    var request = root$1.requestAnimationFrame, cancel;\n\n    if(!request) {\n      for (var i = 0; i < vendors.length; i++) {\n        request = root$1[vendors[i] + 'RequestAnimationFrame'] || request;\n        cancel = root$1[vendors[i] + 'CancelAnimationFrame']\n          || root$1[vendors[i] + 'CancelRequestAnimationFrame'] || cancel;\n      }\n\n      request = request || function(callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = root$1.setTimeout(function() { callback(currTime + timeToCall); }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    }\n\n    return request;\n\n  }\n\n};\n\nvar temp = (root$1.document ? root$1.document.createElement('div') : {});\ntemp.id = 'help-two-load';\n\nObject.defineProperty(dom, 'temp', {\n  enumerable: true,\n  get: function() {\n    if (_.isElement(temp) && !root$1.document.head.contains(temp)) {\n      _.extend(temp.style, {\n        display: 'none'\n      });\n      root$1.document.head.appendChild(temp);\n    }\n    return temp;\n  }\n});\n\n/**\n * @name Two.Utils.Error\n * @class\n * @description Custom error throwing for Two.js specific identification.\n */\nfunction TwoError(message) {\n  this.name = 'Two.js';\n  this.message = message;\n}\n\nTwoError.prototype = new Error();\n\n_.extend(TwoError.prototype, {\n  constructor: TwoError\n});\n\n/**\n * @name Two.Utils.defineGetterSetter\n * @function\n * @this Two#\n * @param {String} property - The property to add an enumerable getter / setter to.\n * @description Convenience function to setup the flag based getter / setter that most properties are defined as in Two.js.\n */\nvar defineGetterSetter = function(property) {\n\n  var object = this;\n  var secret = '_' + property;\n  var flag = '_flag' + property.charAt(0).toUpperCase() + property.slice(1);\n\n  Object.defineProperty(object, property, {\n    enumerable: true,\n    get: function() {\n      return this[secret];\n    },\n    set: function(v) {\n      this[secret] = v;\n      this[flag] = true;\n    }\n  });\n\n};\n\n/**\n * @name Two.Registry\n * @class\n * @description An arbitrary class to manage a directory of things. Mainly used for keeping tabs of textures in Two.js.\n */\nfunction Registry() {\n\n  this.map = {};\n\n}\n\n_.extend(Registry.prototype, {\n\n  constructor: Registry,\n\n  /**\n   * @name Two.Registry#add\n   * @function\n   * @param {String} id - A unique identifier.\n   * @param value - Any type of variable to be registered to the directory.\n   * @description Adds any value to the directory. Assigned by the `id`.\n   */\n  add: function(id, obj) {\n    this.map[id] = obj;\n    return this;\n  },\n\n  /**\n   * @name Two.Registry#remove\n   * @function\n   * @param {String} id - A unique identifier.\n   * @description Remove any value from the directory by its `id`.\n   */\n  remove: function(id) {\n    delete this.map[id];\n    return this;\n  },\n\n  /**\n   * @name Two.Registry#get\n   * @function\n   * @param {String} id - A unique identifier.\n   * @returns {?Object} The associated value. If unavailable then `undefined` is returned.\n   * @description Get a registered value by its `id`.\n   */\n  get: function(id) {\n    return this.map[id];\n  },\n\n  /**\n   * @name Two.Registry#contains\n   * @function\n   * @param {String} id - A unique identifier.\n   * @returns {Boolean}\n   * @description Convenience method to see if a value is registered to an `id` already.\n   */\n  contains: function(id) {\n    return id in this.map;\n  }\n\n});\n\n/**\n * @name Two.Stop\n * @class\n * @param {Number} [offset] - The offset percentage of the stop represented as a zero-to-one value. Default value flip flops from zero-to-one as new stops are created.\n * @param {String} [color] - The color of the stop. Default value flip flops from white to black as new stops are created.\n * @param {Number} [opacity] - The opacity value. Default value is 1, cannot be lower than 0.\n * @nota-bene Used specifically in conjunction with {@link Two.Gradient}s to control color graduation.\n */\nfunction Stop(offset, color, opacity) {\n\n  /**\n   * @name Two.Stop#renderer\n   * @property {Object}\n   * @description Object access to store relevant renderer specific variables. Warning: manipulating this object can create unintended consequences.\n   * @nota-bene With the {@link Two.SvgRenderer} you can access the underlying SVG element created via `shape.renderer.elem`.\n   */\n  this.renderer = {};\n  this._renderer.type = 'stop';\n\n  /**\n   * @name Two.Stop#offset\n   * @property {Number} - The offset percentage of the stop represented as a zero-to-one value.\n   */\n  this.offset = typeof offset === 'number' ? offset\n    : Stop.Index <= 0 ? 0 : 1;\n\n  /**\n   * @name Two.Stop#opacity\n   * @property {Number} - The alpha percentage of the stop represented as a zero-to-one value.\n   */\n  this.opacity = typeof opacity === 'number' ? opacity : 1;\n\n  /**\n   * @name Two.Stop#color\n   * @property {String} - The color of the stop.\n   */\n  this.color = (typeof color === 'string') ? color\n    : Stop.Index <= 0 ? '#fff' : '#000';\n\n  Stop.Index = (Stop.Index + 1) % 2;\n\n}\n\n_.extend(Stop, {\n\n  /**\n   * @name Two.Stop.Index\n   * @property {Number} - The current index being referenced for calculating a stop's default offset value.\n   */\n  Index: 0,\n\n  /**\n   * @name Two.Stop.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Stop}.\n   */\n  Properties: [\n    'offset',\n    'opacity',\n    'color'\n  ],\n\n  /**\n   * @name Two.Stop.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Stop} to any object. Handy if you'd like to extend the {@link Two.Stop} class on a custom class.\n   */\n  MakeObservable: function(object) {\n\n    _.each(Stop.Properties, function(property) {\n\n      var object = this;\n      var secret = '_' + property;\n      var flag = '_flag' + property.charAt(0).toUpperCase() + property.slice(1);\n\n      Object.defineProperty(object, property, {\n        enumerable: true,\n        get: function() {\n          return this[secret];\n        },\n        set: function(v) {\n          this[secret] = v;\n          this[flag] = true;\n          if (this.parent) {\n            this.parent._flagStops = true;\n          }\n        }\n      });\n\n    }, object);\n\n    Object.defineProperty(object, 'renderer', {\n\n      enumerable: false,\n\n      get: function() {\n        return this._renderer;\n      },\n\n      set: function(obj) {\n        this._renderer = obj;\n      }\n\n    });\n\n  }\n\n});\n\n_.extend(Stop.prototype, Events, {\n\n  constructor: Stop,\n\n  /**\n   * @name Two.Stop#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Stop}\n   * @description Create a new instance of {@link Two.Stop} with the same properties of the current path.\n   */\n  clone: function() {\n\n    var clone = new Stop();\n\n    _.each(Stop.Properties, function(property) {\n      clone[property] = this[property];\n    }, this);\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.Stop#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var result = {};\n\n    _.each(Stop.Properties, function(k) {\n      result[k] = this[k];\n    }, this);\n\n    return result;\n\n  },\n\n  /**\n   * @name Two.Stop#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagOffset = this._flagColor = this._flagOpacity = false;\n\n    return this;\n\n  }\n\n});\n\nStop.MakeObservable(Stop.prototype);\n\n/**\n * @name Two.Gradient\n * @class\n * @param {Two.Stop[]} [stops] - A list of {@link Two.Stop}s that contain the gradient fill pattern for the gradient.\n * @description This is the base class for constructing different types of gradients with Two.js. The two common gradients are {@link Two.LinearGradient} and {@link Two.RadialGradient}.\n */\nfunction Gradient(stops) {\n\n  /**\n   * @name Two.Gradient#renderer\n   * @property {Object}\n   * @description Object access to store relevant renderer specific variables. Warning: manipulating this object can create unintended consequences.\n   * @nota-bene With the {@link Two.SvgRenderer} you can access the underlying SVG element created via `shape.renderer.elem`.\n   */\n  this.renderer = {};\n  this._renderer.type = 'gradient';\n\n  /**\n   * @name Two.Gradient#id\n   * @property {String} - Session specific unique identifier.\n   * @nota-bene In the {@link Two.SvgRenderer} change this to change the underlying SVG element's id too.\n   */\n  this.id = Constants.Identifier + Constants.uniqueId();\n  this.classList = [];\n\n  this._renderer.flagStops = Gradient.FlagStops.bind(this);\n  this._renderer.bindStops = Gradient.BindStops.bind(this);\n  this._renderer.unbindStops = Gradient.UnbindStops.bind(this);\n\n  /**\n   * @name Two.Gradient#spread\n   * @property {String} - Indicates what happens if the gradient starts or ends inside the bounds of the target rectangle. Possible values are `'pad'`, `'reflect'`, and `'repeat'`.\n   * @see {@link https://www.w3.org/TR/SVG11/pservers.html#LinearGradientElementSpreadMethodAttribute} for more information\n   */\n  this.spread = 'pad';\n\n  /**\n   * @name Two.Gradient#stops\n   * @property {Two.Stop[]} - An ordered list of {@link Two.Stop}s for rendering the gradient.\n   */\n  if (stops) {\n    this.stops = stops;\n  }\n\n}\n\n_.extend(Gradient, {\n\n  /**\n   * @name Two.Gradient.Stop\n   * @see {@link Two.Stop}\n   */\n  Stop: Stop,\n\n  /**\n   * @name Two.Gradient.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Gradient}.\n   */\n  Properties: [\n    'spread'\n  ],\n\n  /**\n   * @name Two.Gradient.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Gradient} to any object. Handy if you'd like to extend the {@link Two.Gradient} class on a custom class.\n   */\n  MakeObservable: function(object) {\n\n    _.each(Gradient.Properties, defineGetterSetter, object);\n\n    Object.defineProperty(object, 'stops', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._stops;\n      },\n\n      set: function(stops) {\n\n        var bindStops = this._renderer.bindStops;\n        var unbindStops = this._renderer.unbindStops;\n\n        // Remove previous listeners\n        if (this._stops) {\n          this._stops\n            .unbind(Events.Types.insert, bindStops)\n            .unbind(Events.Types.remove, unbindStops);\n        }\n\n        // Create new Collection with copy of Stops\n        this._stops = new Collection((stops || []).slice(0));\n\n        // Listen for Collection changes and bind / unbind\n        this._stops\n          .bind(Events.Types.insert, bindStops)\n          .bind(Events.Types.remove, unbindStops);\n\n        // Bind Initial Stops\n        bindStops(this._stops);\n\n      }\n\n    });\n\n    Object.defineProperty(object, 'renderer', {\n\n      enumerable: false,\n\n      get: function() {\n        return this._renderer;\n      },\n\n      set: function(obj) {\n        this._renderer = obj;\n      }\n\n    });\n\n    Object.defineProperty(object, 'id', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._id;\n      },\n\n      set: function(v) {\n        this._id = v;\n      }\n\n    });\n\n  },\n\n  /**\n   * @name Two.Gradient.FlagStops\n   * @function\n   * @description Cached method to let renderers know stops have been updated on a {@link Two.Gradient}.\n   */\n  FlagStops: function() {\n    this._flagStops = true;\n  },\n\n  /**\n   * @name Two.Gradient.BindVertices\n   * @function\n   * @description Cached method to let {@link Two.Gradient} know vertices have been added to the instance.\n   */\n  BindStops: function(items) {\n\n    // This function is called a lot\n    // when importing a large SVG\n    var i = items.length;\n    while(i--) {\n      items[i].bind(Events.Types.change, this._renderer.flagStops);\n      items[i].parent = this;\n    }\n\n    this._renderer.flagStops();\n\n  },\n\n  /**\n   * @name Two.Gradient.UnbindStops\n   * @function\n   * @description Cached method to let {@link Two.Gradient} know vertices have been removed from the instance.\n   */\n  UnbindStops: function(items) {\n\n    var i = items.length;\n    while(i--) {\n      items[i].unbind(Events.Types.change, this._renderer.flagStops);\n      delete items[i].parent;\n    }\n\n    this._renderer.flagStops();\n\n  }\n\n});\n\n_.extend(Gradient.prototype, Events, {\n\n  constructor: Gradient,\n\n  /**\n   * @name Two.Gradient#_flagId\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Gradient#id} needs updating.\n   */\n  _flagId: false,\n\n  /**\n   * @name Two.Gradient#_flagStops\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Gradient#stops} needs updating.\n   */\n  _flagStops: false,\n  /**\n   * @name Two.Gradient#_flagSpread\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Gradient#spread} needs updating.\n   */\n  _flagSpread: false,\n\n  _id: '',\n\n  /**\n   * @name Two.Gradient#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Gradient}\n   * @description Create a new instance of {@link Two.Gradient} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var stops = this.stops.map(function(s) {\n      return s.clone();\n    });\n\n    var clone = new Gradient(stops);\n\n    _.each(Gradient.Properties, function(k) {\n      clone[k] = this[k];\n    }, this);\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.Gradient#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var result = {\n      stops: this.stops.map(function(s) {\n        return s.toObject();\n      })\n    };\n\n    _.each(Gradient.Properties, function(k) {\n      result[k] = this[k];\n    }, this);\n\n    return result;\n\n  },\n\n  /**\n   * @name Two.Gradient#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagSpread || this._flagStops) {\n      this.trigger(Events.Types.change);\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Gradient#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagSpread = this._flagStops = false;\n\n    return this;\n\n  }\n\n});\n\nGradient.MakeObservable(Gradient.prototype);\n\n/**\n * @name Two.LinearGradient\n * @class\n * @extends Two.Gradient\n * @param {Number} [x1=0] - The x position of the first end point of the linear gradient.\n * @param {Number} [y1=0] - The y position of the first end point of the linear gradient.\n * @param {Number} [x2=0] - The x position of the second end point of the linear gradient.\n * @param {Number} [y2=0] - The y position of the second end point of the linear gradient.\n * @param {Two.Stop[]} [stops] - A list of {@link Two.Stop}s that contain the gradient fill pattern for the gradient.\n * @nota-bene The linear gradient lives within the space of the parent object's matrix space.\n */\nfunction LinearGradient(x1, y1, x2, y2, stops) {\n\n  Gradient.call(this, stops);\n\n  this._renderer.type = 'linear-gradient';\n\n  var flagEndPoints = LinearGradient.FlagEndPoints.bind(this);\n\n  /**\n   * @name Two.LinearGradient#left\n   * @property {Two.Vector} - The x and y value for where the first end point is placed on the canvas.\n   */\n  this.left = new Vector().bind(Events.Types.change, flagEndPoints);\n  /**\n   * @name Two.LinearGradient#right\n   * @property {Two.Vector} - The x and y value for where the second end point is placed on the canvas.\n   */\n  this.right = new Vector().bind(Events.Types.change, flagEndPoints);\n\n  if (typeof x1 === 'number') {\n    this.left.x = x1;\n  }\n  if (typeof y1 === 'number') {\n    this.left.y = y1;\n  }\n  if (typeof x2 === 'number') {\n    this.right.x = x2;\n  }\n  if (typeof y2 === 'number') {\n    this.right.y = y2;\n  }\n\n}\n\n_.extend(LinearGradient, {\n\n  /**\n   * @name Two.LinearGradient.Stop\n   * @see {@link Two.Stop}\n   */\n  Stop: Stop,\n\n  /**\n   * @name Two.LinearGradient.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.LinearGradient} to any object. Handy if you'd like to extend the {@link Two.LinearGradient} class on a custom class.\n   */\n  MakeObservable: function(object) {\n    Gradient.MakeObservable(object);\n  },\n\n  /**\n   * @name Two.LinearGradient.FlagEndPoints\n   * @function\n   * @description Cached method to let renderers know end points have been updated on a {@link Two.LinearGradient}.\n   */\n  FlagEndPoints: function() {\n    this._flagEndPoints = true;\n  }\n\n});\n\n_.extend(LinearGradient.prototype, Gradient.prototype, {\n\n  constructor: LinearGradient,\n\n  /**\n   * @name Two.LinearGradient#_flagEndPoints\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.LinearGradient#left} or {@link Two.LinearGradient#right} changed and needs to update.\n   */\n  _flagEndPoints: false,\n\n  /**\n   * @name Two.LinearGradient#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Gradient}\n   * @description Create a new instance of {@link Two.LinearGradient} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var stops = this.stops.map(function(stop) {\n      return stop.clone();\n    });\n\n    var clone = new LinearGradient(this.left._x, this.left._y,\n      this.right._x, this.right._y, stops);\n\n    _.each(Gradient.Properties, function(k) {\n      clone[k] = this[k];\n    }, this);\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.LinearGradient#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var result = Gradient.prototype.toObject.call(this);\n\n    result.left = this.left.toObject();\n    result.right = this.right.toObject();\n\n    return result;\n\n  },\n\n  /**\n   * @name Two.LinearGradient#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagEndPoints || this._flagSpread || this._flagStops) {\n      this.trigger(Events.Types.change);\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.LinearGradient#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagEndPoints = false;\n\n    Gradient.prototype.flagReset.call(this);\n\n    return this;\n\n  }\n\n});\n\nLinearGradient.MakeObservable(LinearGradient.prototype);\n\n/**\n * @name Two.RadialGradient\n * @class\n * @extends Two.Gradient\n * @param {Number} [x=0] - The x position of the origin of the radial gradient.\n * @param {Number} [y=0] - The y position of the origin of the radial gradient.\n * @param {Number} [radius=0] - The radius of the radial gradient.\n * @param {Two.Stop[]} [stops] - A list of {@link Two.Stop}s that contain the gradient fill pattern for the gradient.\n * @param {Number} [focalX=0] - The x position of the focal point on the radial gradient.\n * @param {Number} [focalY=0] - The y position of the focal point on the radial gradient.\n * @nota-bene The radial gradient lives within the space of the parent object's matrix space.\n */\nfunction RadialGradient(cx, cy, r, stops, fx, fy) {\n\n  Gradient.call(this, stops);\n\n  this._renderer.type = 'radial-gradient';\n\n  /**\n   * @name Two.RadialGradient#center\n   * @property {Two.Vector} - The x and y value for where the origin of the radial gradient is.\n   */\n  this.center = new Vector()\n    .bind(Events.Types.change, (function() {\n      this._flagCenter = true;\n    }).bind(this));\n\n  this.radius = typeof r === 'number' ? r : 20;\n\n  /**\n   * @name Two.RadialGradient#focal\n   * @property {Two.Vector} - The x and y value for where the focal point of the radial gradient is.\n   * @nota-bene This effects the spray or spread of the radial gradient.\n   */\n  this.focal = new Vector()\n    .bind(Events.Types.change, (function() {\n      this._flagFocal = true;\n    }).bind(this));\n\n  if (typeof cx === 'number') {\n    this.center.x = cx;\n  }\n  if (typeof cy === 'number') {\n    this.center.y = cy;\n  }\n\n  this.focal.copy(this.center);\n\n  if (typeof fx === 'number') {\n    this.focal.x = fx;\n  }\n  if (typeof fy === 'number') {\n    this.focal.y = fy;\n  }\n\n}\n\n_.extend(RadialGradient, {\n\n  /**\n   * @name Two.RadialGradient.Stop\n   * @see {@link Two.Stop}\n   */\n  Stop: Stop,\n\n  /**\n   * @name Two.RadialGradient.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.RadialGradient}.\n   */\n  Properties: [\n    'radius'\n  ],\n\n  /**\n   * @name Two.RadialGradient.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.RadialGradient} to any object. Handy if you'd like to extend the {@link Two.RadialGradient} class on a custom class.\n   */\n  MakeObservable: function(object) {\n\n    Gradient.MakeObservable(object);\n\n    _.each(RadialGradient.Properties, defineGetterSetter, object);\n\n  }\n\n});\n\n_.extend(RadialGradient.prototype, Gradient.prototype, {\n\n  constructor: RadialGradient,\n\n  /**\n   * @name Two.RadialGradient#_flagRadius\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.RadialGradient#radius} changed and needs to update.\n   */\n  _flagRadius: false,\n  /**\n   * @name Two.RadialGradient#_flagCenter\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.RadialGradient#center} changed and needs to update.\n   */\n  _flagCenter: false,\n  /**\n   * @name Two.RadialGradient#_flagFocal\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.RadialGradient#focal} changed and needs to update.\n   */\n  _flagFocal: false,\n\n  /**\n   * @name Two.RadialGradient#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Gradient}\n   * @description Create a new instance of {@link Two.RadialGradient} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var stops = this.stops.map(function(stop) {\n      return stop.clone();\n    });\n\n    var clone = new RadialGradient(this.center._x, this.center._y,\n        this._radius, stops, this.focal._x, this.focal._y);\n\n    _.each(Gradient.Properties.concat(RadialGradient.Properties), function(k) {\n      clone[k] = this[k];\n    }, this);\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.RadialGradient#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var result = Gradient.prototype.toObject.call(this);\n\n    _.each(RadialGradient.Properties, function(k) {\n      result[k] = this[k];\n    }, this);\n\n    result.center = this.center.toObject();\n    result.focal = this.focal.toObject();\n\n    return result;\n\n  },\n\n  /**\n   * @name Two.RadialGradient#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagRadius || this._flatCenter || this._flagFocal\n      || this._flagSpread || this._flagStops) {\n      this.trigger(Events.Types.change);\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.RadialGradient#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagRadius = this._flagCenter = this._flagFocal = false;\n\n    Gradient.prototype.flagReset.call(this);\n\n    return this;\n\n  }\n\n});\n\nRadialGradient.MakeObservable(RadialGradient.prototype);\n\nvar anchor;\nvar regex$1 = {\n  video: /\\.(mp4|webm|ogg)$/i,\n  image: /\\.(jpe?g|png|gif|tiff|webp)$/i,\n  effect: /texture|gradient/i\n};\n\nif (root$1.document) {\n  anchor = document.createElement('a');\n}\n\n/**\n * @name Two.Texture\n * @class\n * @extends Two.Shape\n * @param {String|HTMLImageElement} [src] - The URL path to an image file or an `<img />` element.\n * @param {Function} [callback] - An optional callback function once the image has been loaded.\n * @description Fundamental to work with bitmap data, a.k.a. pregenerated imagery, in Two.js. Supported formats include jpg, png, gif, and tiff. See {@link Two.Texture.RegularExpressions} for a full list of supported formats.\n */\nfunction Texture(src, callback) {\n\n  /**\n   * @name Two.Texture#renderer\n   * @property {Object}\n   * @description Object access to store relevant renderer specific variables. Warning: manipulating this object can create unintended consequences.\n   * @nota-bene With the {@link Two.SvgRenderer} you can access the underlying SVG element created via `shape.renderer.elem`.\n   */\n  this.renderer = {};\n  this._renderer.type = 'texture';\n  this._renderer.flagOffset = Texture.FlagOffset.bind(this);\n  this._renderer.flagScale = Texture.FlagScale.bind(this);\n\n  this.id = Constants.Identifier + Constants.uniqueId();\n  this.classList = [];\n\n  /**\n   * @name Two.Texture#loaded\n   * @property {Boolean} - Shorthand value to determine if image has been loaded into the texture.\n   */\n  this.loaded = false;\n\n  /**\n   * @name Two.Texture#repeat\n   * @property {String} - CSS style declaration to tile {@link Two.Path}. Valid values include: `'no-repeat'`, `'repeat'`, `'repeat-x'`, `'repeat-y'`.\n   * @see {@link https://www.w3.org/TR/2dcontext/#dom-context-2d-createpattern}\n   */\n  this.repeat = 'no-repeat';\n\n  /**\n   * @name Two.Texture#offset\n   * @property {Two.Vector} - A two-component vector describing any pixel offset of the texture when applied to a {@link Two.Path}.\n   */\n  this.offset = new Vector();\n\n  if (typeof callback === 'function') {\n    var loaded = (function() {\n      this.unbind(Events.Types.load, loaded);\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }).bind(this);\n    this.bind(Events.Types.load, loaded);\n  }\n\n  /**\n   * @name Two.Texture#src\n   * @property {String} - The URL path to the image data.\n   * @nota-bene This property is ultimately serialized in a {@link Two.Registry} to cache retrieval.\n   */\n  if (typeof src === 'string') {\n    this.src = src;\n  } else if (typeof src === 'object') {\n    var elemString = Object.prototype.toString.call(src);\n    if (\n      elemString === '[object HTMLImageElement]' ||\n      elemString === '[object HTMLCanvasElement]' ||\n      elemString === '[object HTMLVideoElement]' ||\n      elemString === '[object Image]'\n    ) {\n      /**\n       * @name Two.Texture#image\n       * @property {Element} - The corresponding DOM Element of the texture. Can be a `<img />`, `<canvas />`, or `<video />` element. See {@link Two.Texture.RegularExpressions} for a full list of supported elements.\n       * @nota-bene In headless environments this is a `Canvas.Image` object. See {@link https://github.com/Automattic/node-canvas} for more information on headless image objects.\n       */\n      this.image = src;\n    }\n  }\n\n  this._update();\n\n}\n\n_.extend(Texture, {\n\n  /**\n   * @name Two.Texture.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Texture}.\n   */\n  Properties: [\n    'id',\n    'src',\n    'loaded',\n    'repeat'\n  ],\n\n  /**\n   * @name Two.Texture.RegularExpressions\n   * @property {Object} - A map of compatible DOM Elements categorized by media format.\n   */\n  RegularExpressions: regex$1,\n\n  /**\n   * @name Two.Texture.ImageRegistry\n   * @property {Two.Registry} - A canonical listing of image data used in a single session of Two.js.\n   * @nota-bene This object is used to cache image data between different textures.\n   */\n  ImageRegistry: new Registry(),\n\n  /**\n   * @name Two.Texture.getAbsoluteURL\n   * @property {Function} - Serializes a URL as an absolute path for canonical attribution in {@link Two.ImageRegistry}.\n   * @param {String} path\n   * @returns {String} - The serialized absolute path.\n   */\n  getAbsoluteURL: function(path) {\n    if (!anchor) {\n      // TODO: Fix for headless environments\n      return path;\n    }\n    anchor.href = path;\n    return anchor.href;\n  },\n\n  /**\n   * @name Two.Texture.loadHeadlessBuffer\n   * @property {Function} - Loads an image as a buffer in headless environments.\n   * @param {Two.Texture} texture - The {@link Two.Texture} to be loaded.\n   * @param {Function} loaded - The callback function to be triggered once the image is loaded.\n   * @nota-bene - This function uses node's `fs.readFileSync` to spoof the `<img />` loading process in the browser.\n   */\n  loadHeadlessBuffer: function(texture, loaded) {\n\n    texture.image.onload = loaded;\n    texture.image.src = texture.src;\n\n  },\n\n  /**\n   * @name Two.Texture.getTag\n   * @property {Function} - Retrieves the tag name of an image, video, or canvas node.\n   * @param {HTMLImageElement} - The image to infer the tag name from.\n   * @returns {String} - Returns the tag name of an image, video, or canvas node.\n   */\n  getTag: function(image) {\n    return (image && image.nodeName && image.nodeName.toLowerCase())\n      // Headless environments\n      || 'img';\n  },\n\n  /**\n   * @name Two.Texture.getImage\n   * @property {Function} - Convenience function to set {@link Two.Texture#image} properties with canonincal versions set in {@link Two.Texture.ImageRegistry}.\n   * @param {String} src - The URL path of the image.\n   * @returns {HTMLImageElement} - Returns either a cached version of the image or a new one that is registered in {@link Two.Texture.ImageRegistry}.\n   */\n  getImage: function(src) {\n\n    var absoluteSrc = Texture.getAbsoluteURL(src);\n\n    if (Texture.ImageRegistry.contains(absoluteSrc)) {\n      return Texture.ImageRegistry.get(absoluteSrc);\n    }\n\n    var image;\n\n    if (CanvasShim.Image) {\n\n      // TODO: Fix for headless environments\n      image = new CanvasShim.Image();\n      Renderer$2.Utils.shim(image, 'img');\n\n    } else if (root$1.document) {\n\n      if (regex$1.video.test(absoluteSrc)) {\n        image = document.createElement('video');\n      } else {\n        image = document.createElement('img');\n      }\n\n    } else {\n\n      console.warn('Two.js: no prototypical image defined for Two.Texture');\n\n    }\n\n    image.crossOrigin = 'anonymous';\n\n    return image;\n\n  },\n\n  /**\n   * @name Two.Register\n   * @interface\n   * @description A collection of functions to register different types of textures. Used internally by a {@link Two.Texture}.\n   */\n  Register: {\n    canvas: function(texture, callback) {\n      texture._src = '#' + texture.id;\n      Texture.ImageRegistry.add(texture.src, texture.image);\n      if (typeof callback === 'function') {\n        callback();\n      }\n    },\n    img: function(texture, callback) {\n\n      var image = texture.image;\n\n      var loaded = function(e) {\n        if (!CanvasShim.isHeadless && image.removeEventListener && typeof image.removeEventListener === 'function') {\n          image.removeEventListener('load', loaded, false);\n          image.removeEventListener('error', error, false);\n        }\n        if (typeof callback === 'function') {\n          callback();\n        }\n      };\n      var error = function(e) {\n        if (!CanvasShim.isHeadless && typeof image.removeEventListener === 'function') {\n          image.removeEventListener('load', loaded, false);\n          image.removeEventListener('error', error, false);\n        }\n        throw new TwoError('unable to load ' + texture.src);\n      };\n\n      if (typeof image.width === 'number' && image.width > 0\n        && typeof image.height === 'number' && image.height > 0) {\n          loaded();\n      } else if (!CanvasShim.isHeadless && typeof image.addEventListener === 'function') {\n        image.addEventListener('load', loaded, false);\n        image.addEventListener('error', error, false);\n      }\n\n      texture._src = Texture.getAbsoluteURL(texture._src);\n\n      if (!CanvasShim.isHeadless && image && image.getAttribute('two-src')) {\n        return;\n      }\n\n      if (!CanvasShim.isHeadless) {\n        image.setAttribute('two-src', texture.src);\n      }\n\n      Texture.ImageRegistry.add(texture.src, image);\n\n      if (CanvasShim.isHeadless) {\n\n        Texture.loadHeadlessBuffer(texture, loaded);\n\n      } else {\n\n        texture.image.src = texture.src;\n\n      }\n\n    },\n    video: function(texture, callback) {\n\n      if (CanvasShim.isHeadless) {\n        throw new TwoError('video textures are not implemented in headless environments.');\n      }\n\n      var loaded = function(e) {\n        texture.image.removeEventListener('canplaythrough', loaded, false);\n        texture.image.removeEventListener('error', error, false);\n        texture.image.width = texture.image.videoWidth;\n        texture.image.height = texture.image.videoHeight;\n        if (typeof callback === 'function') {\n          callback();\n        }\n      };\n      var error = function(e) {\n        texture.image.removeEventListener('canplaythrough', loaded, false);\n        texture.image.removeEventListener('error', error, false);\n        throw new TwoError('unable to load ' + texture.src);\n      };\n\n      texture._src = Texture.getAbsoluteURL(texture._src);\n\n      if (!texture.image.getAttribute('two-src')) {\n        texture.image.setAttribute('two-src', texture.src);\n        Texture.ImageRegistry.add(texture.src, texture.image);\n      }\n\n      if (texture.image.readyState >= 4) {\n        loaded();\n      } else {\n        texture.image.addEventListener('canplaythrough', loaded, false);\n        texture.image.addEventListener('error', error, false);\n        texture.image.src = texture.src;\n        texture.image.load();\n      }\n\n    }\n  },\n\n  /**\n   * @name Two.Texture.load\n   * @function\n   * @param {Two.Texture} texture - The texture to load.\n   * @param {Function} callback - The function to be called once the texture is loaded.\n   */\n  load: function(texture, callback) {\n\n    var image = texture.image;\n    var tag = Texture.getTag(image);\n\n    if (texture._flagImage) {\n      if (/canvas/i.test(tag)) {\n        Texture.Register.canvas(texture, callback);\n      } else {\n        texture._src = (!CanvasShim.isHeadless && image.getAttribute('two-src')) || image.src;\n        Texture.Register[tag](texture, callback);\n      }\n    }\n\n    if (texture._flagSrc) {\n      if (!image) {\n        image = Texture.getImage(texture.src);\n        texture.image = image;\n      }\n      tag = Texture.getTag(image);\n      Texture.Register[tag](texture, callback);\n    }\n\n  },\n\n  /**\n   * @name Two.Texture.FlagOffset\n   * @function\n   * @description Cached method to let renderers know `offset` has been updated on a {@link Two.Texture}.\n   */\n  FlagOffset: function() {\n    this._flagOffset = true;\n  },\n\n  /**\n   * @name Two.Texture.FlagScale\n   * @function\n   * @description Cached method to let renderers know `scale` has been updated on a {@link Two.Texture}.\n   */\n  FlagScale: function() {\n    this._flagScale = true;\n  },\n\n  /**\n   * @name Two.Texture.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Texture} to any object. Handy if you'd like to extend or inherit the {@link Two.Texture} class on a custom class.\n   */\n  MakeObservable: function(object) {\n\n    _.each(Texture.Properties, defineGetterSetter, object);\n\n    Object.defineProperty(object, 'image', {\n      enumerable: true,\n      get: function() {\n        return this._image;\n      },\n      set: function(image) {\n\n        var tag = Texture.getTag(image);\n        var index;\n\n        switch (tag) {\n          case 'canvas':\n            index = '#' + image.id;\n            break;\n          default:\n            index = image.src;\n        }\n\n        if (Texture.ImageRegistry.contains(index)) {\n          this._image = Texture.ImageRegistry.get(image.src);\n        } else {\n          this._image = image;\n        }\n\n        this._flagImage = true;\n\n      }\n\n    });\n\n    Object.defineProperty(object, 'offset', {\n      enumerable: true,\n      get: function() {\n        return this._offset;\n      },\n      set: function(v) {\n        if (this._offset) {\n          this._offset.unbind(Events.Types.change, this._renderer.flagOffset);\n        }\n        this._offset = v;\n        this._offset.bind(Events.Types.change, this._renderer.flagOffset);\n        this._flagOffset = true;\n      }\n    });\n\n    Object.defineProperty(object, 'scale', {\n      enumerable: true,\n      get: function() {\n        return this._scale;\n      },\n      set: function(v) {\n\n        if (this._scale instanceof Vector) {\n          this._scale.unbind(Events.Types.change, this._renderer.flagScale);\n        }\n\n        this._scale = v;\n\n        if (this._scale instanceof Vector) {\n          this._scale.bind(Events.Types.change, this._renderer.flagScale);\n        }\n\n        this._flagScale = true;\n\n      }\n    });\n\n    Object.defineProperty(object, 'renderer', {\n\n      enumerable: false,\n\n      get: function() {\n        return this._renderer;\n      },\n\n      set: function(obj) {\n        this._renderer = obj;\n      }\n\n    });\n\n  }\n\n});\n\n_.extend(Texture.prototype, Events, Shape.prototype, {\n\n  constructor: Texture,\n\n  /**\n   * @name Two.Texture#_flagId\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Texture#id} needs updating.\n   */\n  _flagId: false,\n\n  /**\n   * @name Two.Texture#_flagSrc\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Texture#src} needs updating.\n   */\n  _flagSrc: false,\n\n  /**\n   * @name Two.Texture#_flagImage\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Texture#image} needs updating.\n   */\n  _flagImage: false,\n\n  /**\n   * @name Two.Texture#_flagVideo\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Texture#video} needs updating.\n   */\n  _flagVideo: false,\n\n  /**\n   * @name Two.Texture#_flagLoaded\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Texture#loaded} needs updating.\n   */\n  _flagLoaded: false,\n\n  /**\n   * @name Two.Texture#_flagRepeat\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Texture#repeat} needs updating.\n   */\n  _flagRepeat: false,\n\n  /**\n   * @name Two.Texture#_flagOffset\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Texture#offset} needs updating.\n   */\n  _flagOffset: false,\n\n  /**\n   * @name Two.Texture#_flagScale\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Texture#scale} needs updating.\n   */\n  _flagScale: false,\n\n  /**\n   * @name Two.Texture#_id\n   * @private\n   * @see {@link Two.Texture#id}\n   */\n  _id: '',\n\n  /**\n   * @name Two.Texture#_src\n   * @private\n   * @see {@link Two.Texture#src}\n   */\n  _src: '',\n\n  /**\n   * @name Two.Texture#_image\n   * @private\n   * @see {@link Two.Texture#image}\n   */\n  _image: null,\n\n  /**\n   * @name Two.Texture#_loaded\n   * @private\n   * @see {@link Two.Texture#loaded}\n   */\n  _loaded: false,\n\n  /**\n   * @name Two.Texture#_repeat\n   * @private\n   * @see {@link Two.Texture#repeat}\n   */\n  _repeat: 'no-repeat',\n\n  /**\n   * @name Two.Texture#_scale\n   * @private\n   * @see {@link Two.Texture#scale}\n   */\n  _scale: 1,\n\n  /**\n   * @name Two.Texture#_offset\n   * @private\n   * @see {@link Two.Texture#offset}\n   */\n  _offset: null,\n\n  /**\n   * @name Two.Texture#clone\n   * @function\n   * @returns {Two.Texture}\n   * @description Create a new instance of {@link Two.Texture} with the same properties of the current texture.\n   */\n  clone: function() {\n    var clone = new Texture(this.src);\n    clone.repeat = this.repeat;\n    clone.offset.copy(this.origin);\n    clone.scale = this.scale;\n    return clone;\n  },\n\n  /**\n   * @name Two.Texture#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the texture.\n   */\n  toObject: function() {\n    return {\n      src: this.src,\n      // image: this.image,\n      repeat: this.repeat,\n      origin: this.origin.toObject(),\n      scale: typeof this.scale === 'number' ? this.scale : this.scale.toObject()\n    };\n  },\n\n  /**\n   * @name Two.Texture#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagSrc || this._flagImage) {\n\n      this.trigger(Events.Types.change);\n\n      if (this._flagSrc || this._flagImage) {\n        this.loaded = false;\n        Texture.load(this, (function() {\n          this.loaded = true;\n          this\n            .trigger(Events.Types.change)\n            .trigger(Events.Types.load);\n        }).bind(this));\n      }\n\n    }\n\n    if (this._image && this._image.readyState >= 4) {\n      this._flagVideo = true;\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Texture#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagSrc = this._flagImage = this._flagLoaded\n      = this._flagVideo = this._flagScale = this._flagOffset = false;\n\n    return this;\n\n  }\n\n});\n\nTexture.MakeObservable(Texture.prototype);\n\n// Constants\n\nvar min$1 = Math.min, max$1 = Math.max,\n  ceil$1 = Math.ceil, floor$1 = Math.floor;\n\n/**\n * @name Two.Path\n * @class\n * @extends Two.Shape\n * @param {Two.Anchor[]} [vertices] - A list of {@link Two.Anchor}s that represent the order and coordinates to construct the rendered shape.\n * @param {Boolean} [closed=false] - Describes whether the shape is closed or open.\n * @param {Boolean} [curved=false] - Describes whether the shape automatically calculates bezier handles for each vertex.\n * @param {Boolean} [manual=false] - Describes whether the developer controls how vertices are plotted or if Two.js automatically plots coordinates based on closed and curved booleans.\n * @description This is the primary primitive class for creating all drawable shapes in Two.js. Unless specified methods return their instance of `Two.Path` for the purpose of chaining.\n */\nfunction Path(vertices, closed, curved, manual) {\n\n  Shape.call(this);\n\n  this._renderer.type = 'path';\n  this._renderer.flagVertices = Path.FlagVertices.bind(this);\n  this._renderer.bindVertices = Path.BindVertices.bind(this);\n  this._renderer.unbindVertices = Path.UnbindVertices.bind(this);\n\n  this._renderer.flagFill = Path.FlagFill.bind(this);\n  this._renderer.flagStroke = Path.FlagStroke.bind(this);\n  this._renderer.vertices = [];\n  this._renderer.collection = [];\n\n  /**\n   * @name Two.Path#closed\n   * @property {Boolean} - Determines whether a final line is drawn between the final point in the `vertices` array and the first point.\n   */\n  this._closed = !!closed;\n\n  /**\n   * @name Two.Path#curved\n   * @property {Boolean} - When the path is `automatic = true` this boolean determines whether the lines between the points are curved or not.\n   */\n  this._curved = !!curved;\n\n  /**\n   * @name Two.Path#beginning\n   * @property {Number} - Number between zero and one to state the beginning of where the path is rendered.\n   * @description {@link Two.Path#beginning} is a percentage value that represents at what percentage into the path should the renderer start drawing.\n   * @nota-bene This is great for animating in and out stroked paths in conjunction with {@link Two.Path#ending}.\n   */\n  this.beginning = 0;\n\n  /**\n   * @name Two.Path#ending\n   * @property {Number} - Number between zero and one to state the ending of where the path is rendered.\n   * @description {@link Two.Path#ending} is a percentage value that represents at what percentage into the path should the renderer start drawing.\n   * @nota-bene This is great for animating in and out stroked paths in conjunction with {@link Two.Path#beginning}.\n   */\n  this.ending = 1;\n\n  // Style properties\n\n  /**\n   * @name Two.Path#fill\n   * @property {(String|Two.Gradient|Two.Texture)} - The value of what the path should be filled in with.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n   */\n  this.fill = '#fff';\n\n  /**\n   * @name Two.Path#stroke\n   * @property {(String|Two.Gradient|Two.Texture)} - The value of what the path should be outlined in with.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n   */\n  this.stroke = '#000';\n\n  /**\n   * @name Two.Path#linewidth\n   * @property {Number} - The thickness in pixels of the stroke.\n   */\n  this.linewidth = 1.0;\n\n  /**\n   * @name Two.Path#opacity\n   * @property {Number} - The opaqueness of the path.\n   * @nota-bene Can be used in conjunction with CSS Colors that have an alpha value.\n   */\n  this.opacity = 1.0;\n\n  /**\n   * @name Two.Path#className\n   * @property {String} - A class to be applied to the element to be compatible with CSS styling.\n   * @nota-bene Only available for the SVG renderer.\n   */\n  this.className = '';\n\n  /**\n   * @name Two.Path#visible\n   * @property {Boolean} - Display the path or not.\n   * @nota-bene For {@link Two.CanvasRenderer} and {@link Two.WebGLRenderer} when set to false all updating is disabled improving performance dramatically with many objects in the scene.\n   */\n  this.visible = true;\n\n  /**\n   * @name Two.Path#cap\n   * @property {String}\n   * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeLinecapProperty}\n   */\n  this.cap = 'butt';      // Default of Adobe Illustrator\n\n  /**\n   * @name Two.Path#join\n   * @property {String}\n   * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeLinejoinProperty}\n   */\n  this.join = 'miter';    // Default of Adobe Illustrator\n\n  /**\n   * @name Two.Path#miter\n   * @property {String}\n   * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeMiterlimitProperty}\n   */\n  this.miter = 4;         // Default of Adobe Illustrator\n\n  /**\n   * @name Two.Path#vertices\n   * @property {Two.Anchor[]} - An ordered list of anchor points for rendering the path.\n   * @description A list of {@link Two.Anchor} objects that consist of what form the path takes.\n   * @nota-bene The array when manipulating is actually a {@link Two.Collection}.\n   */\n  this.vertices = vertices;\n\n  /**\n   * @name Two.Path#automatic\n   * @property {Boolean} - Determines whether or not Two.js should calculate curves, lines, and commands automatically for you or to let the developer manipulate them for themselves.\n   */\n  this.automatic = !manual;\n\n  /**\n   * @name Two.Path#dashes\n   * @property {Number[]} - Array of numbers. Odd indices represent dash length. Even indices represent dash space.\n   * @description A list of numbers that represent the repeated dash length and dash space applied to the stroke of the text.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more information on the SVG stroke-dasharray attribute.\n   */\n  this.dashes = [];\n\n  /**\n   * @name Two.Path#dashes#offset\n   * @property {Number} - A number in pixels to offset {@link Two.Path#dashes} display.\n   */\n  this.dashes.offset = 0;\n\n}\n\n_.extend(Path, {\n\n  /**\n   * @name Two.Path.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Path}.\n   */\n  Properties: [\n    'fill',\n    'stroke',\n    'linewidth',\n    'opacity',\n    'visible',\n    'cap',\n    'join',\n    'miter',\n\n    'closed',\n    'curved',\n    'automatic',\n    'beginning',\n    'ending'\n  ],\n\n  Utils: {\n    getCurveLength: getCurveLength\n  },\n\n  /**\n   * @name Two.Path.FlagVertices\n   * @function\n   * @description Cached method to let renderers know vertices have been updated on a {@link Two.Path}.\n   */\n  FlagVertices: function() {\n    this._flagVertices = true;\n    this._flagLength = true;\n    if (this.parent) {\n      this.parent._flagLength = true;\n    }\n  },\n\n  /**\n   * @name Two.Path.BindVertices\n   * @function\n   * @description Cached method to let {@link Two.Path} know vertices have been added to the instance.\n   */\n  BindVertices: function(items) {\n\n    // This function is called a lot\n    // when importing a large SVG\n    var i = items.length;\n    while (i--) {\n      items[i].bind(Events.Types.change, this._renderer.flagVertices);\n    }\n\n    this._renderer.flagVertices();\n\n  },\n\n  /**\n   * @name Two.Path.UnbindVertices\n   * @function\n   * @description Cached method to let {@link Two.Path} know vertices have been removed from the instance.\n   */\n  UnbindVertices: function(items) {\n\n    var i = items.length;\n    while (i--) {\n      items[i].unbind(Events.Types.change, this._renderer.flagVertices);\n    }\n\n    this._renderer.flagVertices();\n\n  },\n\n  /**\n   * @name Two.Path.FlagFill\n   * @function\n   * @description Cached method to let {@link Two.Path} know the fill has changed.\n   */\n  FlagFill: function() {\n    this._flagFill = true;\n  },\n\n  /**\n   * @name Two.Path.FlagFill\n   * @function\n   * @description Cached method to let {@link Two.Path} know the stroke has changed.\n   */\n  FlagStroke: function() {\n    this._flagStroke = true;\n  },\n\n  /**\n   * @name Two.Path.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Path} to any object. Handy if you'd like to extend the {@link Two.Path} class on a custom class.\n   */\n  MakeObservable: function(object) {\n\n    Shape.MakeObservable(object);\n\n    // Only the 7 defined properties are flagged like this. The subsequent\n    // properties behave differently and need to be hand written.\n    _.each(Path.Properties.slice(2, 8), defineGetterSetter, object);\n\n    Object.defineProperty(object, 'fill', {\n      enumerable: true,\n      get: function() {\n        return this._fill;\n      },\n      set: function(f) {\n\n        if (this._fill instanceof Gradient\n          || this._fill instanceof LinearGradient\n          || this._fill instanceof RadialGradient\n          || this._fill instanceof Texture) {\n          this._fill.unbind(Events.Types.change, this._renderer.flagFill);\n        }\n\n        this._fill = f;\n        this._flagFill = true;\n\n        if (this._fill instanceof Gradient\n          || this._fill instanceof LinearGradient\n          || this._fill instanceof RadialGradient\n          || this._fill instanceof Texture) {\n          this._fill.bind(Events.Types.change, this._renderer.flagFill);\n        }\n\n      }\n    });\n\n    Object.defineProperty(object, 'stroke', {\n      enumerable: true,\n      get: function() {\n        return this._stroke;\n      },\n      set: function(f) {\n\n        if (this._stroke instanceof Gradient\n          || this._stroke instanceof LinearGradient\n          || this._stroke instanceof RadialGradient\n          || this._stroke instanceof Texture) {\n          this._stroke.unbind(Events.Types.change, this._renderer.flagStroke);\n        }\n\n        this._stroke = f;\n        this._flagStroke = true;\n\n        if (this._stroke instanceof Gradient\n          || this._stroke instanceof LinearGradient\n          || this._stroke instanceof RadialGradient\n          || this._stroke instanceof Texture) {\n          this._stroke.bind(Events.Types.change, this._renderer.flagStroke);\n        }\n\n      }\n    });\n\n    /**\n     * @name Two.Path#length\n     * @property {Number} - The sum of distances between all {@link Two.Path#vertices}.\n     */\n    Object.defineProperty(object, 'length', {\n      get: function() {\n        if (this._flagLength) {\n          this._updateLength();\n        }\n        return this._length;\n      }\n    });\n\n    Object.defineProperty(object, 'closed', {\n      enumerable: true,\n      get: function() {\n        return this._closed;\n      },\n      set: function(v) {\n        this._closed = !!v;\n        this._flagVertices = true;\n      }\n    });\n\n    Object.defineProperty(object, 'curved', {\n      enumerable: true,\n      get: function() {\n        return this._curved;\n      },\n      set: function(v) {\n        this._curved = !!v;\n        this._flagVertices = true;\n      }\n    });\n\n    Object.defineProperty(object, 'automatic', {\n      enumerable: true,\n      get: function() {\n        return this._automatic;\n      },\n      set: function(v) {\n        if (v === this._automatic) {\n          return;\n        }\n        this._automatic = !!v;\n        var method = this._automatic ? 'ignore' : 'listen';\n        _.each(this.vertices, function(v) {\n          v[method]();\n        });\n      }\n    });\n\n    Object.defineProperty(object, 'beginning', {\n      enumerable: true,\n      get: function() {\n        return this._beginning;\n      },\n      set: function(v) {\n        this._beginning = v;\n        this._flagVertices = true;\n      }\n    });\n\n    Object.defineProperty(object, 'ending', {\n      enumerable: true,\n      get: function() {\n        return this._ending;\n      },\n      set: function(v) {\n        this._ending = v;\n        this._flagVertices = true;\n      }\n    });\n\n    Object.defineProperty(object, 'vertices', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._collection;\n      },\n\n      set: function(vertices) {\n\n        var bindVertices = this._renderer.bindVertices;\n        var unbindVertices = this._renderer.unbindVertices;\n\n        // Remove previous listeners\n        if (this._collection) {\n          this._collection\n            .unbind(Events.Types.insert, bindVertices)\n            .unbind(Events.Types.remove, unbindVertices);\n        }\n\n        // Create new Collection with copy of vertices\n        if (vertices instanceof Collection) {\n          this._collection = vertices;\n        } else {\n          this._collection = new Collection(vertices || []);\n        }\n\n\n        // Listen for Collection changes and bind / unbind\n        this._collection\n          .bind(Events.Types.insert, bindVertices)\n          .bind(Events.Types.remove, unbindVertices);\n\n        // Bind Initial Vertices\n        bindVertices(this._collection);\n\n      }\n\n    });\n\n    /**\n     * @name Two.Path#mask\n     * @property {Two.Shape} - The shape whose alpha property becomes a clipping area for the path.\n     * @nota-bene This property is currently not working becuase of SVG spec issues found here {@link https://code.google.com/p/chromium/issues/detail?id=370951}.\n     */\n    Object.defineProperty(object, 'mask', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._mask;\n      },\n\n      set: function(v) {\n        if (this._mask) {\n          this._mask.clip = false;\n        }\n        this._mask = v;\n        this._flagMask = true;\n        if (v && !v.clip) {\n          v.clip = true;\n        }\n      }\n\n    });\n\n    /**\n     * @name Two.Path#clip\n     * @property {Boolean} - Tells Two.js renderer if this object represents a mask for another object (or not).\n     */\n    Object.defineProperty(object, 'clip', {\n      enumerable: true,\n      get: function() {\n        return this._clip;\n      },\n      set: function(v) {\n        this._clip = v;\n        this._flagClip = true;\n      }\n    });\n\n    Object.defineProperty(object, 'dashes', {\n      enumerable: true,\n      get: function() {\n        return this._dashes;\n      },\n      set: function(v) {\n        if (typeof v.offset !== 'number') {\n          v.offset = (this.dashes && this._dashes.offset) || 0;\n        }\n        this._dashes = v;\n      }\n    });\n\n  }\n\n});\n\n_.extend(Path.prototype, Shape.prototype, {\n\n  constructor: Path,\n\n  // Flags\n  // http://en.wikipedia.org/wiki/Flag\n\n  /**\n   * @name Two.Path#_flagVertices\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#vertices} need updating.\n   */\n  _flagVertices: true,\n\n  /**\n   * @name Two.Path#_flagLength\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#length} needs updating.\n   */\n  _flagLength: true,\n\n  /**\n   * @name Two.Path#_flagFill\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#fill} needs updating.\n   */\n  _flagFill: true,\n\n  /**\n   * @name Two.Path#_flagStroke\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#stroke} needs updating.\n   */\n  _flagStroke: true,\n\n  /**\n   * @name Two.Path#_flagLinewidth\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#linewidth} needs updating.\n   */\n  _flagLinewidth: true,\n\n  /**\n   * @name Two.Path#_flagOpacity\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#opacity} needs updating.\n   */\n  _flagOpacity: true,\n\n  /**\n   * @name Two.Path#_flagVisible\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#visible} needs updating.\n   */\n  _flagVisible: true,\n\n  /**\n   * @name Two.Path#_flagCap\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#cap} needs updating.\n   */\n  _flagCap: true,\n\n  /**\n   * @name Two.Path#_flagJoin\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#join} needs updating.\n   */\n  _flagJoin: true,\n\n  /**\n   * @name Two.Path#_flagMiter\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#miter} needs updating.\n   */\n  _flagMiter: true,\n\n  /**\n   * @name Two.Path#_flagMask\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#mask} needs updating.\n   */\n  _flagMask: false,\n\n  /**\n   * @name Two.Path#_flagClip\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#clip} needs updating.\n   */\n  _flagClip: false,\n\n  // Underlying Properties\n\n  /**\n   * @name Two.Path#_length\n   * @private\n   * @see {@link Two.Path#length}\n   */\n  _length: 0,\n\n  /**\n   * @name Two.Path#_fill\n   * @private\n   * @see {@link Two.Path#fill}\n   */\n  _fill: '#fff',\n\n  /**\n   * @name Two.Path#_stroke\n   * @private\n   * @see {@link Two.Path#stroke}\n   */\n  _stroke: '#000',\n\n  /**\n   * @name Two.Path#_linewidth\n   * @private\n   * @see {@link Two.Path#linewidth}\n   */\n  _linewidth: 1,\n\n  /**\n   * @name Two.Path#_opacity\n   * @private\n   * @see {@link Two.Path#opacity}\n   */\n  _opacity: 1.0,\n\n  /**\n   * @name Two.Path#_visible\n   * @private\n   * @see {@link Two.Path#visible}\n   */\n  _visible: true,\n\n  /**\n   * @name Two.Path#_cap\n   * @private\n   * @see {@link Two.Path#cap}\n   */\n  _cap: 'round',\n\n  /**\n   * @name Two.Path#_join\n   * @private\n   * @see {@link Two.Path#join}\n   */\n  _join: 'round',\n\n  /**\n   * @name Two.Path#_miter\n   * @private\n   * @see {@link Two.Path#miter}\n   */\n  _miter: 4,\n\n  /**\n   * @name Two.Path#_closed\n   * @private\n   * @see {@link Two.Path#closed}\n   */\n  _closed: true,\n\n  /**\n   * @name Two.Path#_curved\n   * @private\n   * @see {@link Two.Path#curved}\n   */\n  _curved: false,\n\n  /**\n   * @name Two.Path#_automatic\n   * @private\n   * @see {@link Two.Path#automatic}\n   */\n  _automatic: true,\n\n  /**\n   * @name Two.Path#_beginning\n   * @private\n   * @see {@link Two.Path#beginning}\n   */\n  _beginning: 0,\n\n  /**\n   * @name Two.Path#_ending\n   * @private\n   * @see {@link Two.Path#ending}\n   */\n  _ending: 1.0,\n\n  /**\n   * @name Two.Path#_mask\n   * @private\n   * @see {@link Two.Path#mask}\n   */\n  _mask: null,\n\n  /**\n   * @name Two.Path#_clip\n   * @private\n   * @see {@link Two.Path#clip}\n   */\n  _clip: false,\n\n  /**\n   * @name Two.Path#_dashes\n   * @private\n   * @see {@link Two.Path#dashes}\n   */\n  _dashes: null,\n\n  /**\n   * @name Two.Path#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Path}\n   * @description Create a new instance of {@link Two.Path} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var clone = new Path();\n\n    for (var j = 0; j < this.vertices.length; j++) {\n      clone.vertices.push(this.vertices[j].clone());\n    }\n\n    for (var i = 0; i < Path.Properties.length; i++) {\n      var k = Path.Properties[i];\n      clone[k] = this[k];\n    }\n\n    clone.className = this.className;\n\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n    clone.skewX = this.skewX;\n    clone.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone._update();\n\n  },\n\n  /**\n   * @name Two.Path#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var result = {\n      vertices: this.vertices.map(function(v) {\n        return v.toObject();\n      })\n    };\n\n    _.each(Path.Properties, function(k) {\n      if (typeof this[k] !== 'undefined') {\n        if (this[k].toObject) {\n          result[k] = this[k].toObject();\n        } else {\n          result[k] = this[k];\n        }\n      }\n    }, this);\n\n    result.className = this.className;\n\n    result.translation = this.translation.toObject();\n    result.rotation = this.rotation;\n    result.scale = this.scale instanceof Vector ? this.scale.toObject() : this.scale;\n    result.skewX = this.skewX;\n    result.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      result.matrix = this.matrix.toObject();\n    }\n\n    return result;\n\n  },\n\n  /**\n   * @name Two.Path#noFill\n   * @function\n   * @description Short hand method to set fill to `transparent`.\n   */\n  noFill: function() {\n    this.fill = 'transparent';\n    return this;\n  },\n\n  /**\n   * @name Two.Path#noStroke\n   * @function\n   * @description Short hand method to set stroke to `transparent`.\n   */\n  noStroke: function() {\n    this.stroke = undefined;\n    return this;\n  },\n\n  /**\n   * @name Two.Path#corner\n   * @function\n   * @description Orient the vertices of the shape to the upper left-hand corner of the path.\n   */\n  corner: function() {\n\n    var rect = this.getBoundingClientRect(true);\n    var hw = rect.width / 2;\n    var hh = rect.height / 2;\n    var cx = rect.left + rect.width / 2;\n    var cy = rect.top + rect.height / 2;\n\n    for (var i = 0; i < this.vertices.length; i++) {\n      var v = this.vertices[i];\n      v.x -= cx;\n      v.y -= cy;\n      v.x += hw;\n      v.y += hh;\n    }\n\n    if (this.mask) {\n      this.mask.translation.x -= cx;\n      this.mask.translation.x += hw;\n      this.mask.translation.y -= cy;\n      this.mask.translation.y += hh;\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Path#center\n   * @function\n   * @description Orient the vertices of the shape to the center of the path.\n   */\n  center: function() {\n\n    var rect = this.getBoundingClientRect(true);\n\n    var cx = rect.left + rect.width / 2 - this.translation.x;\n    var cy = rect.top + rect.height / 2 - this.translation.y;\n\n    for (var i = 0; i < this.vertices.length; i++) {\n      var v = this.vertices[i];\n      v.x -= cx;\n      v.y -= cy;\n    }\n\n    if (this.mask) {\n      this.mask.translation.x -= cx;\n      this.mask.translation.y -= cy;\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Path#remove\n   * @function\n   * @description Remove self from the scene / parent.\n   */\n  remove: function() {\n\n    if (!this.parent) {\n      return this;\n    }\n\n    this.parent.remove(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Path#getBoundingClientRect\n   * @function\n   * @param {Boolean} [shallow=false] - Describes whether to calculate off local matrix or world matrix.\n   * @returns {Object} - Returns object with top, left, right, bottom, width, height attributes.\n   * @description Return an object with top, left, right, bottom, width, and height parameters of the path.\n   */\n  getBoundingClientRect: function(shallow) {\n    var matrix, border, l, i, v0, v1, c0x, c0y, c1x, c1y, a, b, c, d;\n\n    var left = Infinity, right = -Infinity,\n        top = Infinity, bottom = -Infinity;\n\n    // TODO: Update this to not __always__ update. Just when it needs to.\n    this._update(true);\n\n    matrix = shallow ? this._matrix : getComputedMatrix(this);\n\n    border = (this.linewidth || 0) / 2;\n    l = this._renderer.vertices.length;\n\n    if (l <= 0) {\n      return {\n        width: 0,\n        height: 0\n      };\n    }\n\n    for (i = 0; i < l; i++) {\n\n      v1 = this._renderer.vertices[i];\n      // If i = 0, then this \"wraps around\" to the last vertex. Otherwise, it's the previous vertex.\n      // This is important for handling cyclic paths.\n      v0 = this._renderer.vertices[(i + l - 1) % l];\n\n      if (v0.controls && v1.controls) {\n\n        c0x = v0.controls.right.x;\n        c0y = v0.controls.right.y;\n\n        if (v0.relative) {\n          c0x += v0.x;\n          c0y += v0.y;\n        }\n\n        c1x = v1.controls.left.x;\n        c1y = v1.controls.left.y;\n\n        if (v1.relative) {\n          c1x += v1.x;\n          c1y += v1.y;\n        }\n\n        var bb = getCurveBoundingBox(v0.x, v0.y,\n          c0x, c0y, c1x, c1y, v1.x, v1.y);\n\n        top = min$1(bb.min.y - border, top);\n        left = min$1(bb.min.x - border, left);\n        right = max$1(bb.max.x + border, right);\n        bottom = max$1(bb.max.y + border, bottom);\n\n      } else {\n\n        if (i <= 1) {\n\n          top = min$1(v0.y - border, top);\n          left = min$1(v0.x - border, left);\n          right = max$1(v0.x + border, right);\n          bottom = max$1(v0.y + border, bottom);\n\n        }\n\n        top = min$1(v1.y - border, top);\n        left = min$1(v1.x - border, left);\n        right = max$1(v1.x + border, right);\n        bottom = max$1(v1.y + border, bottom);\n\n      }\n\n    }\n\n    a = matrix.multiply(left, top, 1);\n    b = matrix.multiply(left, bottom, 1);\n    c = matrix.multiply(right, top, 1);\n    d = matrix.multiply(right, bottom, 1);\n\n    top = min$1(a.y, b.y, c.y, d.y);\n    left = min$1(a.x, b.x, c.x, d.x);\n    right = max$1(a.x, b.x, c.x, d.x);\n    bottom = max$1(a.y, b.y, c.y, d.y);\n\n    return {\n      top: top,\n      left: left,\n      right: right,\n      bottom: bottom,\n      width: right - left,\n      height: bottom - top\n    };\n\n  },\n\n  /**\n   * @name Two.Path#getPointAt\n   * @function\n   * @param {Boolean} t - Percentage value describing where on the {@link Two.Path} to estimate and assign coordinate values.\n   * @param {Two.Vector} [object] - Object to apply calculated x, y to. If none available returns new `Object`.\n   * @returns {Object}\n   * @description Given a float `t` from 0 to 1, return a point or assign a passed `obj`'s coordinates to that percentage on this {@link Two.Path}'s curve.\n   */\n  getPointAt: function(t, obj) {\n\n    var ia, ib, result;\n    var x, x1, x2, x3, x4, y, y1, y2, y3, y4, left, right;\n    var target = this.length * Math.min(Math.max(t, 0), 1);\n    var length = this.vertices.length;\n    var last = length - 1;\n\n    var a = null;\n    var b = null;\n\n    for (var i = 0, l = this._lengths.length, sum = 0; i < l; i++) {\n\n      if (sum + this._lengths[i] >= target) {\n\n        if (this._closed) {\n          ia = mod(i, length);\n          ib = mod(i - 1, length);\n          if (i === 0) {\n            ia = ib;\n            ib = i;\n          }\n        } else {\n          ia = i;\n          ib = Math.min(Math.max(i - 1, 0), last);\n        }\n\n        a = this.vertices[ia];\n        b = this.vertices[ib];\n        target -= sum;\n        if (this._lengths[i] !== 0) {\n          t = target / this._lengths[i];\n        } else {\n          t = 0;\n        }\n\n        break;\n\n      }\n\n      sum += this._lengths[i];\n\n    }\n\n    if (a === null || b === null) {\n      return null;\n    }\n\n    if (!a) {\n      return b;\n    } else if (!b) {\n      return a;\n    }\n\n    right = b.controls && b.controls.right;\n    left = a.controls && a.controls.left;\n\n    x1 = b.x;\n    y1 = b.y;\n    x2 = (right || b).x;\n    y2 = (right || b).y;\n    x3 = (left || a).x;\n    y3 = (left || a).y;\n    x4 = a.x;\n    y4 = a.y;\n\n    if (right && b.relative) {\n      x2 += b.x;\n      y2 += b.y;\n    }\n\n    if (left && a.relative) {\n      x3 += a.x;\n      y3 += a.y;\n    }\n\n    x = getComponentOnCubicBezier(t, x1, x2, x3, x4);\n    y = getComponentOnCubicBezier(t, y1, y2, y3, y4);\n\n    // Higher order points for control calculation.\n    var t1x = lerp(x1, x2, t);\n    var t1y = lerp(y1, y2, t);\n    var t2x = lerp(x2, x3, t);\n    var t2y = lerp(y2, y3, t);\n    var t3x = lerp(x3, x4, t);\n    var t3y = lerp(y3, y4, t);\n\n    // Calculate the returned points control points.\n    var brx = lerp(t1x, t2x, t);\n    var bry = lerp(t1y, t2y, t);\n    var alx = lerp(t2x, t3x, t);\n    var aly = lerp(t2y, t3y, t);\n\n    if (_.isObject(obj)) {\n\n      obj.x = x;\n      obj.y = y;\n\n      if (!_.isObject(obj.controls)) {\n        Anchor.AppendCurveProperties(obj);\n      }\n\n      obj.controls.left.x = brx;\n      obj.controls.left.y = bry;\n      obj.controls.right.x = alx;\n      obj.controls.right.y = aly;\n\n      if (!typeof obj.relative === 'boolean' || obj.relative) {\n        obj.controls.left.x -= x;\n        obj.controls.left.y -= y;\n        obj.controls.right.x -= x;\n        obj.controls.right.y -= y;\n      }\n\n      obj.t = t;\n\n      return obj;\n\n    }\n\n    result = new Anchor(\n      x, y, brx - x, bry - y, alx - x, aly - y,\n      this._curved ? Commands.curve : Commands.line\n    );\n\n    result.t = t;\n\n    return result;\n\n  },\n\n  /**\n   * @name Two.Path#plot\n   * @function\n   * @description Based on closed / curved and sorting of vertices plot where all points should be and where the respective handles should be too.\n   * @nota-bene While this method is public it is internally called by {@link Two.Path#_update} when `automatic = true`.\n   */\n  plot: function() {\n\n    if (this.curved) {\n      getCurveFromPoints(this._collection, this.closed);\n      return this;\n    }\n\n    for (var i = 0; i < this._collection.length; i++) {\n      this._collection[i].command = i === 0 ? Commands.move : Commands.line;\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Path#subdivide\n   * @function\n   * @param {Number} limit - How many times to recurse subdivisions.\n   * @description Insert a {@link Two.Anchor} at the midpoint between every item in {@link Two.Path#vertices}.\n   */\n  subdivide: function(limit) {\n    // TODO: DRYness (function below)\n    this._update();\n\n    var last = this.vertices.length - 1;\n    var b = this.vertices[last];\n    var closed = this._closed || this.vertices[last]._command === Commands.close;\n    var points = [];\n    _.each(this.vertices, function(a, i) {\n\n      if (i <= 0 && !closed) {\n        b = a;\n        return;\n      }\n\n      if (a.command === Commands.move) {\n        points.push(new Anchor(b.x, b.y));\n        if (i > 0) {\n          points[points.length - 1].command = Commands.line;\n        }\n        b = a;\n        return;\n      }\n\n      var verts = getSubdivisions(a, b, limit);\n      points = points.concat(verts);\n\n      // Assign commands to all the verts\n      _.each(verts, function(v, i) {\n        if (i <= 0 && b.command === Commands.move) {\n          v.command = Commands.move;\n        } else {\n          v.command = Commands.line;\n        }\n      });\n\n      if (i >= last) {\n\n        // TODO: Add check if the two vectors in question are the same values.\n        if (this._closed && this._automatic) {\n\n          b = a;\n\n          verts = getSubdivisions(a, b, limit);\n          points = points.concat(verts);\n\n          // Assign commands to all the verts\n          _.each(verts, function(v, i) {\n            if (i <= 0 && b.command === Commands.move) {\n              v.command = Commands.move;\n            } else {\n              v.command = Commands.line;\n            }\n          });\n\n        } else if (closed) {\n          points.push(new Anchor(a.x, a.y));\n        }\n\n        points[points.length - 1].command = closed\n          ? Commands.close : Commands.line;\n\n      }\n\n      b = a;\n\n    }, this);\n\n    this._automatic = false;\n    this._curved = false;\n    this.vertices = points;\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Path#_updateLength\n   * @function\n   * @private\n   * @param {Number} [limit] -\n   * @param {Boolean} [silent=false] - If set to `true` then the path isn't updated before calculation. Useful for internal use.\n   * @description Recalculate the {@link Two.Path#length} value.\n   */\n  _updateLength: function(limit, silent) {\n    // TODO: DRYness (function above)\n    if (!silent) {\n      this._update();\n    }\n\n    var length = this.vertices.length;\n    var last = length - 1;\n    var b = this.vertices[last];\n    var closed = false;//this._closed || this.vertices[last]._command === Commands.close;\n    var sum = 0;\n\n    if (typeof this._lengths === 'undefined') {\n      this._lengths = [];\n    }\n\n    _.each(this.vertices, function(a, i) {\n\n      if ((i <= 0 && !closed) || a.command === Commands.move) {\n        b = a;\n        this._lengths[i] = 0;\n        return;\n      }\n\n      this._lengths[i] = getCurveLength(a, b, limit);\n      sum += this._lengths[i];\n\n      if (i >= last && closed) {\n\n        b = this.vertices[(i + 1) % length];\n\n        this._lengths[i + 1] = getCurveLength(a, b, limit);\n        sum += this._lengths[i + 1];\n\n      }\n\n      b = a;\n\n    }, this);\n\n    this._length = sum;\n    this._flagLength = false;\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Path#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagVertices) {\n\n      if (this._automatic) {\n        this.plot();\n      }\n\n      if (this._flagLength) {\n        this._updateLength(undefined, true);\n      }\n\n      var l = this._collection.length;\n      var closed = this._closed;\n\n      var beginning = Math.min(this._beginning, this._ending);\n      var ending = Math.max(this._beginning, this._ending);\n\n      var bid = getIdByLength(this, beginning * this._length);\n      var eid = getIdByLength(this, ending * this._length);\n\n      var low = ceil$1(bid);\n      var high = floor$1(eid);\n\n      var left, right, prev, next, v;\n\n      this._renderer.vertices.length = 0;\n\n      for (var i = 0; i < l; i++) {\n\n        if (this._renderer.collection.length <= i) {\n          // Expected to be `relative` anchor points.\n          this._renderer.collection.push(new Anchor());\n        }\n\n        if (i > high && !right) {\n\n          v = this._renderer.collection[i];\n          v.copy(this._collection[i]);\n          this.getPointAt(ending, v);\n          v.command = this._renderer.collection[i].command;\n          this._renderer.vertices.push(v);\n\n          right = v;\n          prev = this._collection[i - 1];\n\n          // Project control over the percentage `t`\n          // of the in-between point\n          if (prev && prev.controls) {\n\n            v.controls.right.clear();\n\n            this._renderer.collection[i - 1].controls.right\n              .clear()\n              .lerp(prev.controls.right, v.t);\n\n          }\n\n        } else if (i >= low && i <= high) {\n\n          v = this._renderer.collection[i]\n            .copy(this._collection[i]);\n          this._renderer.vertices.push(v);\n\n          if (i === high && contains(this, ending)) {\n            right = v;\n            if (!closed && right.controls) {\n              right.controls.right.clear();\n            }\n          } else if (i === low && contains(this, beginning)) {\n            left = v;\n            left.command = Commands.move;\n            if (!closed && left.controls) {\n              left.controls.left.clear();\n            }\n          }\n\n        }\n\n      }\n\n      // Prepend the trimmed point if necessary.\n      if (low > 0 && !left) {\n\n        i = low - 1;\n\n        v = this._renderer.collection[i];\n        v.copy(this._collection[i]);\n        this.getPointAt(beginning, v);\n        v.command = Commands.move;\n        this._renderer.vertices.unshift(v);\n\n        left = v;\n        next = this._collection[i + 1];\n\n        // Project control over the percentage `t`\n        // of the in-between point\n        if (next && next.controls) {\n\n          v.controls.left.clear();\n\n          this._renderer.collection[i + 1].controls.left\n            .copy(next.controls.left)\n            .lerp(Vector.zero, v.t);\n\n        }\n\n      }\n\n    }\n\n    Shape.prototype._update.apply(this, arguments);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Path#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagVertices = this._flagLength = this._flagFill =  this._flagStroke =\n      this._flagLinewidth = this._flagOpacity = this._flagVisible =\n      this._flagCap = this._flagJoin = this._flagMiter =\n      this._flagClip = false;\n\n    Shape.prototype.flagReset.call(this);\n\n    return this;\n\n  }\n\n});\n\nPath.MakeObservable(Path.prototype);\n\n  // Utility functions\n\nfunction contains(path, t) {\n\n  if (t === 0 || t === 1) {\n    return true;\n  }\n\n  var length = path._length;\n  var target = length * t;\n  var elapsed = 0;\n\n  for (var i = 0; i < path._lengths.length; i++) {\n    var dist = path._lengths[i];\n    if (elapsed >= target) {\n      return target - elapsed >= 0;\n    }\n    elapsed += dist;\n  }\n\n  return false;\n\n}\n\n/**\n * @private\n * @param {Two.Path} path - The path to analyze against.\n * @param {Number} target - The target length at which to find an anchor.\n * @returns {Number}\n * @description Return the id of an anchor based on a target length.\n */\nfunction getIdByLength(path, target) {\n\n  var total = path._length;\n\n  if (target <= 0) {\n    return 0;\n  } else if (target >= total) {\n    return path._lengths.length - 1;\n  }\n\n  for (var i = 0, sum = 0; i < path._lengths.length; i++) {\n\n    if (sum + path._lengths[i] >= target) {\n      target -= sum;\n      return Math.max(i - 1, 0) + target / path._lengths[i];\n    }\n\n    sum += path._lengths[i];\n\n  }\n\n  return - 1;\n\n}\n\nfunction getCurveLength(a, b, limit) {\n  // TODO: DRYness\n  var x1, x2, x3, x4, y1, y2, y3, y4;\n\n  var right = b.controls && b.controls.right;\n  var left = a.controls && a.controls.left;\n\n  x1 = b.x;\n  y1 = b.y;\n  x2 = (right || b).x;\n  y2 = (right || b).y;\n  x3 = (left || a).x;\n  y3 = (left || a).y;\n  x4 = a.x;\n  y4 = a.y;\n\n  if (right && b._relative) {\n    x2 += b.x;\n    y2 += b.y;\n  }\n\n  if (left && a._relative) {\n    x3 += a.x;\n    y3 += a.y;\n  }\n\n  return getCurveLength$1(x1, y1, x2, y2, x3, y3, x4, y4, limit);\n\n}\n\nfunction getSubdivisions(a, b, limit) {\n  // TODO: DRYness\n  var x1, x2, x3, x4, y1, y2, y3, y4;\n\n  var right = b.controls && b.controls.right;\n  var left = a.controls && a.controls.left;\n\n  x1 = b.x;\n  y1 = b.y;\n  x2 = (right || b).x;\n  y2 = (right || b).y;\n  x3 = (left || a).x;\n  y3 = (left || a).y;\n  x4 = a.x;\n  y4 = a.y;\n\n  if (right && b._relative) {\n    x2 += b.x;\n    y2 += b.y;\n  }\n\n  if (left && a._relative) {\n    x3 += a.x;\n    y3 += a.y;\n  }\n\n  return subdivide(x1, y1, x2, y2, x3, y3, x4, y4, limit);\n\n}\n\n/**\n * @name Two.Rectangle\n * @class\n * @extends Two.Path\n * @param {Number} [x=0] - The x position of the rectangle.\n * @param {Number} [y=0] - The y position of the rectangle.\n * @param {Number} [width] - The width value of the rectangle.\n * @param {Number} [height] - The width value of the rectangle.\n */\nfunction Rectangle(x, y, width, height) {\n\n  Path.call(this, [\n    new Anchor(),\n    new Anchor(),\n    new Anchor(),\n    new Anchor()\n    // new Anchor() // TODO: Figure out how to handle this for `beginning` / `ending` animations\n  ], true, false, true);\n\n  /**\n   * @name Two.Rectangle#width\n   * @property {Number} - The size of the width of the rectangle.\n   */\n  this.width = width;\n  /**\n   * @name Two.Rectangle#height\n   * @property {Number} - The size of the height of the rectangle.\n   */\n  this.height = height;\n\n  /**\n   * @name Two.Rectangle#origin\n   * @property {Number} - A two-component vector describing the origin offset to draw the rectangle. Default is `0, 0`.\n   */\n  this.origin = new Vector();\n  this.translation.set(x, y);\n\n  this._update();\n\n}\n\n_.extend(Rectangle, {\n\n  /**\n   * @name Two.Rectangle.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Rectangle}.\n   */\n  Properties: ['width', 'height'],\n\n  /**\n   * @name Two.Rectangle.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Rectangle} to any object. Handy if you'd like to extend the {@link Two.Rectangle} class on a custom class.\n   */\n  MakeObservable: function(object) {\n\n    Path.MakeObservable(object);\n    _.each(Rectangle.Properties, defineGetterSetter, object);\n\n    Object.defineProperty(object, 'origin', {\n      enumerable: true,\n      get: function() {\n        return this._origin;\n      },\n      set: function(v) {\n        if (this._origin) {\n          this._origin.unbind(Events.Types.change, this._renderer.flagVertices);\n        }\n        this._origin = v;\n        this._origin.bind(Events.Types.change, this._renderer.flagVertices);\n        this._renderer.flagVertices();\n      }\n    });\n\n  }\n\n});\n\n_.extend(Rectangle.prototype, Path.prototype, {\n\n  constructor: Rectangle,\n\n  /**\n   * @name Two.Rectangle#_flagWidth\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Rectangle#width} needs updating.\n   */\n  _flagWidth: 0,\n  /**\n   * @name Two.Rectangle#_flagHeight\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Rectangle#height} needs updating.\n   */\n  _flagHeight: 0,\n\n  /**\n   * @name Two.Rectangle#_width\n   * @private\n   * @see {@link Two.Rectangle#width}\n   */\n  _width: 0,\n  /**\n   * @name Two.Rectangle#_height\n   * @private\n   * @see {@link Two.Rectangle#height}\n   */\n  _height: 0,\n\n  _origin: null,\n\n  /**\n   * @name Two.Rectangle#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagVertices || this._flagWidth || this._flagHeight) {\n\n      var xr = this._width / 2;\n      var yr = this._height / 2;\n\n      if (!this._closed && this.vertices.length === 4) {\n        this.vertices.push(new Anchor());\n      }\n\n      this.vertices[0].set(-xr, -yr).sub(this._origin).command = Commands.move;\n      this.vertices[1].set(xr, -yr).sub(this._origin).command = Commands.line;\n      this.vertices[2].set(xr, yr).sub(this._origin).command = Commands.line;\n      this.vertices[3].set(-xr, yr).sub(this._origin).command = Commands.line;\n      // FYI: Two.Sprite and Two.ImageSequence have 4 verts\n      if (this.vertices[4]) {\n        this.vertices[4].set(-xr, -yr).sub(this._origin).command = Commands.line;\n      }\n\n    }\n\n    Path.prototype._update.call(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Rectangle#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagWidth = this._flagHeight = false;\n    Path.prototype.flagReset.call(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Rectangle#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Rectangle}\n   * @description Create a new instance of {@link Two.Rectangle} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var clone = new Rectangle(0, 0, this.width, this.height);\n\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n    clone.skewX = this.skewX;\n    clone.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    _.each(Path.Properties, function(k) {\n      clone[k] = this[k];\n    }, this);\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.Rectangle#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var object = Path.prototype.toObject.call(this);\n    object.width = this.width;\n    object.height = this.height;\n    object.origin = this.origin.toObject();\n    return object;\n\n  }\n\n});\n\nRectangle.MakeObservable(Rectangle.prototype);\n\n/**\n * @name Two.Sprite\n * @class\n * @extends Two.Rectangle\n * @param {String|Two.Texture} [path] - The URL path or {@link Two.Texture} to be used as the bitmap data displayed on the sprite.\n * @param {Number} [ox=0] - The initial `x` position of the Two.Sprite.\n * @param {Number} [oy=0] - The initial `y` position of the Two.Sprite.\n * @param {Number} [cols=1] - The number of columns the sprite contains.\n * @param {Number} [rows=1] - The number of rows the sprite contains.\n * @param {Number} [frameRate=0] - The frame rate at which the partitions of the image should playback at.\n * @description A convenient package to display still or animated images through a tiled image source. For more information on the principals of animated imagery through tiling see [Texture Atlas](https://en.wikipedia.org/wiki/Texture_atlas) on Wikipedia.\n */\nfunction Sprite(path, ox, oy, cols, rows, frameRate) {\n\n  // Not using default constructor of Rectangle due to odd `beginning` / `ending` behavior.\n  // See: https://github.com/jonobr1/two.js/issues/383\n  Path.call(this, [\n    new Anchor(),\n    new Anchor(),\n    new Anchor(),\n    new Anchor()\n  ], true);\n\n  this.noStroke();\n  this.noFill();\n\n  /**\n   * @name Two.Sprite#texture\n   * @property {Two.Texture} - The texture to be used as bitmap data to display image in the scene.\n   */\n  if (path instanceof Texture) {\n    this.texture = path;\n  } else if (typeof path === 'string') {\n    this.texture = new Texture(path);\n  }\n\n  this.origin = new Vector();\n\n  this._update();\n  this.translation.set(ox || 0, oy || 0);\n\n  /**\n   * @name Two.Sprite#columns\n   * @property {Number} - The number of columns to split the texture into. Defaults to `1`.\n   */\n  if (typeof cols === 'number') {\n    this.columns = cols;\n  }\n\n  /**\n   * @name Two.Sprite#rows\n   * @property {Number} - The number of rows to split the texture into. Defaults to `1`.\n   */\n  if (typeof rows === 'number') {\n    this.rows = rows;\n  }\n\n  /**\n   * @name Two.Sprite#frameRate\n   * @property {Number} - The number of frames to animate against per second. Defaults to `0` for non-animated sprites.\n   */\n  if (typeof frameRate === 'number') {\n    this.frameRate = frameRate;\n  }\n\n  /**\n   * @name Two.Sprite#index\n   * @property {Number} - The index of the current tile of the sprite to display. Defaults to `0`.\n   */\n  this.index = 0;\n\n}\n\n_.extend(Sprite, {\n\n  /**\n   * @name Two.Sprite.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Sprite}.\n   */\n  Properties: [\n    'texture', 'columns', 'rows', 'frameRate', 'index'\n  ],\n\n  /**\n   * @name Two.Sprite.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Sprite} to any object. Handy if you'd like to extend or inherit the {@link Two.Sprite} class on a custom class.\n   */\n  MakeObservable: function(obj) {\n\n    Rectangle.MakeObservable(obj);\n    _.each(Sprite.Properties, defineGetterSetter, obj);\n\n  }\n\n});\n\n_.extend(Sprite.prototype, Rectangle.prototype, {\n\n  constructor: Sprite,\n\n  /**\n   * @name Two.Sprite#_flagTexture\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Sprite#texture} needs updating.\n   */\n  _flagTexture: false,\n\n  /**\n   * @name Two.Sprite#_flagColumns\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Sprite#columns} need updating.\n   */\n  _flagColumns: false,\n\n  /**\n   * @name Two.Sprite#_flagRows\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Sprite#rows} need updating.\n   */\n  _flagRows: false,\n\n  /**\n   * @name Two.Sprite#_flagFrameRate\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Sprite#flagFrameRate} needs updating.\n   */\n  _flagFrameRate: false,\n\n  /**\n   * @name Two.Sprite#_flagIndex\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Sprite#index} needs updating.\n   */\n  flagIndex: false,\n\n  // Private variables\n\n  /**\n   * @name Two.Sprite#_amount\n   * @private\n   * @property {Number} - Number of frames for a given {@link Two.Sprite}.\n   */\n  _amount: 1,\n\n  /**\n   * @name Two.Sprite#_duration\n   * @private\n   * @property {Number} - Number of milliseconds a {@link Two.Sprite}.\n   */\n  _duration: 0,\n\n  /**\n   * @name Two.Sprite#_startTime\n   * @private\n   * @property {Milliseconds} - Epoch time in milliseconds of when the {@link Two.Sprite} started.\n   */\n  _startTime: 0,\n\n  /**\n   * @name Two.Sprite#_playing\n   * @private\n   * @property {Boolean} - Dictates whether the {@link Two.Sprite} is animating or not.\n   */\n  _playing: false,\n\n  /**\n   * @name Two.Sprite#_firstFrame\n   * @private\n   * @property {Number} - The frame the {@link Two.Sprite} should start with.\n   */\n  _firstFrame: 0,\n\n  /**\n   * @name Two.Sprite#_lastFrame\n   * @private\n   * @property {Number} - The frame the {@link Two.Sprite} should end with.\n   */\n  _lastFrame: 0,\n\n  /**\n   * @name Two.Sprite#_playing\n   * @private\n   * @property {Boolean} - Dictates whether the {@link Two.Sprite} should loop or not.\n   */\n  _loop: true,\n\n  // Exposed through getter-setter\n\n  /**\n   * @name Two.Sprite#_texture\n   * @private\n   * @see {@link Two.Sprite#texture}\n   */\n  _texture: null,\n\n  /**\n   * @name Two.Sprite#_columns\n   * @private\n   * @see {@link Two.Sprite#columns}\n   */\n  _columns: 1,\n\n  /**\n   * @name Two.Sprite#_rows\n   * @private\n   * @see {@link Two.Sprite#rows}\n   */\n  _rows: 1,\n\n  /**\n   * @name Two.Sprite#_frameRate\n   * @private\n   * @see {@link Two.Sprite#frameRate}\n   */\n  _frameRate: 0,\n\n  /**\n   * @name Two.Sprite#_index\n   * @private\n   * @property {Number} - The current frame the {@link Two.Sprite} is currently displaying.\n   */\n  _index: 0,\n\n  /**\n   * @name Two.Sprite#_origin\n   * @private\n   * @see {@link Two.Sprite#origin}\n   */\n  _origin: null,\n\n  /**\n   * @name Two.Sprite#play\n   * @function\n   * @param {Number} [firstFrame=0] - The index of the frame to start the animation with.\n   * @param {Number} [lastFrame] - The index of the frame to end the animation with. Defaults to the last item in the {@link Two.Sprite#textures}.\n   * @param {Function} [onLastFrame] - Optional callback function to be triggered after playing the last frame. This fires multiple times when the sprite is looped.\n   * @description Initiate animation playback of a {@link Two.Sprite}.\n   */\n  play: function(firstFrame, lastFrame, onLastFrame) {\n\n    this._playing = true;\n    this._firstFrame = 0;\n    this._lastFrame = this.amount - 1;\n    this._startTime = _.performance.now();\n\n    if (typeof firstFrame === 'number') {\n      this._firstFrame = firstFrame;\n    }\n    if (typeof lastFrame === 'number') {\n      this._lastFrame = lastFrame;\n    }\n    if (typeof onLastFrame === 'function') {\n      this._onLastFrame = onLastFrame;\n    } else {\n      delete this._onLastFrame;\n    }\n\n    if (this._index !== this._firstFrame) {\n      this._startTime -= 1000 * Math.abs(this._index - this._firstFrame)\n        / this._frameRate;\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Sprite#pause\n   * @function\n   * @description Halt animation playback of a {@link Two.Sprite}.\n   */\n  pause: function() {\n\n    this._playing = false;\n    return this;\n\n  },\n\n  /**\n   * @name Two.Sprite#stop\n   * @function\n   * @description Halt animation playback of a {@link Two.Sprite} and set the current frame back to the first frame.\n   */\n  stop: function() {\n\n    this._playing = false;\n    this._index = 0;\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Sprite#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Sprite}\n   * @description Create a new instance of {@link Two.Sprite} with the same properties of the current sprite.\n   */\n  clone: function(parent) {\n\n    var clone = new Sprite(\n      this.texture, this.translation.x, this.translation.y,\n      this.columns, this.rows, this.frameRate\n    );\n\n    if (this.playing) {\n      clone.play(this._firstFrame, this._lastFrame);\n      clone._loop = this._loop;\n    }\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.Sprite#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n    var object = Rectangle.prototype.toObject.call(this);\n    object.texture = this.texture.toObject();\n    object.columns = this.columns;\n    object.rows = this.rows;\n    object.frameRate = this.frameRate;\n    object.index = this.index;\n    object._firstFrame = this._firstFrame;\n    object._lastFrame = this._lastFrame;\n    object._loop = this._loop;\n    return object;\n  },\n\n  /**\n   * @name Two.Sprite#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    var effect = this._texture;\n    var cols = this._columns;\n    var rows = this._rows;\n\n    var width, height, elapsed, amount, duration;\n    var index, iw, ih, frames;\n\n    if (this._flagColumns || this._flagRows) {\n      this._amount = this._columns * this._rows;\n    }\n\n    if (this._flagFrameRate) {\n      this._duration = 1000 * this._amount / this._frameRate;\n    }\n\n    if (this._flagTexture) {\n      this.fill = this._texture;\n    }\n\n    if (this._texture.loaded) {\n\n      iw = effect.image.width;\n      ih = effect.image.height;\n\n      width = iw / cols;\n      height = ih / rows;\n      amount = this._amount;\n\n      if (this.width !== width) {\n        this.width = width;\n      }\n      if (this.height !== height) {\n        this.height = height;\n      }\n\n      if (this._playing && this._frameRate > 0) {\n\n        if (_.isNaN(this._lastFrame)) {\n          this._lastFrame = amount - 1;\n        }\n\n        // TODO: Offload perf logic to instance of `Two`.\n        elapsed = _.performance.now() - this._startTime;\n        frames = this._lastFrame + 1;\n        duration = 1000 * (frames - this._firstFrame) / this._frameRate;\n\n        if (this._loop) {\n          elapsed = elapsed % duration;\n        } else {\n          elapsed = Math.min(elapsed, duration);\n        }\n\n        index = lerp(this._firstFrame, frames, elapsed / duration);\n        index = Math.floor(index);\n\n        if (index !== this._index) {\n          this._index = index;\n          if (index >= this._lastFrame - 1 && this._onLastFrame) {\n            this._onLastFrame();  // Shortcut for chainable sprite animations\n          }\n        }\n\n      }\n\n      var col = this._index % cols;\n      var row = Math.floor(this._index / cols);\n\n      var ox = - width * col + (iw - width) / 2;\n      var oy = - height * row + (ih - height) / 2;\n\n      // TODO: Improve performance\n      if (ox !== effect.offset.x) {\n        effect.offset.x = ox;\n      }\n      if (oy !== effect.offset.y) {\n        effect.offset.y = oy;\n      }\n\n    }\n\n    Rectangle.prototype._update.call(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Sprite#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagTexture = this._flagColumns = this._flagRows\n      = this._flagFrameRate = false;\n\n    Rectangle.prototype.flagReset.call(this);\n\n    return this;\n  }\n\n\n});\n\nSprite.MakeObservable(Sprite.prototype);\n\nvar cos$3 = Math.cos, sin$3 = Math.sin;\n\n/**\n * @name Two.Circle\n * @class\n * @extends Two.Path\n * @param {Number} [x=0] - The x position of the circle.\n * @param {Number} [y=0] - The y position of the circle.\n * @param {Number} [radius=0] - The radius value of the circle.\n * @param {Number} [resolution=4] - The number of vertices used to construct the circle.\n */\nfunction Circle(ox, oy, r, resolution) {\n\n  // At least 2 vertices are required for proper circlage\n  var amount = resolution ? Math.max(resolution, 2) : 4;\n\n  var points = [];\n  for (var i = 0; i < amount; i++) {\n    points.push(new Anchor(0, 0, 0, 0, 0, 0));\n  }\n\n  Path.call(this, points, true, true, true);\n\n  /**\n   * @name Two.Circle#radius\n   * @property {Number} - The size of the radius of the circle.\n   */\n  if (typeof r === 'number') {\n    this.radius = r;\n  }\n\n  this._update();\n\n  if (typeof ox === 'number') {\n    this.translation.x = ox;\n  }\n  if (typeof oy === 'number') {\n    this.translation.y = oy;\n  }\n\n}\n\n_.extend(Circle, {\n\n  /**\n   * @name Two.Circle.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Circle}.\n   */\n  Properties: ['radius'],\n\n  /**\n   * @name Two.Circle.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Circle} to any object. Handy if you'd like to extend the {@link Two.Circle} class on a custom class.\n   */\n  MakeObservable: function(obj) {\n\n    Path.MakeObservable(obj);\n    _.each(Circle.Properties, defineGetterSetter, obj);\n\n  }\n\n});\n\n_.extend(Circle.prototype, Path.prototype, {\n\n  constructor: Circle,\n\n  /**\n   * @name Two.Circle#_flagRadius\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Circle#radius} needs updating.\n   */\n  _flagRadius: false,\n\n  /**\n   * @name Two.Circle#_radius\n   * @private\n   * @see {@link Two.Circle#radius}\n   */\n  _radius: 0,\n\n  /**\n   * @name Two.Circle#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagVertices || this._flagRadius) {\n\n      var length = this.vertices.length;\n\n      if (!this._closed && length > 2) {\n        length -= 1;\n      }\n\n      // Coefficient for approximating circular arcs with Bezier curves\n      var c = (4 / 3) * Math.tan(Math.PI / (length * 2));\n      var radius = this._radius;\n      var rc = radius * c;\n\n      for (var i = 0; i < this.vertices.length; i++) {\n        var pct = i / length;\n        var theta = pct * TWO_PI;\n\n        var x = radius * cos$3(theta);\n        var y = radius * sin$3(theta);\n\n        var lx = rc * cos$3(theta - HALF_PI);\n        var ly = rc * sin$3(theta - HALF_PI);\n\n        var rx = rc * cos$3(theta + HALF_PI);\n        var ry = rc * sin$3(theta + HALF_PI);\n\n        var v = this.vertices[i];\n\n        v.command = i === 0 ? Commands.move : Commands.curve;\n        v.set(x, y);\n        v.controls.left.set(lx, ly);\n        v.controls.right.set(rx, ry);\n      }\n    }\n\n    Path.prototype._update.call(this);\n    return this;\n\n  },\n\n  /**\n   * @name Two.Circle#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagRadius = false;\n\n    Path.prototype.flagReset.call(this);\n    return this;\n\n  },\n\n  /**\n   * @name Two.Circle#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Circle}\n   * @description Create a new instance of {@link Two.Circle} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var clone = new Circle(0, 0, this.radius, this.vertices.length);\n\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n    clone.skewX = this.skewX;\n    clone.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    _.each(Path.Properties, function(k) {\n      clone[k] = this[k];\n    }, this);\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.Circle#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var object = Path.prototype.toObject.call(this);\n\n    _.each(Circle.Properties, function(property) {\n      object[property] = this[property];\n    }, this);\n\n    return object;\n\n  }\n\n});\n\nCircle.MakeObservable(Circle.prototype);\n\nvar cos$2 = Math.cos, sin$2 = Math.sin;\n\n/**\n * @name Two.Ellipse\n * @class\n * @extends Two.Path\n * @param {Number} [x=0] - The x position of the ellipse.\n * @param {Number} [y=0] - The y position of the ellipse.\n * @param {Number} [rx=0] - The radius value of the ellipse in the x direction.\n * @param {Number} [ry=0] - The radius value of the ellipse in the y direction.\n * @param {Number} [resolution=4] - The number of vertices used to construct the ellipse.\n */\nfunction Ellipse(ox, oy, rx, ry, resolution) {\n\n  if (typeof ry !== 'number' && typeof rx === 'number') {\n    ry = rx;\n  }\n\n  // At least 2 vertices are required for proper circlage\n  var amount = resolution ? Math.max(resolution, 2) : 4;\n\n  var points = [];\n  for (var i = 0; i < amount; i++) {\n    points.push(new Anchor());\n  }\n\n  Path.call(this, points, true, true, true);\n\n  /**\n   * @name Two.Ellipse#width\n   * @property {Number} - The width of the ellipse.\n   */\n  if (typeof rx === 'number') {\n    this.width = rx * 2;\n  }\n\n  /**\n   * @name Two.Ellipse#height\n   * @property {Number} - The height of the ellipse.\n   */\n  if (typeof ry === 'number') {\n    this.height = ry * 2;\n  }\n\n  this._update();\n  this.translation.set(ox, oy);\n\n}\n\n_.extend(Ellipse, {\n\n  /**\n   * @name Two.Ellipse.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Ellipse}.\n   */\n  Properties: ['width', 'height'],\n\n  /**\n   * @name Two.Ellipse.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Ellipse} to any object. Handy if you'd like to extend the {@link Two.Ellipse} class on a custom class.\n   */\n  MakeObservable: function(obj) {\n\n    Path.MakeObservable(obj);\n    _.each(Ellipse.Properties, defineGetterSetter, obj);\n\n  }\n\n});\n\n_.extend(Ellipse.prototype, Path.prototype, {\n\n  /**\n   * @name Two.Ellipse#_flagWidth\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Ellipse#width} needs updating.\n   */\n  _flagWidth: false,\n  /**\n   * @name Two.Ellipse#_flagHeight\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Ellipse#height} needs updating.\n   */\n  _flagHeight: false,\n\n  /**\n   * @name Two.Polygon#_width\n   * @private\n   * @see {@link Two.Ellipse#width}\n   */\n  _width: 0,\n  /**\n   * @name Two.Polygon#_height\n   * @private\n   * @see {@link Two.Ellipse#height}\n   */\n  _height: 0,\n\n  constructor: Ellipse,\n\n  /**\n   * @name Two.Ellipse#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagVertices || this._flagWidth || this._flagHeight) {\n\n      var length = this.vertices.length;\n\n      if (!this._closed && length > 2) {\n        length -= 1;\n      }\n\n      // Coefficient for approximating circular arcs with Bezier curves\n      var c = (4 / 3) * Math.tan(Math.PI / (this.vertices.length * 2));\n      var radiusX = this._width / 2;\n      var radiusY = this._height / 2;\n\n      for (var i = 0; i < this.vertices.length; i++) {\n        var pct = i / length;\n        var theta = pct * TWO_PI;\n\n        var x = radiusX * cos$2(theta);\n        var y = radiusY * sin$2(theta);\n\n        var lx = radiusX * c * cos$2(theta - HALF_PI);\n        var ly = radiusY * c * sin$2(theta - HALF_PI);\n\n        var rx = radiusX * c * cos$2(theta + HALF_PI);\n        var ry = radiusY * c * sin$2(theta + HALF_PI);\n\n        var v = this.vertices[i];\n\n        v.command = i === 0 ? Commands.move : Commands.curve;\n        v.set(x, y);\n        v.controls.left.set(lx, ly);\n        v.controls.right.set(rx, ry);\n      }\n    }\n\n    Path.prototype._update.call(this);\n    return this;\n\n  },\n\n  /**\n   * @name Two.Ellipse#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagWidth = this._flagHeight = false;\n\n    Path.prototype.flagReset.call(this);\n    return this;\n\n  },\n\n  /**\n   * @name Two.Ellipse#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Polygon}\n   * @description Create a new instance of {@link Two.Polygon} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var rx = this.width / 2;\n    var ry = this.height / 2;\n    var resolution = this.vertices.length;\n    var clone = new Ellipse(0, 0, rx, ry, resolution);\n\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n    clone.skewX = this.skewX;\n    clone.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    _.each(Path.Properties, function(k) {\n      clone[k] = this[k];\n    }, this);\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.Ellipse#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var object = Path.prototype.toObject.call(this);\n\n    _.each(Ellipse.Properties, function(property) {\n      object[property] = this[property];\n    }, this);\n\n    return object;\n\n  }\n\n});\n\nEllipse.MakeObservable(Ellipse.prototype);\n\n/**\n * @name Two.Line\n * @class\n * @extends Two.Path\n * @param {Number} [x1=0] - The x position of the first vertex on the line.\n * @param {Number} [y1=0] - The y position of the first vertex on the line.\n * @param {Number} [x2=0] - The x position of the second vertex on the line.\n * @param {Number} [y2=0] - The y position of the second vertex on the line.\n */\nfunction Line(x1, y1, x2, y2) {\n\n  Path.call(this, [\n      new Anchor(x1, y1),\n      new Anchor(x2, y2)\n  ]);\n\n  this.vertices[0].command = Commands.move;\n  this.vertices[1].command = Commands.line;\n\n  this.automatic = false;\n\n}\n\n_.extend(Line.prototype, Path.prototype, {\n\n  constructor: Line\n\n});\n\nPath.MakeObservable(Line.prototype);\n\n/**\n * @name Two.RoundedRectangle\n * @class\n * @extends Two.Path\n * @param {Number} [x=0] - The x position of the rounded rectangle.\n * @param {Number} [y=0] - The y position of the rounded rectangle.\n * @param {Number} [width=0] - The width value of the rounded rectangle.\n * @param {Number} [height=0] - The width value of the rounded rectangle.\n * @param {Number} [radius=0] - The radius value of the rounded rectangle.\n * @param {Number} [resolution=12] - The number of vertices used to construct the rounded rectangle.\n */\nfunction RoundedRectangle(ox, oy, width, height, radius) {\n\n  if (typeof radius === 'undefined' &&\n    typeof width === 'number' && typeof height === 'number') {\n    radius = Math.floor(Math.min(width, height) / 12);\n  }\n\n  var amount = 10;\n\n  var points = [];\n  for (var i = 0; i < amount; i++) {\n    points.push(\n      new Anchor(0, 0, 0, 0, 0, 0,\n        i === 0 ? Commands.move : Commands.curve)\n    );\n  }\n\n  // points[points.length - 1].command = Two.Commands.close;\n\n  Path.call(this, points);\n\n  this.closed = true;\n  this.automatic = false;\n\n  this._renderer.flagRadius = RoundedRectangle.FlagRadius.bind(this);\n\n  /**\n   * @name Two.RoundedRectangle#width\n   * @property {Number} - The width of the rounded rectangle.\n   */\n  if (typeof width === 'number') {\n    this.width = width;\n  }\n\n  /**\n   * @name Two.RoundedRectangle#height\n   * @property {Number} - The height of the rounded rectangle.\n   */\n  if (typeof height === 'number') {\n    this.height = height;\n  }\n\n  /**\n   * @name Two.RoundedRectangle#radius\n   * @property {Number} - The size of the radius of the rounded rectangle.\n   */\n  if (typeof radius === 'number') {\n    this.radius = radius;\n  }\n\n  this._update();\n  this.translation.set(ox, oy);\n\n}\n\n_.extend(RoundedRectangle, {\n\n  /**\n   * @name Two.RoundedRectangle.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.RoundedRectangle}.\n   */\n  Properties: ['width', 'height'],\n\n  /**\n   * @name Two.RoundedRectangle.FlagRadius\n   * @property {Function} - A convenience function to trigger the flag for radius changing.\n   */\n  FlagRadius: function() {\n    this._flagRadius = true;\n  },\n\n  /**\n   * @name Two.RoundedRectangle.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.RoundedRectangle} to any object. Handy if you'd like to extend the {@link Two.RoundedRectangle} class on a custom class.\n   */\n  MakeObservable: function(object) {\n\n    Path.MakeObservable(object);\n    _.each(RoundedRectangle.Properties, defineGetterSetter, object);\n\n    Object.defineProperty(object, 'radius', {\n      enumerable: true,\n      get: function() {\n        return this._radius;\n      },\n      set: function(v) {\n\n        if (this._radius instanceof Vector) {\n          this._radius.unbind(Events.Types.change, this._renderer.flagRadius);\n        }\n\n        this._radius = v;\n\n        if (this._radius instanceof Vector) {\n          this._radius.bind(Events.Types.change, this._renderer.flagRadius);\n        }\n\n        this._flagRadius = true;\n\n      }\n    });\n\n  }\n\n});\n\n_.extend(RoundedRectangle.prototype, Path.prototype, {\n\n  constructor: RoundedRectangle,\n\n  /**\n   * @name Two.RoundedRectangle#_flagWidth\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.RoundedRectangle#width} needs updating.\n   */\n  _flagWidth: false,\n  /**\n   * @name Two.RoundedRectangle#_flagHeight\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.RoundedRectangle#height} needs updating.\n   */\n  _flagHeight: false,\n  /**\n   * @name Two.RoundedRectangle#_flagRadius\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.RoundedRectangle#radius} needs updating.\n   */\n  _flagRadius: false,\n\n  /**\n   * @name Two.RoundedRectangle#_width\n   * @private\n   * @see {@link Two.RoundedRectangle#width}\n   */\n  _width: 0,\n  /**\n   * @name Two.RoundedRectangle#_height\n   * @private\n   * @see {@link Two.RoundedRectangle#height}\n   */\n  _height: 0,\n  /**\n   * @name Two.RoundedRectangle#_radius\n   * @private\n   * @see {@link Two.RoundedRectangle#radius}\n   */\n  _radius: 12,\n\n  /**\n   * @name Two.RoundedRectangle#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagVertices || this._flagWidth || this._flagHeight || this._flagRadius) {\n\n      var width = this._width;\n      var height = this._height;\n\n      var rx, ry;\n\n      if (this._radius instanceof Vector) {\n        rx = this._radius.x;\n        ry = this._radius.y;\n      } else {\n        rx = this._radius;\n        ry = this._radius;\n      }\n\n      var v;\n      var w = width / 2;\n      var h = height / 2;\n\n      v = this.vertices[0];\n      v.x = - (w - rx);\n      v.y = - h;\n\n      // Upper Right Corner\n\n      v = this.vertices[1];\n      v.x = (w - rx);\n      v.y = - h;\n      v.controls.left.clear();\n      v.controls.right.x = rx;\n      v.controls.right.y = 0;\n\n      v = this.vertices[2];\n      v.x = w;\n      v.y = - (h - ry);\n      v.controls.right.clear();\n      v.controls.left.clear();\n\n      // Bottom Right Corner\n\n      v = this.vertices[3];\n      v.x = w;\n      v.y = (h - ry);\n      v.controls.left.clear();\n      v.controls.right.x = 0;\n      v.controls.right.y = ry;\n\n      v = this.vertices[4];\n      v.x = (w - rx);\n      v.y = h;\n      v.controls.right.clear();\n      v.controls.left.clear();\n\n      // Bottom Left Corner\n\n      v = this.vertices[5];\n      v.x = - (w - rx);\n      v.y = h;\n      v.controls.left.clear();\n      v.controls.right.x = - rx;\n      v.controls.right.y = 0;\n\n      v = this.vertices[6];\n      v.x = - w;\n      v.y = (h - ry);\n      v.controls.left.clear();\n      v.controls.right.clear();\n\n      // Upper Left Corner\n\n      v = this.vertices[7];\n      v.x = - w;\n      v.y = - (h - ry);\n      v.controls.left.clear();\n      v.controls.right.x = 0;\n      v.controls.right.y = - ry;\n\n      v = this.vertices[8];\n      v.x = - (w - rx);\n      v.y = - h;\n      v.controls.left.clear();\n      v.controls.right.clear();\n\n      v = this.vertices[9];\n      v.copy(this.vertices[8]);\n\n    }\n\n    Path.prototype._update.call(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.RoundedRectangle#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagWidth = this._flagHeight = this._flagRadius = false;\n    Path.prototype.flagReset.call(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.RoundedRectangle#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.RoundedRectangle}\n   * @description Create a new instance of {@link Two.RoundedRectangle} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var width = this.width;\n    var height = this.height;\n    var radius = this.radius;\n\n    var clone = new RoundedRectangle(0, 0, width, height, radius);\n\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n    clone.skewX = this.skewX;\n    clone.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    _.each(Path.Properties, function(k) {\n      clone[k] = this[k];\n    }, this);\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.RoundedRectangle#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var object = Path.prototype.toObject.call(this);\n\n    _.each(RoundedRectangle.Properties, function(property) {\n      object[property] = this[property];\n    }, this);\n\n    object.radius = typeof this.radius === 'number'\n      ? this.radius : this.radius.toObject();\n\n    return object;\n\n  }\n\n});\n\nRoundedRectangle.MakeObservable(RoundedRectangle.prototype);\n\nvar min = Math.min, max = Math.max;\n\n/**\n * @name Two.Text\n * @class\n * @extends Two.Shape\n * @param {String} [message] - The String to be rendered to the scene.\n * @param {Number} [x=0] - The position in the x direction for the object.\n * @param {Number} [y=0] - The position in the y direction for the object.\n * @param {Object} [styles] - An object where styles are applied. Attribute must exist in Two.Text.Properties.\n * @description This is a primitive class for creating drawable text that can be added to the scenegraph.\n * @returns {Two.Text}\n */\nfunction Text(message, x, y, styles) {\n\n  Shape.call(this);\n\n  this._renderer.type = 'text';\n  this._renderer.flagFill = Text.FlagFill.bind(this);\n  this._renderer.flagStroke = Text.FlagStroke.bind(this);\n\n  this.value = message;\n\n  if (typeof x === 'number') {\n    this.translation.x = x;\n  }\n  if (typeof y === 'number') {\n    this.translation.y = y;\n  }\n\n  /**\n   * @name Two.Text#dashes\n   * @property {Number[]} - Array of numbers. Odd indices represent dash length. Even indices represent dash space.\n   * @description A list of numbers that represent the repeated dash length and dash space applied to the stroke of the text.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more information on the SVG stroke-dasharray attribute.\n   */\n  this.dashes = [];\n\n  /**\n   * @name Two.Text#dashes#offset\n   * @property {Number} - A number in pixels to offset {@link Two.Text#dashes} display.\n   */\n  this.dashes.offset = 0;\n\n  if (!_.isObject(styles)) {\n    return this;\n  }\n\n  _.each(Text.Properties, function(property) {\n\n    if (property in styles) {\n      this[property] = styles[property];\n    }\n\n  }, this);\n\n}\n\n_.extend(Text, {\n\n  /**\n   * @name Two.Text.Ratio\n   * @property {Number} - Approximate aspect ratio of a typeface's character width to height.\n   */\n  Ratio: 0.6,\n\n  /**\n   * @name Two.Text.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Text}.\n   */\n  Properties: [\n    'value', 'family', 'size', 'leading', 'alignment', 'linewidth', 'style',\n    'weight', 'decoration', 'baseline', 'opacity', 'visible', 'className',\n    'fill', 'stroke',\n  ],\n\n  /**\n   * @name Two.Text.FlagFill\n   * @function\n   * @description Cached method to let renderers know the fill property have been updated on a {@link Two.Text}.\n   */\n  FlagFill: function() {\n    this._flagFill = true;\n  },\n\n  /**\n   * @name Two.Text.FlagStroke\n   * @function\n   * @description Cached method to let renderers know the stroke property have been updated on a {@link Two.Text}.\n   */\n  FlagStroke: function() {\n    this._flagStroke = true;\n  },\n\n  MakeObservable: function(object) {\n\n    Shape.MakeObservable(object);\n\n    _.each(Text.Properties.slice(0, 12), defineGetterSetter, object);\n\n    Object.defineProperty(object, 'fill', {\n      enumerable: true,\n      get: function() {\n        return this._fill;\n      },\n      set: function(f) {\n\n        if (this._fill instanceof Gradient\n          || this._fill instanceof LinearGradient\n          || this._fill instanceof RadialGradient\n          || this._fill instanceof Texture) {\n          this._fill.unbind(Events.Types.change, this._renderer.flagFill);\n        }\n\n        this._fill = f;\n        this._flagFill = true;\n\n        if (this._fill instanceof Gradient\n          || this._fill instanceof LinearGradient\n          || this._fill instanceof RadialGradient\n          || this._fill instanceof Texture) {\n          this._fill.bind(Events.Types.change, this._renderer.flagFill);\n        }\n\n      }\n    });\n\n    Object.defineProperty(object, 'stroke', {\n      enumerable: true,\n      get: function() {\n        return this._stroke;\n      },\n      set: function(f) {\n\n        if (this._stroke instanceof Gradient\n          || this._stroke instanceof LinearGradient\n          || this._stroke instanceof RadialGradient\n          || this._stroke instanceof Texture) {\n          this._stroke.unbind(Events.Types.change, this._renderer.flagStroke);\n        }\n\n        this._stroke = f;\n        this._flagStroke = true;\n\n        if (this._stroke instanceof Gradient\n          || this._stroke instanceof LinearGradient\n          || this._stroke instanceof RadialGradient\n          || this._stroke instanceof Texture) {\n          this._stroke.bind(Events.Types.change, this._renderer.flagStroke);\n        }\n\n      }\n    });\n\n    Object.defineProperty(object, 'mask', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._mask;\n      },\n\n      set: function(v) {\n        if (this._mask) {\n          this._mask.clip = false;\n        }\n        this._mask = v;\n        this._flagMask = true;\n        if (v && !v.clip) {\n          v.clip = true;\n        }\n      }\n\n    });\n\n    Object.defineProperty(object, 'clip', {\n      enumerable: true,\n      get: function() {\n        return this._clip;\n      },\n      set: function(v) {\n        this._clip = v;\n        this._flagClip = true;\n      }\n    });\n\n    Object.defineProperty(object, 'dashes', {\n      enumerable: true,\n      get: function() {\n        return this._dashes;\n      },\n      set: function(v) {\n        if (typeof v.offset !== 'number') {\n          v.offset = (this.dashes && this._dashes.offset) || 0;\n        }\n        this._dashes = v;\n      }\n    });\n\n  }\n\n});\n\n_.extend(Text.prototype, Shape.prototype, {\n\n  constructor: Text,\n\n  // Flags\n  // http://en.wikipedia.org/wiki/Flag\n\n  /**\n   * @name Two.Text#_flagValue\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#value} need updating.\n   */\n  _flagValue: true,\n\n  /**\n   * @name Two.Text#_flagFamily\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#family} need updating.\n   */\n  _flagFamily: true,\n\n  /**\n   * @name Two.Text#_flagSize\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#size} need updating.\n   */\n  _flagSize: true,\n\n  /**\n   * @name Two.Text#_flagLeading\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#leading} need updating.\n   */\n  _flagLeading: true,\n\n  /**\n   * @name Two.Text#_flagAlignment\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#alignment} need updating.\n   */\n  _flagAlignment: true,\n\n  /**\n   * @name Two.Text#_flagBaseline\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#baseline} need updating.\n   */\n  _flagBaseline: true,\n\n  /**\n   * @name Two.Text#_flagStyle\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#style} need updating.\n   */\n  _flagStyle: true,\n\n  /**\n   * @name Two.Text#_flagWeight\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#weight} need updating.\n   */\n  _flagWeight: true,\n\n  /**\n   * @name Two.Text#_flagDecoration\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#decoration} need updating.\n   */\n  _flagDecoration: true,\n\n  /**\n   * @name Two.Text#_flagFill\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#fill} need updating.\n   */\n  _flagFill: true,\n\n  /**\n   * @name Two.Text#_flagStroke\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#stroke} need updating.\n   */\n  _flagStroke: true,\n\n  /**\n   * @name Two.Text#_flagLinewidth\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#linewidth} need updating.\n   */\n  _flagLinewidth: true,\n\n  /**\n   * @name Two.Text#_flagOpacity\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#opacity} need updating.\n   */\n  _flagOpacity: true,\n\n  /**\n   * @name Two.Text#_flagClassName\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#className} need updating.\n   */\n  _flagClassName: true,\n\n  /**\n   * @name Two.Text#_flagVisible\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#visible} need updating.\n   */\n  _flagVisible: true,\n\n  /**\n   * @name Two.Path#_flagMask\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Path#mask} needs updating.\n   */\n  _flagMask: false,\n\n  /**\n   * @name Two.Text#_flagClip\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Text#clip} need updating.\n   */\n  _flagClip: false,\n\n  // Underlying Properties\n\n  /**\n   * @name Two.Text#value\n   * @property {String} - The characters to be rendered to the the screen. Referred to in the documentation sometimes as the `message`.\n   */\n  _value: '',\n\n  /**\n   * @name Two.Text#family\n   * @property {String} - The font family Two.js should attempt to regsiter for rendering. The default value is `'sans-serif'`. Comma separated font names can be supplied as a \"stack\", similar to the CSS implementation of `font-family`.\n   */\n  _family: 'sans-serif',\n\n  /**\n   * @name Two.Text#size\n   * @property {Number} - The font size in Two.js point space. Defaults to `13`.\n   */\n  _size: 13,\n\n  /**\n   * @name Two.Text#leading\n   * @property {Number} - The height between lines measured from base to base in Two.js point space. Defaults to `17`.\n   */\n  _leading: 17,\n\n  /**\n   * @name Two.Text#alignment\n   * @property {String} - Alignment of text in relation to {@link Two.Text#translation}'s coordinates. Possible values include `'left'`, `'center'`, `'right'`. Defaults to `'center'`.\n   */\n  _alignment: 'center',\n\n  /**\n   * @name Two.Text#baseline\n   * @property {String} - The vertical aligment of the text in relation to {@link Two.Text#translation}'s coordinates. Possible values include `'top'`, `'middle'`, `'bottom'`, and `'baseline'`. Defaults to `'baseline'`.\n   */\n  _baseline: 'middle',\n\n  /**\n   * @name Two.Text#style\n   * @property {String} - The font's style. Possible values include '`normal`', `'italic'`. Defaults to `'normal'`.\n   */\n  _style: 'normal',\n\n  /**\n   * @name Two.Text#weight\n   * @property {Number} - A number at intervals of 100 to describe the font's weight. This compatibility varies with the typeface's variant weights. Larger values are bolder. Smaller values are thinner. Defaults to `'500'`.\n   */\n  _weight: 500,\n\n  /**\n   * @name Two.Text#decoration\n   * @property {String} - String to delineate whether text should be decorated with for instance an `'underline'`. Defaults to `'none'`.\n   */\n  _decoration: 'none',\n\n  /**\n   * @name Two.Text#fill\n   * @property {(String|Two.Gradient|Two.Texture)} - The value of what the text object should be filled in with.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n   */\n  _fill: '#000',\n\n  /**\n   * @name Two.Text#stroke\n   * @property {(String|Two.Gradient|Two.Texture)} - The value of what the text object should be filled in with.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n   */\n  _stroke: 'transparent',\n\n  /**\n   * @name Two.Text#linewidth\n   * @property {Number} - The thickness in pixels of the stroke.\n   */\n  _linewidth: 1,\n\n  /**\n   * @name Two.Text#opacity\n   * @property {Number} - The opaqueness of the text object.\n   * @nota-bene Can be used in conjunction with CSS Colors that have an alpha value.\n   */\n  _opacity: 1,\n\n  /**\n   * @name Two.Text#className\n   * @property {String} - A class to be applied to the element to be compatible with CSS styling. Only available for the {@link Two.SvgRenderer}.\n   */\n  _className: '',\n\n  /**\n   * @name Two.Text#visible\n   * @property {Boolean} - Display the text object or not.\n   * @nota-bene For {@link Two.CanvasRenderer} and {@link Two.WebGLRenderer} when set to false all updating is disabled improving performance dramatically with many objects in the scene.\n   */\n  _visible: true,\n\n  /**\n   * @name Two.Text#mask\n   * @property {Two.Shape} - The shape whose alpha property becomes a clipping area for the text.\n   * @nota-bene This property is currently not working becuase of SVG spec issues found here {@link https://code.google.com/p/chromium/issues/detail?id=370951}.\n   */\n  _mask: null,\n\n  /**\n   * @name Two.Text#clip\n   * @property {Two.Shape} - Object to define clipping area.\n   * @nota-bene This property is currently not working becuase of SVG spec issues found here {@link https://code.google.com/p/chromium/issues/detail?id=370951}.\n   */\n  _clip: false,\n\n  /**\n   * @name Two.Text#_dashes\n   * @private\n   * @see {@link Two.Text#dashes}\n   */\n  _dashes: null,\n\n  /**\n   * @name Two.Text#remove\n   * @function\n   * @description Remove self from the scene / parent.\n   */\n  remove: function() {\n\n    if (!this.parent) {\n      return this;\n    }\n\n    this.parent.remove(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Text#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Text}\n   * @description Create a new instance of {@link Two.Text} with the same properties of the current text object.\n   */\n  clone: function(parent) {\n\n    var clone = new Text(this.value);\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n\n    _.each(Text.Properties, function(property) {\n      clone[property] = this[property];\n    }, this);\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone._update();\n\n  },\n\n  /**\n   * @name Two.Text#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the text object.\n   */\n  toObject: function() {\n\n    var result = {\n      translation: this.translation.toObject(),\n      rotation: this.rotation,\n      scale: this.scale\n    };\n\n    if (this.matrix.manual) {\n      result.matrix = this.matrix.toObject();\n    }\n\n    _.each(Text.Properties, function(property) {\n      result[property] = this[property];\n    }, this);\n\n    return result;\n\n  },\n\n  /**\n   * @name Two.Text#noFill\n   * @function\n   * @description Short hand method to set fill to `transparent`.\n   */\n  noFill: function() {\n    this.fill = 'transparent';\n    return this;\n  },\n\n  /**\n   * @name Two.Text#noStroke\n   * @function\n   * @description Short hand method to set stroke to `transparent`.\n   */\n  noStroke: function() {\n    this.stroke = undefined;\n    this.linewidth = undefined;\n    return this;\n  },\n\n  // A shim to not break `getBoundingClientRect` calls.\n  // TODO: Implement a way to calculate proper bounding\n  // boxes of `Two.Text`.\n\n  /**\n   * @name Two.Text#getBoundingClientRect\n   * @function\n   * @param {Boolean} [shallow=false] - Describes whether to calculate off local matrix or world matrix.\n   * @returns {Object} - Returns object with top, left, right, bottom, width, height attributes.\n   * @description Return an object with top, left, right, bottom, width, and height parameters of the text object.\n   */\n  getBoundingClientRect: function(shallow) {\n\n    var matrix, a, b, c, d;\n    var left, right, top, bottom;\n\n    // TODO: Update this to not __always__ update. Just when it needs to.\n    this._update(true);\n\n    matrix = shallow ? this._matrix : getComputedMatrix(this);\n\n    var height = this.leading;\n    var width = this.value.length * this.size * Text.Ratio;\n    var border = (this._linewidth || 0) / 2;\n\n    switch (this.alignment) {\n      case 'left':\n        left = - border;\n        right = width + border;\n        break;\n      case 'right':\n        left = - (width + border);\n        right = border;\n        break;\n      default:\n        left = - (width / 2 + border);\n        right = width / 2 + border;\n    }\n\n    switch (this.baseline) {\n      case 'top':\n        top = - border;\n        bottom = height + border;\n        break;\n      case 'bottom':\n        top = - (height + border);\n        bottom = border;\n        break;\n      default:\n        top = - (height / 2 + border);\n        bottom = height / 2 + border;\n    }\n\n    a = matrix.multiply(left, top, 1);\n    b = matrix.multiply(left, bottom, 1);\n    c = matrix.multiply(right, top, 1);\n    d = matrix.multiply(right, bottom, 1);\n\n    top = min(a.y, b.y, c.y, d.y);\n    left = min(a.x, b.x, c.x, d.x);\n    right = max(a.x, b.x, c.x, d.x);\n    bottom = max(a.y, b.y, c.y, d.y);\n\n    return {\n      top: top,\n      left: left,\n      right: right,\n      bottom: bottom,\n      width: right - left,\n      height: bottom - top\n    };\n\n  },\n\n  /**\n   * @name Two.Text#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagValue = this._flagFamily = this._flagSize =\n      this._flagLeading = this._flagAlignment = this._flagFill =\n      this._flagStroke = this._flagLinewidth = this._flagOpacity =\n      this._flagVisible = this._flagClip = this._flagDecoration =\n      this._flagClassName = this._flagBaseline = this._flagWeight =\n        this._flagStyle = false;\n\n    Shape.prototype.flagReset.call(this);\n\n    return this;\n\n  }\n\n});\n\nText.MakeObservable(Text.prototype);\n\n// https://github.com/jonobr1/two.js/issues/507#issuecomment-777159213\nvar regex = {\n  path: /[+-]?(?:\\d*\\.\\d+|\\d+)(?:[eE][+-]\\d+)?/g,\n  unitSuffix: /[a-zA-Z%]*/i\n};\n\nvar alignments = {\n  start: 'left',\n  middle: 'center',\n  end: 'right'\n};\n\n/**\n * @name Two.Utils.getAlignment\n * @function\n * @param {AlignmentString}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor}\n */\nvar getAlignment = function(anchor) {\n  return alignments[anchor];\n};\n\nvar getBaseline = function(node) {\n  var a = node.getAttribute('dominant-baseline');\n  var b = node.getAttribute('alignment-baseline');\n  return a || b;\n};\n\nvar getTagName = function(tag) {\n  return tag.replace(/svg:/ig, '').toLowerCase();\n};\n\nvar applyTransformsToVector = function(transforms, vector) {\n\n  vector.x += transforms.translateX;\n  vector.y += transforms.translateY;\n\n  vector.x *= transforms.scaleX;\n  vector.y *= transforms.scaleY;\n\n  if (transforms.rotation !== 0) {\n    // TODO: Test further\n    var l = vector.length();\n    vector.x = l * Math.cos(transforms.rotation);\n    vector.y = l * Math.sin(transforms.rotation);\n  }\n\n};\n\n/**\n * @name Two.Utils.extractCSSText\n * @function\n * @param {String} text - The CSS text body to be parsed and extracted.\n * @param {Object} [styles] - The styles object to apply CSS key values to.\n * @returns {Object} styles\n * @description Parse CSS text body and apply them as key value pairs to a JavaScript object.\n */\nvar extractCSSText = function(text, styles) {\n\n  var commands, command, name, value;\n\n  if (!styles) {\n    styles = {};\n  }\n\n  commands = text.split(';');\n\n  for (var i = 0; i < commands.length; i++) {\n    command = commands[i].split(':');\n    name = command[0];\n    value = command[1];\n    if (typeof name === 'undefined' || typeof value === 'undefined') {\n      continue;\n    }\n    styles[name] = value.replace(/\\s/, '');\n  }\n\n  return styles;\n\n};\n\n/**\n * @name Two.Utils.getSvgStyles\n * @function\n * @param {SVGElement} node - The SVG node to parse.\n * @returns {Object} styles\n * @description Get the CSS comands from the `style` attribute of an SVG node and apply them as key value pairs to a JavaScript object.\n */\nvar getSvgStyles = function(node) {\n\n  var styles = {};\n  var attributes = getSvgAttributes(node);\n  var length = Math.max(attributes.length, node.style.length);\n\n  for (var i = 0; i < length; i++) {\n\n    var command = node.style[i];\n    var attribute = attributes[i];\n\n    if (command) {\n      styles[command] = node.style[command];\n    }\n    if (attribute) {\n      styles[attribute] = node.getAttribute(attribute);\n    }\n\n  }\n\n  return styles;\n\n};\n\nvar getSvgAttributes = function(node) {\n\n  var attributes = node.getAttributeNames();\n\n  // Reserved attributes to remove\n  var keywords = ['id', 'class', 'transform', 'xmlns', 'viewBox'];\n\n  for (var i = 0; i < keywords.length; i++) {\n    var keyword = keywords[i];\n    var index = Array.prototype.indexOf.call(attributes, keyword);\n    if (index >= 0) {\n      attributes.splice(index, 1);\n    }\n  }\n\n  return attributes;\n\n};\n\n/**\n * @name Two.Utils.applySvgViewBox\n * @function\n * @param {Two.Shape} node - The Two.js object to apply viewbox matrix to\n * @param {String} value - The viewBox value from the SVG attribute\n * @returns {Two.Shape} node\n * @description Applies the transform of the SVG Viewbox on a given node.\n */\nvar applySvgViewBox = function(node, value) {\n\n  var elements = value.split(/[\\s,]/);\n\n  var x = - parseFloat(elements[0]);\n  var y = - parseFloat(elements[1]);\n  var width = parseFloat(elements[2]);\n  var height = parseFloat(elements[3]);\n\n  if (x && y) {\n    for (var i = 0; i < node.children.length; i++) {\n      var child = node.children[i];\n      if ('translation' in child) {\n        child.translation.add(x, y);\n      } else if ('x' in child) {\n        child.x = x;\n      } else if ('y' in child) {\n        child.y = y;\n      }\n    }\n  }\n\n  var xExists = typeof node.x === 'number';\n  var yExists = typeof node.y === 'number';\n  var widthExists = typeof node.width === 'number';\n  var heightExists = typeof node.height === 'number';\n\n  if (xExists) {\n    node.translation.x += node.x;\n  }\n  if (yExists) {\n    node.translation.y += node.y;\n  }\n  if (widthExists || heightExists) {\n    node.scale = new Vector(1, 1);\n  }\n  if (widthExists) {\n    node.scale.x = node.width / width;\n  }\n  if (heightExists) {\n    node.scale.y = node.height / height;\n  }\n\n  node.mask = new Rectangle(0, 0, width, height);\n  node.mask.origin.set(- width / 2, - height / 2);\n\n  return node;\n\n};\n\n/**\n * @name Two.Utils.applySvgAttributes\n * @function\n * @param {SVGElement} node - An SVG Node to extrapolate attributes from.\n * @param {Two.Shape} elem - The Two.js object to apply extrapolated attributes to.\n * @returns {Two.Shape} The Two.js object passed now with applied attributes.\n * @description This function iterates through an SVG Node's properties and stores ones of interest. It tries to resolve styles applied via CSS as well.\n * @TODO Reverse calculate {@link Two.Gradient}s for fill / stroke of any given path.\n */\nvar applySvgAttributes = function(node, elem, parentStyles) {\n\n  var styles = {}, attributes = {}, extracted = {},\n    i, m, key, value, prop, attr;\n  var transforms, x, y;\n  var id, scene, ref, tagName;\n\n  // Not available in non browser environments\n  if (root$1.getComputedStyle) {\n    // Convert CSSStyleDeclaration to a normal object\n    var computedStyles = root$1.getComputedStyle(node);\n    i = computedStyles.length;\n\n    while (i--) {\n      key = computedStyles[i];\n      value = computedStyles[key];\n      // Gecko returns undefined for unset properties\n      // Webkit returns the default value\n      if (typeof value !== 'undefined') {\n        styles[key] = value;\n      }\n    }\n  }\n\n  // Convert NodeMap to a normal object\n  for (i = 0; i < node.attributes.length; i++) {\n    attr = node.attributes[i];\n    if (/style/i.test(attr.nodeName)) {\n      extractCSSText(attr.value, extracted);\n    } else {\n      attributes[attr.nodeName] = attr.value;\n    }\n  }\n\n  // Getting the correct opacity is a bit tricky, since SVG path elements don't\n  // support opacity as an attribute, but you can apply it via CSS.\n  // So we take the opacity and set (stroke/fill)-opacity to the same value.\n  if (typeof styles.opacity !== 'undefined') {\n    styles['stroke-opacity'] = styles.opacity;\n    styles['fill-opacity'] = styles.opacity;\n    delete styles.opacity;\n  }\n\n  // Merge attributes and applied styles (attributes take precedence)\n  if (parentStyles) {\n    _.defaults(styles, parentStyles);\n  }\n  _.extend(styles, extracted, attributes);\n\n  // Similarly visibility is influenced by the value of both display and visibility.\n  // Calculate a unified value here which defaults to `true`.\n  styles.visible = !(typeof styles.display === 'undefined' && /none/i.test(styles.display))\n    || (typeof styles.visibility === 'undefined' && /hidden/i.test(styles.visibility));\n\n  // Now iterate the whole thing\n  for (key in styles) {\n    value = styles[key];\n\n    switch (key) {\n      case 'gradientTransform':\n        // TODO: Check this out https://github.com/paperjs/paper.js/blob/develop/src/svg/SvgImport.js#L315\n        if (/none/i.test(value)) break;\n        m = (node.gradientTransform && node.gradientTransform.baseVal && node.gradientTransform.baseVal.length > 0)\n          ? node.gradientTransform.baseVal[0].matrix\n          : (node.getCTM ? node.getCTM() : null);\n\n        if (m === null) break;\n\n        transforms = decomposeMatrix(m);\n\n        switch (elem._renderer.type) {\n          case 'linear-gradient':\n            applyTransformsToVector(transforms, elem.left);\n            applyTransformsToVector(transforms, elem.right);\n            break;\n          case 'radial-gradient':\n            elem.center.x += transforms.translateX;\n            elem.center.y += transforms.translateY;\n\n            elem.focal.x += transforms.translateX;\n            elem.focal.y += transforms.translateY;\n\n            elem.radius *= Math.max(transforms.scaleX, transforms.scaleY);\n            break;\n        }\n\n        break;\n      case 'transform':\n        // TODO: Check this out https://github.com/paperjs/paper.js/blob/develop/src/svg/SvgImport.js#L315\n        if (/none/i.test(value)) break;\n        m = (node.transform && node.transform.baseVal && node.transform.baseVal.length > 0)\n          ? node.transform.baseVal[0].matrix\n          : (node.getCTM ? node.getCTM() : null);\n\n        // Might happen when transform string is empty or not valid.\n        if (m === null) break;\n\n        if (Constants.AutoCalculateImportedMatrices) {\n\n          // Decompose and infer Two.js related properties.\n          transforms = decomposeMatrix(m);\n\n          elem.translation.set(transforms.translateX, transforms.translateY);\n          elem.rotation = Math.PI * (transforms.rotation / 180);\n          elem.scale = new Vector(transforms.scaleX, transforms.scaleY);\n\n          x = parseFloat((styles.x + '').replace('px'));\n          y = parseFloat((styles.y + '').replace('px'));\n\n          // Override based on attributes.\n          if (x) {\n            elem.translation.x = x;\n          }\n\n          if (y) {\n            elem.translation.y = y;\n          }\n\n        } else {\n\n          // Edit the underlying matrix and don't force an auto calc.\n          m = node.getCTM();\n          elem._matrix.manual = true;\n          elem._matrix.set(m.a, m.b, m.c, m.d, m.e, m.f);\n\n        }\n\n        break;\n      case 'visible':\n        if (elem instanceof Group) {\n          elem._visible = value;\n          break;\n        }\n        elem.visible = value;\n        break;\n      case 'stroke-linecap':\n        if (elem instanceof Group) {\n          elem._cap = value;\n          break;\n        }\n        elem.cap = value;\n        break;\n      case 'stroke-linejoin':\n        if (elem instanceof Group) {\n          elem._join = value;\n          break;\n        }\n        elem.join = value;\n        break;\n      case 'stroke-miterlimit':\n        if (elem instanceof Group) {\n          elem._miter = value;\n          break;\n        }\n        elem.miter = value;\n        break;\n      case 'stroke-width':\n        if (elem instanceof Group) {\n          elem._linewidth = parseFloat(value);\n          break;\n        }\n        elem.linewidth = parseFloat(value);\n        break;\n      case 'opacity':\n      case 'stroke-opacity':\n      case 'fill-opacity':\n        // Only apply styles to rendered shapes\n        // in the scene.\n        if (elem instanceof Group) {\n          elem._opacity = parseFloat(value);\n          break;\n        }\n        elem.opacity = parseFloat(value);\n        break;\n      case 'clip-path':\n        if (/url\\(#.*\\)/i.test(value)) {\n          id = value.replace(/url\\(#(.*)\\)/i, '$1');\n          if (read.defs.current && read.defs.current.contains(id)) {\n            ref = read.defs.current.get(id);\n            if (ref && ref.childNodes.length > 0) {\n              ref = ref.childNodes[0];\n              tagName = getTagName(ref.nodeName);\n              elem.mask = read[tagName].call(this, ref, {});\n              switch (elem._renderer.type) {\n                case 'text':\n                case 'path':\n                  // The matrix here needs to change to insure that the object\n                  // clipping is in the same coordinate space as the `elem`.\n                  elem.position.add(elem.mask.position);\n                  elem.mask.position.clear();\n                  break;\n              }\n            }\n          }\n        }\n        break;\n      case 'fill':\n      case 'stroke':\n        prop = (elem instanceof Group ? '_' : '') + key;\n        if (/url\\(#.*\\)/i.test(value)) {\n          id = value.replace(/url\\(#(.*)\\)/i, '$1');\n          node.setAttribute(key, value.replace(/\\)/i, '-' + Constants.Identifier + 'applied)'));\n          if (read.defs.current && read.defs.current.contains(id)) {\n            ref = read.defs.current.get(id);\n            tagName = getTagName(ref.nodeName);\n            ref = read[tagName].call(this, ref, {});\n          } else {\n            scene = getScene(this);\n            ref = scene.getById(id);\n          }\n          elem[prop] = ref;\n        } else {\n          elem[prop] = (/none/i.test(value)) ? 'transparent' : value;\n        }\n        break;\n      case 'id':\n        elem.id = value;\n        // Overwritten id for non-conflicts on same page SVG documents\n        // TODO: Make this non-descructive\n        node.id = value + '-' + Constants.Identifier + 'applied';\n        break;\n      case 'class':\n      case 'className':\n        elem.classList = value.split(' ');\n        break;\n      case 'x':\n      case 'y':\n        var ca = elem instanceof Gradient;\n        var cb = elem instanceof LinearGradient;\n        var cc = elem instanceof RadialGradient;\n        if (ca || cb || cc) {\n          break;\n        }\n        if (value.match('[a-z%]$') && !value.endsWith('px')) {\n          var error = new TwoError(\n            'only pixel values are supported with the ' + key + ' attribute.');\n          console.warn(error.name, error.message);\n        }\n        elem.translation[key] = parseFloat(value);\n        break;\n      case 'font-family':\n        if (elem instanceof Text) {\n          elem.family = value;\n        }\n        break;\n      case 'font-size':\n        if (elem instanceof Text) {\n          elem.size = value;\n        }\n        break;\n      case 'font-weight':\n        if (elem instanceof Text) {\n          elem.weight = value;\n        }\n        break;\n      case 'font-style':\n        if (elem instanceof Text) {\n          elem.style = value;\n        }\n        break;\n      case 'text-decoration':\n        if (elem instanceof Text) {\n          elem.decoration = value;\n        }\n        break;\n      case 'line-height':\n        if (elem instanceof Text) {\n          elem.leading = value;\n        }\n        break;\n    }\n  }\n\n  return styles;\n\n};\n\n/**\n * @name Two.Utils.updateDefsCache\n * @function\n * @param {SVGElement} node - The SVG Node with which to update the defs cache.\n * @param {Object} Object - The defs cache to be updated.\n * @description Update the cache of children of <defs /> tags.\n */\nvar updateDefsCache = function(node, defsCache) {\n  for (var i = 0, l = node.childNodes.length; i < l; i++) {\n    var n = node.childNodes[i];\n    if (!n.id) continue;\n\n    var tagName = getTagName(node.nodeName);\n    if (tagName === '#text') continue;\n\n    defsCache.add(n.id, n);\n  }\n};\n\n/**\n * @name Two.Utils.getScene\n * @param {Two.Shape} node - The currently available object in the scenegraph.\n * @returns {Group} - The highest order {@link Two.Group} in the scenegraph.\n * @property {Function}\n */\nvar getScene = function(node) {\n\n  while (node.parent) {\n    node = node.parent;\n  }\n\n  return node.scene;\n\n};\n\n/**\n * @name Two.Utils.read\n * @property {Object} read - A map of functions to read any number of SVG node types and create Two.js equivalents of them. Primarily used by the {@link Two#interpret} method.\n */\nvar read = {\n\n  svg: function(node) {\n\n    var defs = read.defs.current = new Registry();\n    var elements = node.getElementsByTagName('defs');\n\n    for (var i = 0; i < elements.length; i++) {\n      updateDefsCache(elements[i], defs);\n    }\n\n    var svg = read.g.call(this, node);\n    var viewBox = node.getAttribute('viewBox');\n    var x = node.getAttribute('x');\n    var y = node.getAttribute('y');\n    var width = node.getAttribute('width');\n    var height = node.getAttribute('height');\n\n    svg.defs = defs;  // Export out the <defs /> for later use\n\n    var viewBoxExists = viewBox !== null;\n    var xExists = x !== null;\n    var yExists = y !== null;\n    var widthExists = width !== null;\n    var heightExists = height !== null;\n\n    if (xExists) {\n      svg.x = parseFloat(x.replace(regex.unitSuffix, ''));\n    }\n    if (yExists) {\n      svg.y = parseFloat(y.replace(regex.unitSuffix, ''));\n    }\n    if (widthExists) {\n      svg.width = parseFloat(width.replace(regex.unitSuffix, ''));\n    }\n    if (heightExists) {\n      svg.height = parseFloat(height.replace(regex.unitSuffix, ''));\n    }\n    if (viewBoxExists) {\n      applySvgViewBox(svg, viewBox);\n    }\n\n    delete read.defs.current;\n\n    return svg;\n\n  },\n\n  defs: function(node) {\n    return null;\n  },\n\n  use: function(node, styles) {\n\n    var error;\n    var href = node.getAttribute('href') || node.getAttribute('xlink:href');\n    if (!href) {\n      error = new TwoError('encountered <use /> with no href.');\n      console.warn(error.name, error.message);\n      return null;\n    }\n\n    var id = href.slice(1);\n    if (!read.defs.current.contains(id)) {\n      error = new TwoError(\n        'unable to find element for reference ' + href + '.');\n      console.warn(error.name, error.message);\n      return null;\n    }\n\n    var template = read.defs.current.get(id);\n    var fullNode = template.cloneNode(true);\n    var overwriteAttrs = ['x', 'y', 'width', 'height', 'href', 'xlink:href'];\n\n    for (var i = 0; i < node.attributes.length; i++) {\n      var attr = node.attributes[i];\n      var ca = overwriteAttrs.includes(attr.nodeName);\n      var cb = !fullNode.hasAttribute(attr.nodeName);\n      if (ca || cb) {\n        fullNode.setAttribute(attr.nodeName, attr.value);\n      }\n    }\n\n    var tagName = getTagName(fullNode.nodeName);\n    return read[tagName].call(this, fullNode, styles);\n\n  },\n\n  g: function(node, parentStyles) {\n\n    var styles;\n    var group = new Group();\n\n    applySvgAttributes.call(this, node, group, parentStyles);\n\n    this.add(group);\n\n    // Switched up order to inherit more specific styles\n    styles = getSvgStyles.call(this, node);\n\n    for (var i = 0, l = node.childNodes.length; i < l; i++) {\n      var n = node.childNodes[i];\n      var tag = n.nodeName;\n      if (!tag) return;\n\n      var tagName = getTagName(tag);\n\n      if (tagName in read) {\n        var o = read[tagName].call(group, n, styles);\n        if (!!o && !o.parent) {\n          group.add(o);\n        }\n      }\n    }\n\n    return group;\n\n  },\n\n  polygon: function(node, parentStyles) {\n\n    var points = node.getAttribute('points');\n\n    var verts = [];\n    points.replace(/(-?[\\d.eE-]+)[,|\\s](-?[\\d.eE-]+)/g, function(match, p1, p2) {\n      verts.push(new Anchor(parseFloat(p1), parseFloat(p2)));\n    });\n\n    var poly = new Path(verts, true).noStroke();\n    poly.fill = 'black';\n\n    applySvgAttributes.call(this, node, poly, parentStyles);\n\n    return poly;\n\n  },\n\n  polyline: function(node, parentStyles) {\n    var poly = read.polygon.call(this, node, parentStyles);\n    poly.closed = false;\n    return poly;\n  },\n\n  path: function(node, parentStyles) {\n\n    var path = node.getAttribute('d');\n    var points = [];\n    var closed = false, relative = false;\n\n    if (path) {\n\n      // Create a Two.Path from the paths.\n\n      var coord = new Anchor();\n      var control, coords;\n      var commands = path.match(/[a-df-z][^a-df-z]*/ig);\n      var last = commands.length - 1;\n\n      // Split up polybeziers\n\n      _.each(commands.slice(0), function(command, i) {\n\n        var items = command.slice(1).trim().match(regex.path);\n        var type = command[0];\n        var lower = type.toLowerCase();\n        var bin, j, l, ct, times, result = [];\n\n        if (i === 0) {\n          commands = [];\n        }\n\n        switch (lower) {\n          case 'h':\n          case 'v':\n            if (items.length > 1) {\n              bin = 1;\n            }\n            break;\n          case 'm':\n          case 'l':\n          case 't':\n            if (items.length > 2) {\n              bin = 2;\n            }\n            break;\n          case 's':\n          case 'q':\n            if (items.length > 4) {\n              bin = 4;\n            }\n            break;\n          case 'c':\n            if (items.length > 6) {\n              bin = 6;\n            }\n            break;\n          case 'a':\n            if (items.length > 7) {\n              bin = 7;\n            }\n            break;\n        }\n\n        // This means we have a polybezier.\n        if (bin) {\n\n          for (j = 0, l = items.length, times = 0; j < l; j+=bin) {\n\n            ct = type;\n            if (times > 0) {\n\n              switch (type) {\n                case 'm':\n                  ct = 'l';\n                  break;\n                case 'M':\n                  ct = 'L';\n                  break;\n              }\n\n            }\n\n            result.push(ct + items.slice(j, j + bin).join(' '));\n            times++;\n\n          }\n\n          commands = Array.prototype.concat.apply(commands, result);\n\n        } else {\n\n          commands.push(command);\n\n        }\n\n      });\n\n      // Create the vertices for our Two.Path\n\n      _.each(commands, function(command, i) {\n\n        var result, x, y;\n        var type = command[0];\n        var lower = type.toLowerCase();\n\n        coords = command.slice(1).trim().match(regex.path);\n        relative = type === lower;\n\n        var x1, y1, x2, y2, x3, y3, x4, y4, reflection;\n\n        switch (lower) {\n\n          case 'z':\n            if (i >= last) {\n              closed = true;\n            } else {\n              x = coord.x;\n              y = coord.y;\n              result = new Anchor(\n                x, y,\n                undefined, undefined,\n                undefined, undefined,\n                Commands.close\n              );\n              // Make coord be the last `m` command\n              for (var j = points.length - 1; j >= 0; j--) {\n                var point = points[j];\n                if (/m/i.test(point.command)) {\n                  coord = point;\n                  break;\n                }\n              }\n            }\n            break;\n\n          case 'm':\n          case 'l':\n\n            control = undefined;\n\n            x = parseFloat(coords[0]);\n            y = parseFloat(coords[1]);\n\n            result = new Anchor(\n              x, y,\n              undefined, undefined,\n              undefined, undefined,\n              /m/i.test(lower) ? Commands.move : Commands.line\n            );\n\n            if (relative) {\n              result.addSelf(coord);\n            }\n\n            // result.controls.left.copy(result);\n            // result.controls.right.copy(result);\n\n            coord = result;\n            break;\n\n          case 'h':\n          case 'v':\n\n            var a = /h/i.test(lower) ? 'x' : 'y';\n            var b = /x/i.test(a) ? 'y' : 'x';\n\n            result = new Anchor(\n              undefined, undefined,\n              undefined, undefined,\n              undefined, undefined,\n              Commands.line\n            );\n            result[a] = parseFloat(coords[0]);\n            result[b] = coord[b];\n\n            if (relative) {\n              result[a] += coord[a];\n            }\n\n            // result.controls.left.copy(result);\n            // result.controls.right.copy(result);\n\n            coord = result;\n            break;\n\n          case 'c':\n          case 's':\n\n            x1 = coord.x;\n            y1 = coord.y;\n\n            if (!control) {\n              control = new Vector();//.copy(coord);\n            }\n\n            if (/c/i.test(lower)) {\n\n              x2 = parseFloat(coords[0]);\n              y2 = parseFloat(coords[1]);\n              x3 = parseFloat(coords[2]);\n              y3 = parseFloat(coords[3]);\n              x4 = parseFloat(coords[4]);\n              y4 = parseFloat(coords[5]);\n\n            } else {\n\n              // Calculate reflection control point for proper x2, y2\n              // inclusion.\n\n              reflection = getReflection(coord, control, relative);\n\n              x2 = reflection.x;\n              y2 = reflection.y;\n              x3 = parseFloat(coords[0]);\n              y3 = parseFloat(coords[1]);\n              x4 = parseFloat(coords[2]);\n              y4 = parseFloat(coords[3]);\n\n            }\n\n            if (relative) {\n              x2 += x1;\n              y2 += y1;\n              x3 += x1;\n              y3 += y1;\n              x4 += x1;\n              y4 += y1;\n            }\n\n            if (!_.isObject(coord.controls)) {\n              Anchor.AppendCurveProperties(coord);\n            }\n\n            coord.controls.right.set(x2 - coord.x, y2 - coord.y);\n            result = new Anchor(\n              x4, y4,\n              x3 - x4, y3 - y4,\n              undefined, undefined,\n              Commands.curve\n            );\n\n            coord = result;\n            control = result.controls.left;\n\n            break;\n\n          case 't':\n          case 'q':\n\n            x1 = coord.x;\n            y1 = coord.y;\n\n            if (!control) {\n              control = new Vector();\n            }\n\n            if (/q/i.test(lower)) {\n\n              x2 = parseFloat(coords[0]);\n              y2 = parseFloat(coords[1]);\n              x3 = parseFloat(coords[0]);\n              y3 = parseFloat(coords[1]);\n              x4 = parseFloat(coords[2]);\n              y4 = parseFloat(coords[3]);\n\n            } else {\n\n              reflection = getReflection(coord, control, relative);\n\n              x2 = reflection.x;\n              y2 = reflection.y;\n              x3 = reflection.x;\n              y3 = reflection.y;\n              x4 = parseFloat(coords[0]);\n              y4 = parseFloat(coords[1]);\n\n            }\n\n            if (relative) {\n              x2 += x1;\n              y2 += y1;\n              x3 += x1;\n              y3 += y1;\n              x4 += x1;\n              y4 += y1;\n            }\n\n            if (!_.isObject(coord.controls)) {\n              Anchor.AppendCurveProperties(coord);\n            }\n\n            coord.controls.right.set(\n              (x2 - coord.x) * 0.33, (y2 - coord.y) * 0.33);\n            result = new Anchor(\n              x4, y4,\n              x3 - x4, y3 - y4,\n              undefined, undefined,\n              Commands.curve\n            );\n\n            coord = result;\n            control = result.controls.left;\n\n            break;\n\n          case 'a':\n\n            x1 = coord.x;\n            y1 = coord.y;\n\n            var rx = parseFloat(coords[0]);\n            var ry = parseFloat(coords[1]);\n            var xAxisRotation = parseFloat(coords[2]);// * PI / 180;\n            var largeArcFlag = parseFloat(coords[3]);\n            var sweepFlag = parseFloat(coords[4]);\n\n            x4 = parseFloat(coords[5]);\n            y4 = parseFloat(coords[6]);\n\n            if (relative) {\n              x4 += x1;\n              y4 += y1;\n            }\n\n            var anchor = new Anchor(x4, y4);\n            anchor.command = Commands.arc;\n            anchor.rx = rx;\n            anchor.ry = ry;\n            anchor.xAxisRotation = xAxisRotation;\n            anchor.largeArcFlag = largeArcFlag;\n            anchor.sweepFlag = sweepFlag;\n\n            result = anchor;\n\n            coord = anchor;\n            control = undefined;\n\n            break;\n\n        }\n\n        if (result) {\n          if (Array.isArray(result)) {\n            points = points.concat(result);\n          } else {\n            points.push(result);\n          }\n        }\n\n      });\n\n    }\n\n    path = new Path(points, closed, undefined, true).noStroke();\n    path.fill = 'black';\n\n    var rect = path.getBoundingClientRect(true);\n\n    // Center objects to stay consistent\n    // with the rest of the Two.js API.\n    rect.centroid = {\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    };\n\n    _.each(path.vertices, function(v) {\n      v.subSelf(rect.centroid);\n    });\n\n    applySvgAttributes.call(this, node, path, parentStyles);\n\n    path.translation.addSelf(rect.centroid);\n\n    return path;\n\n  },\n\n  circle: function(node, parentStyles) {\n\n    var x = parseFloat(node.getAttribute('cx'));\n    var y = parseFloat(node.getAttribute('cy'));\n    var r = parseFloat(node.getAttribute('r'));\n\n    var circle = new Circle(0, 0, r).noStroke();\n    circle.fill = 'black';\n\n    applySvgAttributes.call(this, node, circle, parentStyles);\n\n    circle.translation.x = x;\n    circle.translation.y = y;\n\n    return circle;\n\n  },\n\n  ellipse: function(node, parentStyles) {\n\n    var x = parseFloat(node.getAttribute('cx'));\n    var y = parseFloat(node.getAttribute('cy'));\n    var width = parseFloat(node.getAttribute('rx'));\n    var height = parseFloat(node.getAttribute('ry'));\n\n    var ellipse = new Ellipse(0, 0, width, height).noStroke();\n    ellipse.fill = 'black';\n\n    applySvgAttributes.call(this, node, ellipse, parentStyles);\n\n    ellipse.translation.x = x;\n    ellipse.translation.y = y;\n\n    return ellipse;\n\n  },\n\n  rect: function(node, parentStyles) {\n\n    var rx = parseFloat(node.getAttribute('rx'));\n    var ry = parseFloat(node.getAttribute('ry'));\n\n    if (!_.isNaN(rx) || !_.isNaN(ry)) {\n      return read['rounded-rect'](node);\n    }\n\n    var width = parseFloat(node.getAttribute('width'));\n    var height = parseFloat(node.getAttribute('height'));\n\n    var w2 = width / 2;\n    var h2 = height / 2;\n\n    var rect = new Rectangle(0, 0, width, height)\n      .noStroke();\n    rect.fill = 'black';\n\n    applySvgAttributes.call(this, node, rect, parentStyles);\n\n    // For rectangles, (x, y) is the center of the shape rather than the top\n    // left corner.\n    rect.translation.x += w2;\n    rect.translation.y += h2;\n\n    return rect;\n\n  },\n\n  'rounded-rect': function(node, parentStyles) {\n\n    var rx = parseFloat(node.getAttribute('rx')) || 0;\n    var ry = parseFloat(node.getAttribute('ry')) || 0;\n\n    var width = parseFloat(node.getAttribute('width'));\n    var height = parseFloat(node.getAttribute('height'));\n\n    var w2 = width / 2;\n    var h2 = height / 2;\n    var radius = new Vector(rx, ry);\n\n    var rect = new RoundedRectangle(0, 0, width, height, radius)\n      .noStroke();\n    rect.fill = 'black';\n\n    applySvgAttributes.call(this, node, rect, parentStyles);\n\n    // For rectangles, (x, y) is the center of the shape rather than the top\n    // left corner.\n    rect.translation.x += w2;\n    rect.translation.y += h2;\n\n    return rect;\n\n  },\n\n  line: function(node, parentStyles) {\n\n    var x1 = parseFloat(node.getAttribute('x1'));\n    var y1 = parseFloat(node.getAttribute('y1'));\n    var x2 = parseFloat(node.getAttribute('x2'));\n    var y2 = parseFloat(node.getAttribute('y2'));\n\n    var line = new Line(x1, y1, x2, y2).noFill();\n\n    applySvgAttributes.call(this, node, line, parentStyles);\n\n    return line;\n\n  },\n\n  lineargradient: function(node, parentStyles) {\n\n    var x1 = parseFloat(node.getAttribute('x1'));\n    var y1 = parseFloat(node.getAttribute('y1'));\n    var x2 = parseFloat(node.getAttribute('x2'));\n    var y2 = parseFloat(node.getAttribute('y2'));\n\n    var ox = (x2 + x1) / 2;\n    var oy = (y2 + y1) / 2;\n\n    var stops = [];\n    for (var i = 0; i < node.children.length; i++) {\n\n      var child = node.children[i];\n\n      var offset = child.getAttribute('offset');\n      if (/%/ig.test(offset)) {\n        offset = parseFloat(offset.replace(/%/ig, '')) / 100;\n      }\n      offset = parseFloat(offset);\n\n      var color = child.getAttribute('stop-color');\n      var opacity = child.getAttribute('stop-opacity');\n      var style = child.getAttribute('style');\n\n      var matches;\n      if (color === null) {\n        matches = style ? style.match(/stop-color:\\s?([#a-fA-F0-9]*)/) : false;\n        color = matches && matches.length > 1 ? matches[1] : undefined;\n      }\n\n      if (opacity === null) {\n        matches = style ? style.match(/stop-opacity:\\s?([0-9.-]*)/) : false;\n        opacity = matches && matches.length > 1 ? parseFloat(matches[1]) : 1;\n      } else {\n        opacity = parseFloat(opacity);\n      }\n\n      stops.push(new Stop(offset, color, opacity));\n\n    }\n\n    var gradient = new LinearGradient(x1 - ox, y1 - oy, x2 - ox,\n      y2 - oy, stops);\n\n    applySvgAttributes.call(this, node, gradient, parentStyles);\n\n    return gradient;\n\n  },\n\n  radialgradient: function(node, parentStyles) {\n\n    var cx = parseFloat(node.getAttribute('cx')) || 0;\n    var cy = parseFloat(node.getAttribute('cy')) || 0;\n    var r = parseFloat(node.getAttribute('r'));\n\n    var fx = parseFloat(node.getAttribute('fx'));\n    var fy = parseFloat(node.getAttribute('fy'));\n\n    if (_.isNaN(fx)) {\n      fx = cx;\n    }\n\n    if (_.isNaN(fy)) {\n      fy = cy;\n    }\n\n    var ox = Math.abs(cx + fx) / 2;\n    var oy = Math.abs(cy + fy) / 2;\n\n    var stops = [];\n    for (var i = 0; i < node.children.length; i++) {\n\n      var child = node.children[i];\n\n      var offset = child.getAttribute('offset');\n      if (/%/ig.test(offset)) {\n        offset = parseFloat(offset.replace(/%/ig, '')) / 100;\n      }\n      offset = parseFloat(offset);\n\n      var color = child.getAttribute('stop-color');\n      var opacity = child.getAttribute('stop-opacity');\n      var style = child.getAttribute('style');\n\n      var matches;\n      if (color === null) {\n        matches = style ? style.match(/stop-color:\\s?([#a-fA-F0-9]*)/) : false;\n        color = matches && matches.length > 1 ? matches[1] : undefined;\n      }\n\n      if (opacity === null) {\n        matches = style ? style.match(/stop-opacity:\\s?([0-9.-]*)/) : false;\n        opacity = matches && matches.length > 1 ? parseFloat(matches[1]) : 1;\n      } else {\n        opacity = parseFloat(opacity);\n      }\n\n      stops.push(new Stop(offset, color, opacity));\n\n    }\n\n    var gradient = new RadialGradient(cx - ox, cy - oy, r,\n      stops, fx - ox, fy - oy);\n\n    applySvgAttributes.call(this, node, gradient, parentStyles);\n\n    return gradient;\n\n  },\n\n  text: function(node, parentStyles) {\n\n    var alignment = getAlignment(node.getAttribute('text-anchor')) || 'left';\n    var baseline = getBaseline(node) || 'baseline';\n    var message = node.textContent;\n\n    var text = new Text(message);\n\n    applySvgAttributes.call(this, node, text, parentStyles);\n\n    text.alignment = alignment;\n    text.baseline = baseline;\n\n    return text;\n\n  },\n\n  clippath: function(node, parentStyles) {\n    if (read.defs.current && !read.defs.current.contains(node.id)) {\n      read.defs.current.add(node.id, node);\n    }\n    return null;\n  },\n\n  image: function(node, parentStyles) {\n\n    var href = node.getAttribute('href') || node.getAttribute('xlink:href');\n    if (!href) {\n      var error = new TwoError('encountered <image /> with no href.');\n      console.warn(error.name, error.message);\n      return null;\n    }\n\n    var x = parseFloat(node.getAttribute('x')) || 0;\n    var y = parseFloat(node.getAttribute('y')) || 0;\n    var width = parseFloat(node.getAttribute('width'));\n    var height = parseFloat(node.getAttribute('height'));\n\n    var sprite = new Sprite(href, x, y);\n\n    if (!_.isNaN(width)) {\n      sprite.width = width;\n    }\n    if (!_.isNaN(height)) {\n      sprite.height = height;\n    }\n\n    applySvgAttributes.call(this, node, sprite, parentStyles);\n\n    return sprite;\n  }\n\n};\n\n/**\n * @name Two.Utils.xhr\n * @function\n * @param {String} path\n * @param {Function} callback\n * @returns {XMLHttpRequest} The constructed and called XHR request.\n * @description Canonical method to initiate `GET` requests in the browser. Mainly used by {@link Two#load} method.\n */\nfunction xhr(path, callback) {\n\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', path);\n\n  xhr.onreadystatechange = function() {\n    if (xhr.readyState === 4 && xhr.status === 200) {\n      callback(xhr.responseText);\n    }\n  };\n\n  xhr.send();\n  return xhr;\n\n}\n\n/**\n * @name Two.ImageSequence\n * @class\n * @extends Two.Rectangle\n * @param {String|String[]|Two.Texture|Two.Texture[]} paths - A list of URLs or {@link Two.Texture}s.\n * @param {Number} [ox=0] - The initial `x` position of the Two.ImageSequence.\n * @param {Number} [oy=0] - The initial `y` position of the Two.ImageSequence.\n * @param {Number} [frameRate=30] - The frame rate at which the images should playback at.\n * @description A convenient package to display still or animated images organized as a series of still images.\n */\nfunction ImageSequence(paths, ox, oy, frameRate) {\n\n  // Not using default constructor of Rectangle due to odd `beginning` / `ending` behavior.\n  // See: https://github.com/jonobr1/two.js/issues/383\n  Path.call(this, [\n    new Anchor(),\n    new Anchor(),\n    new Anchor(),\n    new Anchor()\n  ], true);\n\n  this._renderer.flagTextures = ImageSequence.FlagTextures.bind(this);\n  this._renderer.bindTextures = ImageSequence.BindTextures.bind(this);\n  this._renderer.unbindTextures = ImageSequence.UnbindTextures.bind(this);\n\n  this.noStroke();\n  this.noFill();\n\n  /**\n   * @name Two.ImageSequence#textures\n   * @property {Two.Texture[]} - A list of textures to be used as frames for animating the {@link Two.ImageSequence}.\n   */\n  if (Array.isArray(paths)) {\n    this.textures = paths.map(ImageSequence.GenerateTexture.bind(this));\n  } else {\n    // If just a single path convert into a single Two.Texture\n    this.textures = [ImageSequence.GenerateTexture(paths)];\n  }\n\n  this.origin = new Vector();\n\n  this._update();\n  this.translation.set(ox || 0, oy || 0);\n\n  /**\n   * @name Two.ImageSequence#frameRate\n   * @property {Number} - The number of frames to animate against per second.\n   */\n  if (typeof frameRate === 'number') {\n    this.frameRate = frameRate;\n  } else {\n    this.frameRate = ImageSequence.DefaultFrameRate;\n  }\n\n  /**\n   * @name Two.ImageSequence#index\n   * @property {Number} - The index of the current tile of the sprite to display. Defaults to `0`.\n   */\n  this.index = 0;\n\n}\n\n_.extend(ImageSequence, {\n\n  /**\n   * @name Two.ImageSequence.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.ImageSequence}.\n   */\n  Properties: [\n    'frameRate',\n    'index'\n  ],\n\n  /**\n   * @name Two.ImageSequence.DefaultFrameRate\n   * @property The default frame rate that {@link Two.ImageSequence#frameRate} is set to when instantiated.\n   */\n  DefaultFrameRate: 30,\n\n  /**\n   * @name Two.ImageSequence.FlagTextures\n   * @function\n   * @description Cached method to let renderers know textures have been updated on a {@link Two.ImageSequence}.\n   */\n  FlagTextures: function() {\n    this._flagTextures = true;\n  },\n\n  /**\n   * @name Two.ImageSequence.BindTextures\n   * @function\n   * @description Cached method to let {@link Two.ImageSequence} know textures have been added to the instance.\n   */\n  BindTextures: function(items) {\n\n    var i = items.length;\n    while (i--) {\n      items[i].bind(Events.Types.change, this._renderer.flagTextures);\n    }\n\n    this._renderer.flagTextures();\n\n  },\n\n  /**\n   * @name Two.ImageSequence.UnbindVertices\n   * @function\n   * @description Cached method to let {@link Two.ImageSequence} know textures have been removed from the instance.\n   */\n  UnbindTextures: function(items) {\n\n    var i = items.length;\n    while (i--) {\n      items[i].unbind(Events.Types.change, this._renderer.flagTextures);\n    }\n\n    this._renderer.flagTextures();\n\n  },\n\n  /**\n   * @name Two.ImageSequence.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.ImageSequence} to any object. Handy if you'd like to extend or inherit the {@link Two.ImageSequence} class on a custom class.\n   */\n  MakeObservable: function(obj) {\n\n    Rectangle.MakeObservable(obj);\n    _.each(ImageSequence.Properties, defineGetterSetter, obj);\n\n    Object.defineProperty(obj, 'textures', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._textures;\n      },\n\n      set: function(textures) {\n\n        var bindTextures = this._renderer.bindTextures;\n        var unbindTextures = this._renderer.unbindTextures;\n\n        // Remove previous listeners\n        if (this._textures) {\n          this._textures\n            .unbind(Events.Types.insert, bindTextures)\n            .unbind(Events.Types.remove, unbindTextures);\n        }\n\n        // Create new Collection with copy of vertices\n        this._textures = new Collection((textures || []).slice(0));\n\n        // Listen for Collection changes and bind / unbind\n        this._textures\n          .bind(Events.Types.insert, bindTextures)\n          .bind(Events.Types.remove, unbindTextures);\n\n        // Bind Initial Textures\n        bindTextures(this._textures);\n\n      }\n\n    });\n\n  },\n\n  /**\n   * @name Two.ImageSequence.GenerateTexture\n   * @property {Function} - Shorthand function to prepare source image material into readable format by {@link Two.ImageSequence}.\n   * @param {String|Two.Texture} textureOrString - The texture or string to create a {@link Two.Texture} from.\n   * @description Function used internally by {@link Two.ImageSequence} to parse arguments and return {@link Two.Texture}s.\n   * @returns {Two.Texture}\n   */\n  GenerateTexture: function(obj) {\n    if (obj instanceof Texture) {\n      return obj;\n    } else if (typeof obj === 'string') {\n      return new Texture(obj);\n    }\n  }\n\n});\n\n_.extend(ImageSequence.prototype, Rectangle.prototype, {\n\n  constructor: ImageSequence,\n\n  /**\n   * @name Two.ImageSequence#_flagTextures\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.ImageSequence#textures} need updating.\n   */\n  _flagTextures: false,\n\n  /**\n   * @name Two.ImageSequence#_flagFrameRate\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.ImageSequence#frameRate} needs updating.\n   */\n  _flagFrameRate: false,\n\n  /**\n   * @name Two.ImageSequence#_flagIndex\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.ImageSequence#index} needs updating.\n   */\n  _flagIndex: false,\n\n  // Private variables\n\n  /**\n   * @name Two.ImageSequence#_amount\n   * @private\n   * @property {Number} - Number of frames for a given {@link Two.ImageSequence}.\n   */\n  _amount: 1,\n\n  /**\n   * @name Two.ImageSequence#_duration\n   * @private\n   * @property {Number} - Number of milliseconds a {@link Two.ImageSequence}.\n   */\n  _duration: 0,\n\n  /**\n   * @name Two.ImageSequence#_index\n   * @private\n   * @property {Number} - The current frame the {@link Two.ImageSequence} is currently displaying.\n   */\n  _index: 0,\n\n  /**\n   * @name Two.ImageSequence#_startTime\n   * @private\n   * @property {Milliseconds} - Epoch time in milliseconds of when the {@link Two.ImageSequence} started.\n   */\n  _startTime: 0,\n\n  /**\n   * @name Two.ImageSequence#_playing\n   * @private\n   * @property {Boolean} - Dictates whether the {@link Two.ImageSequence} is animating or not.\n   */\n  _playing: false,\n\n  /**\n   * @name Two.ImageSequence#_firstFrame\n   * @private\n   * @property {Number} - The frame the {@link Two.ImageSequence} should start with.\n   */\n  _firstFrame: 0,\n\n  /**\n   * @name Two.ImageSequence#_lastFrame\n   * @private\n   * @property {Number} - The frame the {@link Two.ImageSequence} should end with.\n   */\n  _lastFrame: 0,\n\n  /**\n   * @name Two.ImageSequence#_playing\n   * @private\n   * @property {Boolean} - Dictates whether the {@link Two.ImageSequence} should loop or not.\n   */\n  _loop: true,\n\n  // Exposed through getter-setter\n\n  /**\n   * @name Two.ImageSequence#_textures\n   * @private\n   * @see {@link Two.ImageSequence#textures}\n   */\n  _textures: null,\n\n  /**\n   * @name Two.ImageSequence#_frameRate\n   * @private\n   * @see {@link Two.ImageSequence#frameRate}\n   */\n  _frameRate: 0,\n\n  /**\n   * @name Two.ImageSequence#_origin\n   * @private\n   * @see {@link Two.ImageSequence#origin}\n   */\n  _origin: null,\n\n  /**\n   * @name Two.ImageSequence#play\n   * @function\n   * @param {Number} [firstFrame=0] - The index of the frame to start the animation with.\n   * @param {Number} [lastFrame] - The index of the frame to end the animation with. Defaults to the last item in the {@link Two.ImageSequence#textures}.\n   * @param {Function} [onLastFrame] - Optional callback function to be triggered after playing the last frame. This fires multiple times when the image sequence is looped.\n   * @description Initiate animation playback of a {@link Two.ImageSequence}.\n   */\n  play: function(firstFrame, lastFrame, onLastFrame) {\n\n    this._playing = true;\n    this._firstFrame = 0;\n    this._lastFrame = this.amount - 1;\n    this._startTime = _.performance.now();\n\n    if (typeof firstFrame === 'number') {\n      this._firstFrame = firstFrame;\n    }\n    if (typeof lastFrame === 'number') {\n      this._lastFrame = lastFrame;\n    }\n    if (typeof onLastFrame === 'function') {\n      this._onLastFrame = onLastFrame;\n    } else {\n      delete this._onLastFrame;\n    }\n\n    if (this._index !== this._firstFrame) {\n      this._startTime -= 1000 * Math.abs(this._index - this._firstFrame)\n        / this._frameRate;\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.ImageSequence#pause\n   * @function\n   * @description Halt animation playback of a {@link Two.ImageSequence}.\n   */\n  pause: function() {\n\n    this._playing = false;\n    return this;\n\n  },\n\n  /**\n   * @name Two.ImageSequence#stop\n   * @function\n   * @description Halt animation playback of a {@link Two.ImageSequence} and set the current frame back to the first frame.\n   */\n  stop: function() {\n\n    this._playing = false;\n    this._index = this._firstFrame;\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.ImageSequence#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.ImageSequence}\n   * @description Create a new instance of {@link Two.ImageSequence} with the same properties of the current image sequence.\n   */\n  clone: function(parent) {\n\n    var clone = new ImageSequence(this.textures, this.translation.x,\n      this.translation.y, this.frameRate);\n\n    clone._loop = this._loop;\n\n    if (this._playing) {\n      clone.play();\n    }\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.ImageSequence#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n    var object = Rectangle.prototype.toObject.call(this);\n    object.textures = this.textures.map(function(texture) {\n      return texture.toObject();\n    });\n    object.frameRate = this.frameRate;\n    object.index = this.index;\n    object._firstFrame = this._firstFrame;\n    object._lastFrame = this._lastFrame;\n    object._loop = this._loop;\n    return object;\n  },\n\n  /**\n   * @name Two.ImageSequence#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    var effects = this._textures;\n    var width, height, elapsed, amount, duration, texture;\n    var index, frames;\n\n    if (this._flagTextures) {\n      this._amount = effects.length;\n    }\n\n    if (this._flagFrameRate) {\n      this._duration = 1000 * this._amount / this._frameRate;\n    }\n\n    if (this._playing && this._frameRate > 0) {\n\n      amount = this._amount;\n\n      if (_.isNaN(this._lastFrame)) {\n        this._lastFrame = amount - 1;\n      }\n\n      // TODO: Offload perf logic to instance of `Two`.\n      elapsed = _.performance.now() - this._startTime;\n      frames = this._lastFrame + 1;\n      duration = 1000 * (frames - this._firstFrame) / this._frameRate;\n\n      if (this._loop) {\n        elapsed = elapsed % duration;\n      } else {\n        elapsed = Math.min(elapsed, duration);\n      }\n\n      index = lerp(this._firstFrame, frames, elapsed / duration);\n      index = Math.floor(index);\n\n      if (index !== this._index) {\n\n        this._index = index;\n        texture = effects[this._index];\n\n        if (texture.loaded) {\n\n          width = texture.image.width;\n          height = texture.image.height;\n\n          if (this.width !== width) {\n            this.width = width;\n          }\n          if (this.height !== height) {\n            this.height = height;\n          }\n\n          this.fill = texture;\n\n          if (index >= this._lastFrame - 1 && this._onLastFrame) {\n            this._onLastFrame();  // Shortcut for chainable sprite animations\n          }\n\n        }\n\n      }\n\n    } else if (this._flagIndex || !(this.fill instanceof Texture)) {\n\n      texture = effects[this._index];\n\n      if (texture.loaded) {\n\n        width = texture.image.width;\n        height = texture.image.height;\n\n        if (this.width !== width) {\n          this.width = width;\n        }\n        if (this.height !== height) {\n          this.height = height;\n        }\n\n      }\n\n      this.fill = texture;\n\n    }\n\n    Rectangle.prototype._update.call(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.ImageSequence#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagTextures = this._flagFrameRate = false;\n    Rectangle.prototype.flagReset.call(this);\n\n    return this;\n\n  }\n\n});\n\nImageSequence.MakeObservable(ImageSequence.prototype);\n\n/**\n * @name Two.ArcSegment\n * @class\n * @extends Two.Path\n * @param {Number} [x=0] - The x position of the arc segment.\n * @param {Number} [y=0] - The y position of the arc segment.\n * @param {Number} [innerRadius=0] - The inner radius value of the arc segment.\n * @param {Number} [outerRadius=0] - The outer radius value of the arc segment.\n * @param {Number} [startAngle=0] - The start angle of the arc segment in Number.\n * @param {Number} [endAngle=6.2831] - The end angle of the arc segment in Number.\n * @param {Number} [resolution=24] - The number of vertices used to construct the arc segment.\n */\nfunction ArcSegment(ox, oy, ir, or, sa, ea, res) {\n\n  var amount = res || (Constants.Resolution * 3);\n  var points = [];\n  for (var i = 0; i < amount; i++) {\n    points.push(new Anchor());\n  }\n\n  Path.call(this, points, true, false, true);\n\n  /**\n   * @name Two.ArcSegment#innerRadius\n   * @property {Number} - The size of the inner radius of the arc segment.\n   */\n  if (typeof ir === 'number') {\n    this.innerRadius = ir;\n  }\n\n  /**\n   * @name Two.ArcSegment#outerRadius\n   * @property {Number} - The size of the outer radius of the arc segment.\n   */\n  if (typeof or === 'number') {\n    this.outerRadius = or;\n  }\n\n  /**\n   * @name Two.ArcSegment#startRadius\n   * @property {Number} - The angle of one side for the arc segment.\n   */\n  if (typeof sa === 'number') {\n    this.startAngle = sa;\n  }\n\n  /**\n   * @name Two.ArcSegment#endAngle\n   * @property {Number} - The angle of the other side for the arc segment.\n   */\n  if (typeof ea === 'number') {\n    this.endAngle = ea;\n  }\n\n  this._update();\n\n  if (typeof ox === 'number') {\n    this.translation.x = ox;\n  }\n  if (typeof oy === 'number') {\n    this.translation.y = oy;\n  }\n\n}\n\n_.extend(ArcSegment, {\n\n  /**\n   * @name Two.ArcSegment.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.ArcSegment}.\n   */\n  Properties: ['startAngle', 'endAngle', 'innerRadius', 'outerRadius'],\n\n  /**\n   * @name Two.ArcSegment.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.ArcSegment} to any object. Handy if you'd like to extend the {@link Two.ArcSegment} class on a custom class.\n   */\n  MakeObservable: function(obj) {\n\n    Path.MakeObservable(obj);\n    _.each(ArcSegment.Properties, defineGetterSetter, obj);\n\n  }\n\n});\n\n_.extend(ArcSegment.prototype, Path.prototype, {\n\n  constructor: ArcSegment,\n\n  /**\n   * @name Two.ArcSegment#_flagStartAngle\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.ArcSegment#startAngle} needs updating.\n   */\n  _flagStartAngle: false,\n  /**\n   * @name Two.ArcSegment#_flagEndAngle\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.ArcSegment#endAngle} needs updating.\n   */\n  _flagEndAngle: false,\n  /**\n   * @name Two.ArcSegment#_flagInnerRadius\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.ArcSegment#innerRadius} needs updating.\n   */\n  _flagInnerRadius: false,\n  /**\n   * @name Two.ArcSegment#_flagOuterRadius\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.ArcSegment#outerRadius} needs updating.\n   */\n  _flagOuterRadius: false,\n\n  /**\n   * @name Two.ArcSegment#_startAngle\n   * @private\n   * @see {@link Two.ArcSegment#startAngle}\n   */\n  _startAngle: 0,\n  /**\n   * @name Two.ArcSegment#_endAngle\n   * @private\n   * @see {@link Two.ArcSegment#endAngle}\n   */\n  _endAngle: TWO_PI,\n  /**\n   * @name Two.ArcSegment#_innerRadius\n   * @private\n   * @see {@link Two.ArcSegment#innerRadius}\n   */\n  _innerRadius: 0,\n  /**\n   * @name Two.ArcSegment#_outerRadius\n   * @private\n   * @see {@link Two.ArcSegment#outerRadius}\n   */\n  _outerRadius: 0,\n\n  /**\n   * @name Two.ArcSegment#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagVertices || this._flagStartAngle || this._flagEndAngle\n      || this._flagInnerRadius || this._flagOuterRadius) {\n\n      var sa = this._startAngle;\n      var ea = this._endAngle;\n\n      var ir = this._innerRadius;\n      var or = this._outerRadius;\n\n      var connected = mod(sa, TWO_PI) === mod(ea, TWO_PI);\n      var punctured = ir > 0;\n\n      var vertices = this.vertices;\n      var length = (punctured ? vertices.length / 2 : vertices.length);\n      var command, id = 0;\n\n      if (connected) {\n        length--;\n      } else if (!punctured) {\n        length -= 2;\n      }\n\n      /**\n       * Outer Circle\n       */\n      for (var i = 0, last = length - 1; i < length; i++) {\n\n        var pct = i / last;\n        var v = vertices[id];\n        var theta = pct * (ea - sa) + sa;\n        var step = (ea - sa) / length;\n\n        var x = or * Math.cos(theta);\n        var y = or * Math.sin(theta);\n\n        switch (i) {\n          case 0:\n            command = Commands.move;\n            break;\n          default:\n            command = Commands.curve;\n        }\n\n        v.command = command;\n        v.x = x;\n        v.y = y;\n        v.controls.left.clear();\n        v.controls.right.clear();\n\n        if (v.command === Commands.curve) {\n          var amp = or * step / Math.PI;\n          v.controls.left.x = amp * Math.cos(theta - HALF_PI);\n          v.controls.left.y = amp * Math.sin(theta - HALF_PI);\n          v.controls.right.x = amp * Math.cos(theta + HALF_PI);\n          v.controls.right.y = amp * Math.sin(theta + HALF_PI);\n          if (i === 1) {\n            v.controls.left.multiplyScalar(2);\n          }\n          if (i === last) {\n            v.controls.right.multiplyScalar(2);\n          }\n        }\n\n        id++;\n\n      }\n\n      if (punctured) {\n\n        if (connected) {\n          vertices[id].command = Commands.close;\n          id++;\n        } else {\n          length--;\n          last = length - 1;\n        }\n\n        /**\n         * Inner Circle\n         */\n        for (i = 0; i < length; i++) {\n\n          pct = i / last;\n          v = vertices[id];\n          theta = (1 - pct) * (ea - sa) + sa;\n          step = (ea - sa) / length;\n\n          x = ir * Math.cos(theta);\n          y = ir * Math.sin(theta);\n          command = Commands.curve;\n          if (i <= 0) {\n            command = connected ? Commands.move : Commands.line;\n          }\n\n          v.command = command;\n          v.x = x;\n          v.y = y;\n          v.controls.left.clear();\n          v.controls.right.clear();\n\n          if (v.command === Commands.curve) {\n            amp = ir * step / Math.PI;\n            v.controls.left.x = amp * Math.cos(theta + HALF_PI);\n            v.controls.left.y = amp * Math.sin(theta + HALF_PI);\n            v.controls.right.x = amp * Math.cos(theta - HALF_PI);\n            v.controls.right.y = amp * Math.sin(theta - HALF_PI);\n            if (i === 1) {\n              v.controls.left.multiplyScalar(2);\n            }\n            if (i === last) {\n              v.controls.right.multiplyScalar(2);\n            }\n          }\n\n          id++;\n\n        }\n\n        // Final Point\n        vertices[id].copy(vertices[0]);\n        vertices[id].command = Commands.line;\n\n      } else if (!connected) {\n\n        vertices[id].command = Commands.line;\n        vertices[id].x = 0;\n        vertices[id].y = 0;\n        id++;\n\n        // Final Point\n        vertices[id].copy(vertices[0]);\n        vertices[id].command = Commands.line;\n\n      }\n\n    }\n\n    Path.prototype._update.call(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.ArcSegment#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    Path.prototype.flagReset.call(this);\n\n    this._flagStartAngle = this._flagEndAngle\n      = this._flagInnerRadius = this._flagOuterRadius = false;\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.ArcSegment#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.ArcSegment}\n   * @description Create a new instance of {@link Two.ArcSegment} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var ir = this.innerRadius;\n    var or = this.outerRadius;\n    var sa = this.startAngle;\n    var ea = this.endAngle;\n    var resolution = this.vertices.length;\n\n    var clone = new ArcSegment(0, 0, ir, or, sa, ea, resolution);\n\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n    clone.skewX = this.skewX;\n    clone.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    _.each(Path.Properties, function(k) {\n      clone[k] = this[k];\n    }, this);\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.ArcSegment#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var object = Path.prototype.toObject.call(this);\n\n    _.each(ArcSegment.Properties, function(property) {\n      object[property] = this[property];\n    }, this);\n\n    return object;\n\n  }\n\n});\n\nArcSegment.MakeObservable(ArcSegment.prototype);\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n/**\n * @name Two.Points\n * @class\n * @extends Two.Shape\n * @param {Two.Vector[]} [vertices] - A list of {@link Two.Vector}s that represent the order and coordinates to construct a rendered set of points.\n * @description This is a primary primitive class for quickly and easily drawing points in Two.js. Unless specified methods return their instance of `Two.Points` for the purpose of chaining.\n */\nfunction Points(vertices) {\n\n  Shape.call(this);\n\n  this._renderer.type = 'points';\n  this._renderer.flagVertices = Path.FlagVertices.bind(this);\n  this._renderer.bindVertices = Path.BindVertices.bind(this);\n  this._renderer.unbindVertices = Path.UnbindVertices.bind(this);\n\n  this._renderer.flagFill = Path.FlagFill.bind(this);\n  this._renderer.flagStroke = Path.FlagStroke.bind(this);\n  this._renderer.vertices = null;\n  this._renderer.collection = null;\n\n  /**\n   * @name Two.Points#sizeAttenuation\n   * @property {Boolean} - Boolean dictating whether Two.js should scale the size of the points based on its matrix hierarcy.\n   * @description Set to `true` if you'd like the size of the points to be relative to the scale of its parents; `false` to disregard. Default is `false`.\n   */\n  this.sizeAttenuation = false;\n\n  /**\n   * @name Two.Points#beginning\n   * @property {Number} - Number between zero and one to state the beginning of where the path is rendered.\n   * @description {@link Two.Points#beginning} is a percentage value that represents at what percentage into the path should the renderer start drawing.\n   */\n  this.beginning = 0;\n\n  /**\n   * @name Two.Points#ending\n   * @property {Number} - Number between zero and one to state the ending of where the path is rendered.\n   * @description {@link Two.Points#ending} is a percentage value that represents at what percentage into the path should the renderer start drawing.\n   */\n  this.ending = 1;\n\n  // Style properties\n\n  /**\n   * @name Two.Points#fill\n   * @property {(String|Two.Gradient|Two.Texture)} - The value of what the path should be filled in with.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n   */\n  this.fill = '#fff';\n\n  /**\n   * @name Two.Points#stroke\n   * @property {(String|Two.Gradient|Two.Texture)} - The value of what the path should be outlined in with.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n   */\n  this.stroke = '#000';\n\n  /**\n   * @name Two.Points#className\n   * @property {String} - A class to be applied to the element to be compatible with CSS styling.\n   * @nota-bene Only available for the SVG renderer.\n   */\n  this.className = '';\n\n  /**\n   * @name Two.Points#visible\n   * @property {Boolean} - Display the points or not.\n   * @nota-bene For {@link Two.CanvasRenderer} and {@link Two.WebGLRenderer} when set to false all updating is disabled improving performance dramatically with many objects in the scene.\n   */\n  this.visible = true;\n\n  /**\n   * @name Two.Points#vertices\n   * @property {Two.Vector[]} - An ordered list of vector points for rendering points.\n   * @description A list of {@link Two.Vector} objects that consist of which coordinates to draw points at.\n   * @nota-bene The array when manipulating is actually a {@link Two.Collection}.\n   */\n  this.vertices = vertices;\n\n  /**\n   * @name Two.Points#dashes\n   * @property {Number[]} - Array of numbers. Odd indices represent dash length. Even indices represent dash space.\n   * @description A list of numbers that represent the repeated dash length and dash space applied to the stroke of the text.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more information on the SVG stroke-dasharray attribute.\n   */\n  this.dashes = [];\n\n  /**\n   * @name Two.Points#dashes#offset\n   * @property {Number} - A number in pixels to offset {@link Two.Points#dashes} display.\n   */\n  this.dashes.offset = 0;\n\n}\n\n_.extend(Points, {\n\n  Properties: [\n    'fill',\n    'stroke',\n    'linewidth',\n    'opacity',\n    'visible',\n    'size',\n    'sizeAttenuation',\n\n    'beginning',\n    'ending'\n  ],\n\n  MakeObservable: function(object) {\n\n    Shape.MakeObservable(object);\n\n    _.each(Points.Properties.slice(2, 7), defineGetterSetter, object);\n\n    Object.defineProperty(object, 'fill', {\n      enumerable: true,\n      get: function() {\n        return this._fill;\n      },\n      set: function(f) {\n\n        if (this._fill instanceof Gradient\n          || this._fill instanceof LinearGradient\n          || this._fill instanceof RadialGradient\n          || this._fill instanceof Texture) {\n          this._fill.unbind(Events.Types.change, this._renderer.flagFill);\n        }\n\n        this._fill = f;\n        this._flagFill = true;\n\n        if (this._fill instanceof Gradient\n          || this._fill instanceof LinearGradient\n          || this._fill instanceof RadialGradient\n          || this._fill instanceof Texture) {\n          this._fill.bind(Events.Types.change, this._renderer.flagFill);\n        }\n\n      }\n    });\n\n    Object.defineProperty(object, 'stroke', {\n      enumerable: true,\n      get: function() {\n        return this._stroke;\n      },\n      set: function(f) {\n\n        if (this._stroke instanceof Gradient\n          || this._stroke instanceof LinearGradient\n          || this._stroke instanceof RadialGradient\n          || this._stroke instanceof Texture) {\n          this._stroke.unbind(Events.Types.change, this._renderer.flagStroke);\n        }\n\n        this._stroke = f;\n        this._flagStroke = true;\n\n        if (this._stroke instanceof Gradient\n          || this._stroke instanceof LinearGradient\n          || this._stroke instanceof RadialGradient\n          || this._stroke instanceof Texture) {\n          this._stroke.bind(Events.Types.change, this._renderer.flagStroke);\n        }\n\n      }\n    });\n\n    /**\n     * @name Two.Points#length\n     * @property {Number} - The sum of distances between all {@link Two.Points#vertices}.\n     */\n    Object.defineProperty(object, 'length', {\n      get: function() {\n        if (this._flagLength) {\n          this._updateLength();\n        }\n        return this._length;\n      }\n    });\n\n    Object.defineProperty(object, 'beginning', {\n      enumerable: true,\n      get: function() {\n        return this._beginning;\n      },\n      set: function(v) {\n        this._beginning = v;\n        this._flagVertices = true;\n      }\n    });\n\n    Object.defineProperty(object, 'ending', {\n      enumerable: true,\n      get: function() {\n        return this._ending;\n      },\n      set: function(v) {\n        this._ending = v;\n        this._flagVertices = true;\n      }\n    });\n\n    Object.defineProperty(object, 'vertices', {\n\n      enumerable: true,\n\n      get: function() {\n        return this._collection;\n      },\n\n      set: function(vertices) {\n\n        var bindVertices = this._renderer.bindVertices;\n        var unbindVertices = this._renderer.unbindVertices;\n\n        // Remove previous listeners\n        if (this._collection) {\n          this._collection\n            .unbind(Events.Types.insert, bindVertices)\n            .unbind(Events.Types.remove, unbindVertices);\n        }\n\n        // Create new Collection with copy of vertices\n        if (vertices instanceof Collection) {\n          this._collection = vertices;\n        } else {\n          this._collection = new Collection(vertices || []);\n        }\n\n\n        // Listen for Collection changes and bind / unbind\n        this._collection\n          .bind(Events.Types.insert, bindVertices)\n          .bind(Events.Types.remove, unbindVertices);\n\n        // Bind Initial Vertices\n        bindVertices(this._collection);\n\n      }\n\n    });\n\n    Object.defineProperty(object, 'dashes', {\n      enumerable: true,\n      get: function() {\n        return this._dashes;\n      },\n      set: function(v) {\n        if(typeof v.offset !== 'number') {\n          v.offset = (this.dashes && this._dashes.offset) || 0;\n        }\n        this._dashes = v;\n      }\n    });\n\n  }\n\n});\n\n_.extend(Points.prototype, Shape.prototype, {\n\n  constructor: Points,\n\n  _flagVertices: true,\n  _flagLength: true,\n  _flagFill: true,\n  _flagStroke: true,\n  _flagLinewidth: true,\n  _flagOpacity: true,\n  _flagVisible: true,\n  _flagSize: true,\n  _flagSizeAttenuation: true,\n\n  _length: 0,\n  _fill: '#fff',\n  _stroke: '#000',\n  _linewidth: 1,\n  _opacity: 1.0,\n  _visible: true,\n  _size: 1,\n  _sizeAttenuation: false,\n  _beginning: 0,\n  _ending: 1.0,\n  _dashes: null,\n\n  /**\n   * @name Two.Points#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Points}\n   * @description Create a new instance of {@link Two.Points} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var clone = new Points();\n\n    for (var j = 0; j < this.vertices.length; j++) {\n      clone.vertices.push(this.vertices[j].clone());\n    }\n\n    for (var i = 0; i < Points.Properties.length; i++) {\n      var k = Points.Properties[i];\n      clone[k] = this[k];\n    }\n\n    clone.className = this.className;\n\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n    clone.skewX = this.skewX;\n    clone.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone._update();\n\n  },\n\n  /**\n   * @name Two.Points#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the points object.\n   */\n  toObject: function() {\n\n    var result = {\n      vertices: this.vertices.map(function(v) {\n        return v.toObject();\n      })\n    };\n\n    _.each(Points.Properties, function(k) {\n      result[k] = this[k];\n    }, this);\n\n    result.className = this.className;\n\n    result.translation = this.translation.toObject();\n    result.rotation = this.rotation;\n    result.scale = this.scale instanceof Vector ? this.scale.toObject() : this.scale;\n    result.skewX = this.skewX;\n    result.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      result.matrix = this.matrix.toObject();\n    }\n\n    return result;\n\n  },\n\n  /**\n   * @name Two.Points#noFill\n   * @function\n   * @description Short hand method to set fill to `transparent`.\n   */\n  noFill: Path.prototype.noFill,\n\n  /**\n   * @name Two.Points#noStroke\n   * @function\n   * @description Short hand method to set stroke to `transparent`.\n   */\n  noStroke: Path.prototype.noStroke,\n\n  /**\n   * @name Two.Points#corner\n   * @function\n   * @description Orient the vertices of the shape to the upper left-hand corner of the points object.\n   */\n  corner: Path.prototype.corner,\n\n  /**\n   * @name Two.Points#center\n   * @function\n   * @description Orient the vertices of the shape to the center of the points object.\n   */\n  center: Path.prototype.center,\n\n  /**\n   * @name Two.Points#remove\n   * @function\n   * @description Remove self from the scene / parent.\n   */\n  remove: Path.prototype.remove,\n\n  /**\n   * @name Two.Points#getBoundingClientRect\n   * @function\n   * @param {Boolean} [shallow=false] - Describes whether to calculate off local matrix or world matrix.\n   * @returns {Object} - Returns object with top, left, right, bottom, width, height attributes.\n   * @description Return an object with top, left, right, bottom, width, and height parameters of the path.\n   */\n  getBoundingClientRect: Path.prototype.getBoundingClientRect,\n\n  /**\n   * @name Two.Points#subdivide\n   * @function\n   * @param {Number} limit - How many times to recurse subdivisions.\n   * @description Insert a {@link Two.Vector} at the midpoint between every item in {@link Two.Points#vertices}.\n   */\n  subdivide: function(limit) {\n    // TODO: DRYness (function below)\n    this._update();\n    var points = [];\n    for (var i = 0; i < this.vertices.length; i++) {\n\n      var a = this.vertices[i];\n      var b = this.vertices[i - 1];\n\n      if (!b) {\n        continue;\n      }\n\n      var x1 = a.x;\n      var y1 = a.y;\n      var x2 = b.x;\n      var y2 = b.y;\n      var subdivisions = subdivide(x1, y1, x1, y1, x2, y2, x2, y2, limit);\n\n      points = points.concat(subdivisions);\n\n    }\n\n    this.vertices = points;\n    return this;\n\n  },\n\n  /**\n   * @name Two.Points#_updateLength\n   * @function\n   * @private\n   * @param {Number} [limit] -\n   * @param {Boolean} [silent=false] - If set to `true` then the points object isn't updated before calculation. Useful for internal use.\n   * @description Recalculate the {@link Two.Points#length} value.\n   */\n  _updateLength: Path.prototype._updateLength,\n\n  /**\n   * @name Two.Points#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagVertices) {\n\n      if (this._flagLength) {\n        this._updateLength(undefined, true);\n      }\n\n      var beginning = Math.min(this._beginning, this._ending);\n      var ending = Math.max(this._beginning, this._ending);\n\n      var bid = getIdByLength(this, beginning * this._length);\n      var eid = getIdByLength(this, ending * this._length);\n\n      var low = ceil(bid);\n      var high = floor(eid);\n\n      this._renderer.vertices = [];\n      this._renderer.collection = [];\n\n      var j = 0, v;\n\n      for (var i = 0; i < this._collection.length; i++) {\n\n        if (i >= low && i <= high) {\n          v = this._collection[i];\n          this._renderer.collection.push(v);\n          this._renderer.vertices[j * 2 + 0] = v.x;\n          this._renderer.vertices[j * 2 + 1] = v.y;\n          j++;\n        }\n\n      }\n\n    }\n\n    Shape.prototype._update.apply(this, arguments);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Points#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagVertices = this._flagLength = this._flagFill =  this._flagStroke =\n      this._flagLinewidth = this._flagOpacity = this._flagVisible =\n      this._flagSize = this._flagSizeAttenuation = false;\n\n    Shape.prototype.flagReset.call(this);\n\n    return this;\n\n  }\n\n});\n\nPoints.MakeObservable(Points.prototype);\n\nvar cos$1 = Math.cos, sin$1 = Math.sin;\n\n/**\n * @name Two.Polygon\n * @class\n * @extends Two.Path\n * @param {Number} [x=0] - The x position of the polygon.\n * @param {Number} [y=0] - The y position of the polygon.\n * @param {Number} [radius=0] - The radius value of the polygon.\n * @param {Number} [sides=12] - The number of vertices used to construct the polygon.\n */\nfunction Polygon(ox, oy, r, sides) {\n\n  sides = Math.max(sides || 0, 3);\n\n  Path.call(this);\n\n  this.closed = true;\n  this.automatic = false;\n\n  /**\n   * @name Two.Polygon#width\n   * @property {Number} - The size of the width of the polygon.\n   */\n  if (typeof r === 'number') {\n    this.width = r * 2;\n  }\n\n  /**\n   * @name Two.Polygon#height\n   * @property {Number} - The size of the height of the polygon.\n   */\n  if (typeof r === 'number') {\n    this.height = r * 2;\n  }\n\n  /**\n   * @name Two.Polygon#sides\n   * @property {Number} - The amount of sides the polyogn has.\n   */\n  if (typeof sides === 'number') {\n    this.sides = sides;\n  }\n\n  this._update();\n\n  if (typeof ox === 'number') {\n    this.translation.x = ox;\n  }\n  if (typeof oy === 'number') {\n    this.translation.y = oy;\n  }\n\n}\n\n_.extend(Polygon, {\n\n  /**\n   * @name Two.Polygon.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Polygon}.\n   */\n  Properties: ['width', 'height', 'sides'],\n\n  /**\n   * @name Two.Polygon.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Polygon} to any object. Handy if you'd like to extend the {@link Two.Polygon} class on a custom class.\n   */\n  MakeObservable: function(obj) {\n\n    Path.MakeObservable(obj);\n    _.each(Polygon.Properties, defineGetterSetter, obj);\n\n  }\n\n});\n\n_.extend(Polygon.prototype, Path.prototype, {\n\n  constructor: Polygon,\n\n  /**\n   * @name Two.Polygon#_flagWidth\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Polygon#width} needs updating.\n   */\n  _flagWidth: false,\n  /**\n   * @name Two.Polygon#_flagHeight\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Polygon#height} needs updating.\n   */\n  _flagHeight: false,\n  /**\n   * @name Two.Polygon#_flagSides\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Polygon#sides} needs updating.\n   */\n  _flagSides: false,\n\n  /**\n   * @name Two.Polygon#_width\n   * @private\n   * @see {@link Two.Polygon#width}\n   */\n  _width: 0,\n  /**\n   * @name Two.Polygon#_height\n   * @private\n   * @see {@link Two.Polygon#height}\n   */\n  _height: 0,\n  /**\n   * @name Two.Polygon#_sides\n   * @private\n   * @see {@link Two.Polygon#sides}\n   */\n  _sides: 0,\n\n  /**\n   * @name Two.Polygon#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagVertices || this._flagWidth || this._flagHeight || this._flagSides) {\n\n      var sides = this._sides;\n      var amount = sides + 1;\n      var length = this.vertices.length;\n\n      if (length > sides) {\n        this.vertices.splice(sides - 1, length - sides);\n        length = sides;\n      }\n\n      for (var i = 0; i < amount; i++) {\n\n        var pct = (i + 0.5) / sides;\n        var theta = TWO_PI * pct + Math.PI / 2;\n        var x = this._width * cos$1(theta) / 2;\n        var y = this._height * sin$1(theta) / 2;\n\n        if (i >= length) {\n          this.vertices.push(new Anchor(x, y));\n        } else {\n          this.vertices[i].set(x, y);\n        }\n\n        this.vertices[i].command = i === 0 ? Commands.move : Commands.line;\n\n      }\n\n    }\n\n    Path.prototype._update.call(this);\n    return this;\n\n  },\n\n  /**\n   * @name Two.Polygon#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagWidth = this._flagHeight = this._flagSides = false;\n    Path.prototype.flagReset.call(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Polygon#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Polygon}\n   * @description Create a new instance of {@link Two.Polygon} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var clone = new Polygon(0, 0, this.radius, this.sides);\n\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n    clone.skewX = this.skewX;\n    clone.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    _.each(Path.Properties, function(k) {\n      clone[k] = this[k];\n    }, this);\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.Polygon#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var object = Path.prototype.toObject.call(this);\n\n    _.each(Polygon.Properties, function(property) {\n      object[property] = this[property];\n    }, this);\n\n    return object;\n\n  }\n\n});\n\nPolygon.MakeObservable(Polygon.prototype);\n\nvar cos = Math.cos, sin = Math.sin;\n\n/**\n * @name Two.Star\n * @class\n * @extends Two.Path\n * @param {Number} [x=0] - The x position of the star.\n * @param {Number} [y=0] - The y position of the star.\n * @param {Number} [innerRadius=0] - The inner radius value of the star.\n * @param {Number} [outerRadius=0] - The outer radius value of the star.\n * @param {Number} [sides=5] - The number of sides used to construct the star.\n */\nfunction Star(ox, oy, ir, or, sides) {\n\n  if (arguments.length <= 3) {\n    or = ir;\n    ir = or / 2;\n  }\n\n  if (typeof sides !== 'number' || sides <= 0) {\n    sides = 5;\n  }\n\n  Path.call(this);\n  this.closed = true;\n  this.automatic = false;\n\n  /**\n   * @name Two.Star#innerRadius\n   * @property {Number} - The size of the inner radius of the star.\n   */\n  if (typeof ir === 'number') {\n    this.innerRadius = ir;\n  }\n\n  /**\n   * @name Two.Star#outerRadius\n   * @property {Number} - The size of the outer radius of the star.\n   */\n  if (typeof or === 'number') {\n    this.outerRadius = or;\n  }\n\n  /**\n   * @name Two.Star#sides\n   * @property {Number} - The amount of sides the star has.\n   */\n  if (typeof sides === 'number') {\n    this.sides = sides;\n  }\n\n  this._update();\n\n  if (typeof ox === 'number') {\n    this.translation.x = ox;\n  }\n  if (typeof oy === 'number') {\n    this.translation.y = oy;\n  }\n\n}\n\n_.extend(Star, {\n\n  /**\n   * @name Two.Star.Properties\n   * @property {String[]} - A list of properties that are on every {@link Two.Star}.\n   */\n  Properties: ['innerRadius', 'outerRadius', 'sides'],\n\n  /**\n   * @name Two.Star.MakeObservable\n   * @function\n   * @param {Object} object - The object to make observable.\n   * @description Convenience function to apply observable qualities of a {@link Two.Star} to any object. Handy if you'd like to extend the {@link Two.Star} class on a custom class.\n   */\n  MakeObservable: function(obj) {\n\n    Path.MakeObservable(obj);\n    _.each(Star.Properties, defineGetterSetter, obj);\n\n  }\n\n});\n\n_.extend(Star.prototype, Path.prototype, {\n\n  constructor: Star,\n\n  /**\n   * @name Two.Star#_flagInnerRadius\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Star#innerRadius} needs updating.\n   */\n  _flagInnerRadius: false,\n  /**\n   * @name Two.Star#_flagOuterRadius\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Star#outerRadius} needs updating.\n   */\n  _flagOuterRadius: false,\n  /**\n   * @name Two.Star#_flagSides\n   * @private\n   * @property {Boolean} - Determines whether the {@link Two.Star#sides} needs updating.\n   */\n  _flagSides: false,\n\n  /**\n   * @name Two.Star#_innerRadius\n   * @private\n   * @see {@link Two.Star#innerRadius}\n   */\n  _innerRadius: 0,\n  /**\n   * @name Two.Star#_outerRadius\n   * @private\n   * @see {@link Two.Star#outerRadius}\n   */\n  _outerRadius: 0,\n  /**\n   * @name Two.Star#_sides\n   * @private\n   * @see {@link Two.Star#sides}\n   */\n  _sides: 0,\n\n  /**\n   * @name Two.Star#_update\n   * @function\n   * @private\n   * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\n   * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\n   * @nota-bene Try not to call this method more than once a frame.\n   */\n  _update: function() {\n\n    if (this._flagVertices || this._flagInnerRadius || this._flagOuterRadius || this._flagSides) {\n\n      var sides = this._sides * 2;\n      var amount = sides + 1;\n      var length = this.vertices.length;\n\n      if (length > sides) {\n        this.vertices.splice(sides - 1, length - sides);\n        length = sides;\n      }\n\n      for (var i = 0; i < amount; i++) {\n\n        var pct = (i + 0.5) / sides;\n        var theta = TWO_PI * pct;\n        var r = (!(i % 2) ? this._innerRadius : this._outerRadius) / 2;\n        var x = r * cos(theta);\n        var y = r * sin(theta);\n\n        if (i >= length) {\n          this.vertices.push(new Anchor(x, y));\n        } else {\n          this.vertices[i].set(x, y);\n        }\n\n        this.vertices[i].command = i === 0 ? Commands.move : Commands.line;\n\n      }\n\n    }\n\n    Path.prototype._update.call(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Star#flagReset\n   * @function\n   * @private\n   * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\n   */\n  flagReset: function() {\n\n    this._flagInnerRadius = this._flagOuterRadius = this._flagSides = false;\n    Path.prototype.flagReset.call(this);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two.Star#clone\n   * @function\n   * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\n   * @returns {Two.Star}\n   * @description Create a new instance of {@link Two.Star} with the same properties of the current path.\n   */\n  clone: function(parent) {\n\n    var ir = this.innerRadius;\n    var or = this.outerRadius;\n    var sides = this.sides;\n\n    var clone = new Star(0, 0, ir, or, sides);\n\n    clone.translation.copy(this.translation);\n    clone.rotation = this.rotation;\n    clone.scale = this.scale;\n    clone.skewX = this.skewX;\n    clone.skewY = this.skewY;\n\n    if (this.matrix.manual) {\n      clone.matrix.copy(this.matrix);\n    }\n\n    _.each(Path.Properties, function(k) {\n      clone[k] = this[k];\n    }, this);\n\n    if (parent) {\n      parent.add(clone);\n    }\n\n    return clone;\n\n  },\n\n  /**\n   * @name Two.Star#toObject\n   * @function\n   * @returns {Object}\n   * @description Return a JSON compatible plain object that represents the path.\n   */\n  toObject: function() {\n\n    var object = Path.prototype.toObject.call(this);\n\n    _.each(Star.Properties, function(property) {\n      object[property] = this[property];\n    }, this);\n\n    return object;\n\n  }\n\n});\n\nStar.MakeObservable(Star.prototype);\n\nvar matrix = new Matrix();\n\nvar svg = {\n\n  version: 1.1,\n\n  ns: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n\n  alignments: {\n    left: 'start',\n    center: 'middle',\n    right: 'end'\n  },\n\n  // Create an svg namespaced element.\n  createElement: function(name, attrs) {\n    var tag = name;\n    var elem = document.createElementNS(svg.ns, tag);\n    if (tag === 'svg') {\n      attrs = _.defaults(attrs || {}, {\n        version: svg.version\n      });\n    }\n    if (attrs && Object.keys(attrs).length > 0) {\n      svg.setAttributes(elem, attrs);\n    }\n    return elem;\n  },\n\n  // Add attributes from an svg element.\n  setAttributes: function(elem, attrs) {\n    var keys = Object.keys(attrs);\n    for (var i = 0; i < keys.length; i++) {\n      if (/href/.test(keys[i])) {\n        elem.setAttributeNS(svg.xlink, keys[i], attrs[keys[i]]);\n      } else {\n        elem.setAttribute(keys[i], attrs[keys[i]]);\n      }\n    }\n    return this;\n  },\n\n  // Remove attributes from an svg element.\n  removeAttributes: function(elem, attrs) {\n    for (var key in attrs) {\n      elem.removeAttribute(key);\n    }\n    return this;\n  },\n\n  // Turn a set of vertices into a string for the d property of a path\n  // element. It is imperative that the string collation is as fast as\n  // possible, because this call will be happening multiple times a\n  // second.\n  toString: function(points, closed) {\n\n    var l = points.length,\n      last = l - 1,\n      d, // The elusive last Commands.move point\n      string = '';\n\n    for (var i = 0; i < l; i++) {\n      var b = points[i];\n      var command;\n      var prev = closed ? mod(i - 1, l) : Math.max(i - 1, 0);\n      var next = closed ? mod(i + 1, l) : Math.min(i + 1, last);\n\n      var a = points[prev];\n      var c = points[next];\n\n      var vx, vy, ux, uy, ar, bl, br, cl;\n      var rx, ry, xAxisRotation, largeArcFlag, sweepFlag;\n\n      // Access x and y directly,\n      // bypassing the getter\n      var x = toFixed(b.x);\n      var y = toFixed(b.y);\n\n      switch (b.command) {\n\n        case Commands.close:\n          command = Commands.close;\n          break;\n\n        case Commands.arc:\n\n          rx = b.rx;\n          ry = b.ry;\n          xAxisRotation = b.xAxisRotation;\n          largeArcFlag = b.largeArcFlag;\n          sweepFlag = b.sweepFlag;\n\n          command = Commands.arc + ' ' + rx + ' ' + ry + ' '\n            + xAxisRotation + ' ' + largeArcFlag + ' ' + sweepFlag + ' '\n            + x + ' ' + y;\n          break;\n\n        case Commands.curve:\n\n          ar = (a.controls && a.controls.right) || Vector.zero;\n          bl = (b.controls && b.controls.left) || Vector.zero;\n\n          if (a.relative) {\n            vx = toFixed((ar.x + a.x));\n            vy = toFixed((ar.y + a.y));\n          } else {\n            vx = toFixed(ar.x);\n            vy = toFixed(ar.y);\n          }\n\n          if (b.relative) {\n            ux = toFixed((bl.x + b.x));\n            uy = toFixed((bl.y + b.y));\n          } else {\n            ux = toFixed(bl.x);\n            uy = toFixed(bl.y);\n          }\n\n          command = ((i === 0) ? Commands.move : Commands.curve) +\n            ' ' + vx + ' ' + vy + ' ' + ux + ' ' + uy + ' ' + x + ' ' + y;\n          break;\n\n        case Commands.move:\n          d = b;\n          command = Commands.move + ' ' + x + ' ' + y;\n          break;\n\n        default:\n          command = b.command + ' ' + x + ' ' + y;\n\n      }\n\n      // Add a final point and close it off\n\n      if (i >= last && closed) {\n\n        if (b.command === Commands.curve) {\n\n          // Make sure we close to the most previous Commands.move\n          c = d;\n\n          br = (b.controls && b.controls.right) || b;\n          cl = (c.controls && c.controls.left) || c;\n\n          if (b.relative) {\n            vx = toFixed((br.x + b.x));\n            vy = toFixed((br.y + b.y));\n          } else {\n            vx = toFixed(br.x);\n            vy = toFixed(br.y);\n          }\n\n          if (c.relative) {\n            ux = toFixed((cl.x + c.x));\n            uy = toFixed((cl.y + c.y));\n          } else {\n            ux = toFixed(cl.x);\n            uy = toFixed(cl.y);\n          }\n\n          x = toFixed(c.x);\n          y = toFixed(c.y);\n\n          command +=\n            ' C ' + vx + ' ' + vy + ' ' + ux + ' ' + uy + ' ' + x + ' ' + y;\n\n        }\n\n        if (b.command !== Commands.close) {\n          command += ' Z';\n        }\n\n      }\n\n      string += command + ' ';\n\n    }\n\n    return string;\n\n  },\n\n  pointsToString: function(points, size) {\n\n    var string = '';\n    var r = size * 0.5;\n\n    for (var i = 0; i < points.length; i++) {\n\n      var x = points[i].x;\n      var y = points[i].y - r;\n\n      string += Commands.move + ' ' + x + ' ' + y + ' ';\n      string += 'a ' + r + ' ' + r + ' 0 1 0 0.001 0 Z';\n\n    }\n\n    return string;\n\n  },\n\n  getClip: function(shape, domElement) {\n\n    var clip = shape._renderer.clip;\n\n    if (!clip) {\n\n      clip = shape._renderer.clip = svg.createElement('clipPath', {\n        'clip-rule': 'nonzero'\n      });\n      domElement.defs.appendChild(clip);\n\n    }\n\n    return clip;\n\n  },\n\n  group: {\n\n    // TODO: Can speed up.\n    // TODO: How does this effect a f\n    appendChild: function(object) {\n\n      var elem = object._renderer.elem;\n\n      if (!elem) {\n        return;\n      }\n\n      var tag = elem.nodeName;\n\n      if (!tag || /(radial|linear)gradient/i.test(tag) || object._clip) {\n        return;\n      }\n\n      this.elem.appendChild(elem);\n\n    },\n\n    removeChild: function(object) {\n\n      var elem = object._renderer.elem;\n\n      if (!elem || elem.parentNode != this.elem) {\n        return;\n      }\n\n      var tag = elem.nodeName;\n\n      if (!tag) {\n        return;\n      }\n\n      // Defer subtractions while clipping.\n      if (object._clip) {\n        return;\n      }\n\n      this.elem.removeChild(elem);\n\n    },\n\n    orderChild: function(object) {\n      this.elem.appendChild(object._renderer.elem);\n    },\n\n    renderChild: function(child) {\n      svg[child._renderer.type].render.call(child, this);\n    },\n\n    render: function(domElement) {\n\n      // Shortcut for hidden objects.\n      // Doesn't reset the flags, so changes are stored and\n      // applied once the object is visible again\n      if ((!this._visible && !this._flagVisible)\n        || (this._opacity === 0 && !this._flagOpacity)) {\n        return this;\n      }\n\n      this._update();\n\n      if (!this._renderer.elem) {\n        this._renderer.elem = svg.createElement('g', {\n          id: this.id\n        });\n        domElement.appendChild(this._renderer.elem);\n      }\n\n      // _Update styles for the <g>\n      var flagMatrix = this._matrix.manual || this._flagMatrix;\n      var context = {\n        domElement: domElement,\n        elem: this._renderer.elem\n      };\n\n      if (flagMatrix) {\n        this._renderer.elem.setAttribute('transform', 'matrix(' + this._matrix.toString() + ')');\n      }\n\n      for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        svg[child._renderer.type].render.call(child, domElement);\n      }\n\n      if (this._flagId) {\n        this._renderer.elem.setAttribute('id', this._id);\n      }\n\n      if (this._flagOpacity) {\n        this._renderer.elem.setAttribute('opacity', this._opacity);\n      }\n\n      if (this._flagVisible) {\n        this._renderer.elem.setAttribute('display', this._visible ? 'inline' : 'none');\n      }\n\n      if (this._flagClassName) {\n        this._renderer.elem.setAttribute('class', this.classList.join(' '));\n      }\n\n      if (this._flagAdditions) {\n        this.additions.forEach(svg.group.appendChild, context);\n      }\n\n      if (this._flagSubtractions) {\n        this.subtractions.forEach(svg.group.removeChild, context);\n      }\n\n      if (this._flagOrder) {\n        this.children.forEach(svg.group.orderChild, context);\n      }\n\n      // Commented two-way functionality of clips / masks with groups and\n      // polygons. Uncomment when this bug is fixed:\n      // https://code.google.com/p/chromium/issues/detail?id=370951\n\n      // if (this._flagClip) {\n\n      //   clip = svg.getClip(this, domElement);\n      //   elem = this._renderer.elem;\n\n      //   if (this._clip) {\n      //     elem.removeAttribute('id');\n      //     clip.setAttribute('id', this.id);\n      //     clip.appendChild(elem);\n      //   } else {\n      //     clip.removeAttribute('id');\n      //     elem.setAttribute('id', this.id);\n      //     this.parent._renderer.elem.appendChild(elem); // TODO: should be insertBefore\n      //   }\n\n      // }\n\n      if (this._flagMask) {\n        if (this._mask) {\n          svg[this._mask._renderer.type].render.call(this._mask, domElement);\n          this._renderer.elem.setAttribute('clip-path', 'url(#' + this._mask.id + ')');\n        } else {\n          this._renderer.elem.removeAttribute('clip-path');\n        }\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  path: {\n\n    render: function(domElement) {\n\n      // Shortcut for hidden objects.\n      // Doesn't reset the flags, so changes are stored and\n      // applied once the object is visible again\n      if (this._opacity === 0 && !this._flagOpacity) {\n        return this;\n      }\n\n      this._update();\n\n      // Collect any attribute that needs to be changed here\n      var changed = {};\n\n      var flagMatrix = this._matrix.manual || this._flagMatrix;\n\n      if (flagMatrix) {\n        changed.transform = 'matrix(' + this._matrix.toString() + ')';\n      }\n\n      if (this._flagId) {\n        changed.id = this._id;\n      }\n\n      if (this._flagVertices) {\n        var vertices = svg.toString(this._renderer.vertices, this._closed);\n        changed.d = vertices;\n      }\n\n      if (this._fill && this._fill._renderer) {\n        this._fill._update();\n        svg[this._fill._renderer.type].render.call(this._fill, domElement, true);\n      }\n\n      if (this._flagFill) {\n        changed.fill = this._fill && this._fill.id\n          ? 'url(#' + this._fill.id + ')' : this._fill;\n      }\n\n      if (this._stroke && this._stroke._renderer) {\n        this._stroke._update();\n        svg[this._stroke._renderer.type].render.call(this._stroke, domElement, true);\n      }\n\n      if (this._flagStroke) {\n        changed.stroke = this._stroke && this._stroke.id\n          ? 'url(#' + this._stroke.id + ')' : this._stroke;\n      }\n\n      if (this._flagLinewidth) {\n        changed['stroke-width'] = this._linewidth;\n      }\n\n      if (this._flagOpacity) {\n        changed['stroke-opacity'] = this._opacity;\n        changed['fill-opacity'] = this._opacity;\n      }\n\n      if (this._flagClassName) {\n        changed['class'] = this.classList.join(' ');\n      }\n\n      if (this._flagVisible) {\n        changed.visibility = this._visible ? 'visible' : 'hidden';\n      }\n\n      if (this._flagCap) {\n        changed['stroke-linecap'] = this._cap;\n      }\n\n      if (this._flagJoin) {\n        changed['stroke-linejoin'] = this._join;\n      }\n\n      if (this._flagMiter) {\n        changed['stroke-miterlimit'] = this._miter;\n      }\n\n      if (this.dashes && this.dashes.length > 0) {\n        changed['stroke-dasharray'] = this.dashes.join(' ');\n        changed['stroke-dashoffset'] = this.dashes.offset || 0;\n      }\n\n      // If there is no attached DOM element yet,\n      // create it with all necessary attributes.\n      if (!this._renderer.elem) {\n\n        changed.id = this._id;\n        this._renderer.elem = svg.createElement('path', changed);\n        domElement.appendChild(this._renderer.elem);\n\n      // Otherwise apply all pending attributes\n      } else {\n        svg.setAttributes(this._renderer.elem, changed);\n      }\n\n      if (this._flagClip) {\n\n        var clip = svg.getClip(this, domElement);\n        var elem = this._renderer.elem;\n\n        if (this._clip) {\n          elem.removeAttribute('id');\n          clip.setAttribute('id', this.id);\n          clip.appendChild(elem);\n        } else {\n          clip.removeAttribute('id');\n          elem.setAttribute('id', this.id);\n          this.parent._renderer.elem.appendChild(elem); // TODO: should be insertBefore\n        }\n\n      }\n\n      // Commented two-way functionality of clips / masks with groups and\n      // polygons. Uncomment when this bug is fixed:\n      // https://code.google.com/p/chromium/issues/detail?id=370951\n\n      if (this._flagMask) {\n        if (this._mask) {\n          svg[this._mask._renderer.type].render.call(this._mask, domElement);\n          this._renderer.elem.setAttribute('clip-path', 'url(#' + this._mask.id + ')');\n        } else {\n          this._renderer.elem.removeAttribute('clip-path');\n        }\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  points: {\n\n    render: function(domElement) {\n\n      // Shortcut for hidden objects.\n      // Doesn't reset the flags, so changes are stored and\n      // applied once the object is visible again\n      if (this._opacity === 0 && !this._flagOpacity) {\n        return this;\n      }\n\n      this._update();\n\n      // Collect any attribute that needs to be changed here\n      var changed = {};\n\n      var flagMatrix = this._matrix.manual || this._flagMatrix;\n\n      if (flagMatrix) {\n        changed.transform = 'matrix(' + this._matrix.toString() + ')';\n      }\n\n      if (this._flagId) {\n        changed.id = this._id;\n      }\n\n      if (this._flagVertices || this._flagSize || this._flagSizeAttenuation) {\n        var size = this._size;\n        if (!this._sizeAttenuation) {\n          getComputedMatrix(this, matrix);\n          var me = matrix.elements;\n          var m = decomposeMatrix(me[0], me[3], me[1], me[4], me[2], me[5]);\n          size /= Math.max(m.scaleX, m.scaleY);\n        }\n        var vertices = svg.pointsToString(this._renderer.collection, size);\n        changed.d = vertices;\n      }\n\n      if (this._fill && this._fill._renderer) {\n        this._fill._update();\n        svg[this._fill._renderer.type].render.call(this._fill, domElement, true);\n      }\n\n      if (this._flagFill) {\n        changed.fill = this._fill && this._fill.id\n          ? 'url(#' + this._fill.id + ')' : this._fill;\n      }\n\n      if (this._stroke && this._stroke._renderer) {\n        this._stroke._update();\n        svg[this._stroke._renderer.type].render.call(this._stroke, domElement, true);\n      }\n\n      if (this._flagStroke) {\n        changed.stroke = this._stroke && this._stroke.id\n          ? 'url(#' + this._stroke.id + ')' : this._stroke;\n      }\n\n      if (this._flagLinewidth) {\n        changed['stroke-width'] = this._linewidth;\n      }\n\n      if (this._flagOpacity) {\n        changed['stroke-opacity'] = this._opacity;\n        changed['fill-opacity'] = this._opacity;\n      }\n\n      if (this._flagClassName) {\n        changed['class'] = this.classList.join(' ');\n      }\n\n      if (this._flagVisible) {\n        changed.visibility = this._visible ? 'visible' : 'hidden';\n      }\n\n      if (this.dashes && this.dashes.length > 0) {\n        changed['stroke-dasharray'] = this.dashes.join(' ');\n        changed['stroke-dashoffset'] = this.dashes.offset || 0;\n      }\n\n      // If there is no attached DOM element yet,\n      // create it with all necessary attributes.\n      if (!this._renderer.elem) {\n\n        changed.id = this._id;\n        this._renderer.elem = svg.createElement('path', changed);\n        domElement.appendChild(this._renderer.elem);\n\n      // Otherwise apply all pending attributes\n      } else {\n        svg.setAttributes(this._renderer.elem, changed);\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  text: {\n\n    render: function(domElement) {\n\n      this._update();\n\n      var changed = {};\n\n      var flagMatrix = this._matrix.manual || this._flagMatrix;\n\n      if (flagMatrix) {\n        changed.transform = 'matrix(' + this._matrix.toString() + ')';\n      }\n\n      if (this._flagId) {\n        changed.id = this._id;\n      }\n\n      if (this._flagFamily) {\n        changed['font-family'] = this._family;\n      }\n      if (this._flagSize) {\n        changed['font-size'] = this._size;\n      }\n      if (this._flagLeading) {\n        changed['line-height'] = this._leading;\n      }\n      if (this._flagAlignment) {\n        changed['text-anchor'] = svg.alignments[this._alignment] || this._alignment;\n      }\n      if (this._flagBaseline) {\n        changed['alignment-baseline'] = changed['dominant-baseline'] = this._baseline;\n      }\n      if (this._flagStyle) {\n        changed['font-style'] = this._style;\n      }\n      if (this._flagWeight) {\n        changed['font-weight'] = this._weight;\n      }\n      if (this._flagDecoration) {\n        changed['text-decoration'] = this._decoration;\n      }\n      if (this._fill && this._fill._renderer) {\n        this._fill._update();\n        svg[this._fill._renderer.type].render.call(this._fill, domElement, true);\n      }\n      if (this._flagFill) {\n        changed.fill = this._fill && this._fill.id\n          ? 'url(#' + this._fill.id + ')' : this._fill;\n      }\n      if (this._stroke && this._stroke._renderer) {\n        this._stroke._update();\n        svg[this._stroke._renderer.type].render.call(this._stroke, domElement, true);\n      }\n      if (this._flagStroke) {\n        changed.stroke = this._stroke && this._stroke.id\n          ? 'url(#' + this._stroke.id + ')' : this._stroke;\n      }\n      if (this._flagLinewidth) {\n        changed['stroke-width'] = this._linewidth;\n      }\n      if (this._flagOpacity) {\n        changed.opacity = this._opacity;\n      }\n      if (this._flagClassName) {\n        changed['class'] = this.classList.join(' ');\n      }\n      if (this._flagVisible) {\n        changed.visibility = this._visible ? 'visible' : 'hidden';\n      }\n      if (this.dashes && this.dashes.length > 0) {\n        changed['stroke-dasharray'] = this.dashes.join(' ');\n        changed['stroke-dashoffset'] = this.dashes.offset || 0;\n      }\n\n      if (!this._renderer.elem) {\n\n        changed.id = this._id;\n\n        this._renderer.elem = svg.createElement('text', changed);\n        domElement.defs.appendChild(this._renderer.elem);\n\n      } else {\n\n        svg.setAttributes(this._renderer.elem, changed);\n\n      }\n\n      if (this._flagClip) {\n\n        var clip = svg.getClip(this, domElement);\n        var elem = this._renderer.elem;\n\n        if (this._clip) {\n          elem.removeAttribute('id');\n          clip.setAttribute('id', this.id);\n          clip.appendChild(elem);\n        } else {\n          clip.removeAttribute('id');\n          elem.setAttribute('id', this.id);\n          this.parent._renderer.elem.appendChild(elem); // TODO: should be insertBefore\n        }\n\n      }\n\n      // Commented two-way functionality of clips / masks with groups and\n      // polygons. Uncomment when this bug is fixed:\n      // https://code.google.com/p/chromium/issues/detail?id=370951\n\n      if (this._flagMask) {\n        if (this._mask) {\n          svg[this._mask._renderer.type].render.call(this._mask, domElement);\n          this._renderer.elem.setAttribute('clip-path', 'url(#' + this._mask.id + ')');\n        } else {\n          this._renderer.elem.removeAttribute('clip-path');\n        }\n      }\n\n      if (this._flagValue) {\n        this._renderer.elem.textContent = this._value;\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  'linear-gradient': {\n\n    render: function(domElement, silent) {\n\n      if (!silent) {\n        this._update();\n      }\n\n      var changed = {};\n\n      if (this._flagId) {\n        changed.id = this._id;\n      }\n\n      if (this._flagEndPoints) {\n        changed.x1 = this.left._x;\n        changed.y1 = this.left._y;\n        changed.x2 = this.right._x;\n        changed.y2 = this.right._y;\n      }\n\n      if (this._flagSpread) {\n        changed.spreadMethod = this._spread;\n      }\n\n      // If there is no attached DOM element yet,\n      // create it with all necessary attributes.\n      if (!this._renderer.elem) {\n\n        changed.id = this._id;\n        changed.gradientUnits = 'userSpaceOnUse';\n        this._renderer.elem = svg.createElement('linearGradient', changed);\n        domElement.defs.appendChild(this._renderer.elem);\n\n      // Otherwise apply all pending attributes\n      } else {\n\n        svg.setAttributes(this._renderer.elem, changed);\n\n      }\n\n      if (this._flagStops) {\n\n        var lengthChanged = this._renderer.elem.childNodes.length\n          !== this.stops.length;\n\n        if (lengthChanged) {\n          while (this._renderer.elem.lastChild) {\n            this._renderer.elem.removeChild(this._renderer.elem.lastChild);\n          }\n        }\n\n        for (var i = 0; i < this.stops.length; i++) {\n\n          var stop = this.stops[i];\n          var attrs = {};\n\n          if (stop._flagOffset) {\n            attrs.offset = 100 * stop._offset + '%';\n          }\n          if (stop._flagColor) {\n            attrs['stop-color'] = stop._color;\n          }\n          if (stop._flagOpacity) {\n            attrs['stop-opacity'] = stop._opacity;\n          }\n\n          if (!stop._renderer.elem) {\n            stop._renderer.elem = svg.createElement('stop', attrs);\n          } else {\n            svg.setAttributes(stop._renderer.elem, attrs);\n          }\n\n          if (lengthChanged) {\n            this._renderer.elem.appendChild(stop._renderer.elem);\n          }\n          stop.flagReset();\n\n        }\n\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  'radial-gradient': {\n\n    render: function(domElement, silent) {\n\n      if (!silent) {\n        this._update();\n      }\n\n      var changed = {};\n\n      if (this._flagId) {\n        changed.id = this._id;\n      }\n\n      if (this._flagCenter) {\n        changed.cx = this.center._x;\n        changed.cy = this.center._y;\n      }\n      if (this._flagFocal) {\n        changed.fx = this.focal._x;\n        changed.fy = this.focal._y;\n      }\n\n      if (this._flagRadius) {\n        changed.r = this._radius;\n      }\n\n      if (this._flagSpread) {\n        changed.spreadMethod = this._spread;\n      }\n\n      // If there is no attached DOM element yet,\n      // create it with all necessary attributes.\n      if (!this._renderer.elem) {\n\n        changed.id = this._id;\n        changed.gradientUnits = 'userSpaceOnUse';\n        this._renderer.elem = svg.createElement('radialGradient', changed);\n        domElement.defs.appendChild(this._renderer.elem);\n\n      // Otherwise apply all pending attributes\n      } else {\n\n        svg.setAttributes(this._renderer.elem, changed);\n\n      }\n\n      if (this._flagStops) {\n\n        var lengthChanged = this._renderer.elem.childNodes.length\n          !== this.stops.length;\n\n        if (lengthChanged) {\n          while (this._renderer.elem.lastChild) {\n            this._renderer.elem.removeChild(this._renderer.elem.lastChild);\n          }\n        }\n\n        for (var i = 0; i < this.stops.length; i++) {\n\n          var stop = this.stops[i];\n          var attrs = {};\n\n          if (stop._flagOffset) {\n            attrs.offset = 100 * stop._offset + '%';\n          }\n          if (stop._flagColor) {\n            attrs['stop-color'] = stop._color;\n          }\n          if (stop._flagOpacity) {\n            attrs['stop-opacity'] = stop._opacity;\n          }\n\n          if (!stop._renderer.elem) {\n            stop._renderer.elem = svg.createElement('stop', attrs);\n          } else {\n            svg.setAttributes(stop._renderer.elem, attrs);\n          }\n\n          if (lengthChanged) {\n            this._renderer.elem.appendChild(stop._renderer.elem);\n          }\n          stop.flagReset();\n\n        }\n\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  texture: {\n\n    render: function(domElement, silent) {\n\n      if (!silent) {\n        this._update();\n      }\n\n      var changed = {};\n      var styles = { x: 0, y: 0 };\n      var image = this.image;\n\n      if (this._flagId) {\n        changed.id = this._id;\n      }\n\n      if (this._flagLoaded && this.loaded) {\n\n        switch (image.nodeName.toLowerCase()) {\n\n          case 'canvas':\n            styles.href = styles['xlink:href'] = image.toDataURL('image/png');\n            break;\n          case 'img':\n          case 'image':\n            styles.href = styles['xlink:href'] = this.src;\n            break;\n\n        }\n\n      }\n\n      if (this._flagOffset || this._flagLoaded || this._flagScale) {\n\n        changed.x = this._offset.x;\n        changed.y = this._offset.y;\n\n        if (image) {\n\n          changed.x -= image.width / 2;\n          changed.y -= image.height / 2;\n\n          if (this._scale instanceof Vector) {\n            changed.x *= this._scale.x;\n            changed.y *= this._scale.y;\n          } else {\n            changed.x *= this._scale;\n            changed.y *= this._scale;\n          }\n        }\n\n        if (changed.x > 0) {\n          changed.x *= - 1;\n        }\n        if (changed.y > 0) {\n          changed.y *= - 1;\n        }\n\n      }\n\n      if (this._flagScale || this._flagLoaded || this._flagRepeat) {\n\n        changed.width = 0;\n        changed.height = 0;\n\n        if (image) {\n\n          styles.width = changed.width = image.width;\n          styles.height = changed.height = image.height;\n\n          // TODO: Hack / Band-aid\n          switch (this._repeat) {\n            case 'no-repeat':\n              changed.width += 1;\n              changed.height += 1;\n              break;\n          }\n\n          if (this._scale instanceof Vector) {\n            changed.width *= this._scale.x;\n            changed.height *= this._scale.y;\n          } else {\n            changed.width *= this._scale;\n            changed.height *= this._scale;\n          }\n        }\n\n      }\n\n      if (this._flagScale || this._flagLoaded) {\n        if (!this._renderer.image) {\n          this._renderer.image = svg.createElement('image', styles);\n        } else {\n          svg.setAttributes(this._renderer.image, styles);\n        }\n      }\n\n      if (!this._renderer.elem) {\n\n        changed.id = this._id;\n        changed.patternUnits = 'userSpaceOnUse';\n        this._renderer.elem = svg.createElement('pattern', changed);\n        domElement.defs.appendChild(this._renderer.elem);\n\n      } else if (Object.keys(changed).length !== 0) {\n\n        svg.setAttributes(this._renderer.elem, changed);\n\n      }\n\n      if (this._renderer.elem && this._renderer.image && !this._renderer.appended) {\n        this._renderer.elem.appendChild(this._renderer.image);\n        this._renderer.appended = true;\n      }\n\n      return this.flagReset();\n\n    }\n\n  }\n\n};\n\n/**\n * @name Two.SVGRenderer\n * @class\n * @extends Two.Events\n * @param {Object} [parameters] - This object is inherited when constructing a new instance of {@link Two}.\n * @param {Element} [parameters.domElement] - The `<svg />` to draw to. If none given a new one will be constructed.\n * @description This class is used by {@link Two} when constructing with `type` of `Two.Types.svg` (the default type). It takes Two.js' scenegraph and renders it to a `<svg />`.\n */\nfunction Renderer$1(params) {\n\n  /**\n   * @name Two.SVGRenderer#domElement\n   * @property {Element} - The `<svg />` associated with the Two.js scene.\n   */\n  this.domElement = params.domElement || svg.createElement('svg');\n\n  /**\n   * @name Two.SVGRenderer#scene\n   * @property {Two.Group} - The root group of the scenegraph.\n   */\n  this.scene = new Group();\n  this.scene.parent = this;\n\n  /**\n   * @name Two.SVGRenderer#defs\n   * @property {SvgDefintionsElement} - The `<defs />` to apply gradients, patterns, and bitmap imagery.\n   */\n  this.defs = svg.createElement('defs');\n  this.domElement.appendChild(this.defs);\n  this.domElement.defs = this.defs;\n  this.domElement.style.overflow = 'hidden';\n\n}\n\n_.extend(Renderer$1, {\n\n  /**\n   * @name Two.SVGRenderer.Utils\n   * @property {Object} - A massive object filled with utility functions and properties to render Two.js objects to a `<svg />`.\n   */\n  Utils: svg\n\n});\n\n_.extend(Renderer$1.prototype, Events, {\n\n  constructor: Renderer$1,\n\n  /**\n   * @name Two.SVGRenderer#setSize\n   * @function\n   * @param {Number} width - The new width of the renderer.\n   * @param {Number} height - The new height of the renderer.\n   * @description Change the size of the renderer.\n   * @nota-bene Triggers a `Two.Events.resize`.\n   */\n  setSize: function(width, height) {\n\n    this.width = width;\n    this.height = height;\n\n    svg.setAttributes(this.domElement, {\n      width: width,\n      height: height\n    });\n\n    return this.trigger(Events.Types.resize, width, height);\n\n  },\n\n  /**\n   * @name Two.SVGRenderer#render\n   * @function\n   * @description Render the current scene to the `<svg />`.\n   */\n  render: function() {\n\n    svg.group.render.call(this.scene, this.domElement);\n\n    return this;\n\n  }\n\n});\n\nvar shaders = {\n\n  create: function(gl, source, type) {\n    var shader, compiled, error;\n    shader = gl.createShader(gl[type]);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      error = gl.getShaderInfoLog(shader);\n      gl.deleteShader(shader);\n      throw new TwoError('unable to compile shader ' + shader + ': ' + error);\n    }\n\n    return shader;\n\n  },\n\n  types: {\n    vertex: 'VERTEX_SHADER',\n    fragment: 'FRAGMENT_SHADER'\n  },\n\n  path : {\n\n    vertex:`\n      precision mediump float;\n      attribute vec2 a_position;\n\n      uniform mat3 u_matrix;\n      uniform vec2 u_resolution;\n      uniform vec4 u_rect;\n\n      varying vec2 v_textureCoords;\n\n      void main() {\n        vec2 rectCoords = (a_position * (u_rect.zw - u_rect.xy)) + u_rect.xy;\n        vec2 projected = (u_matrix * vec3(rectCoords, 1.0)).xy;\n        vec2 normal = projected / u_resolution;\n        vec2 clipspace = (normal * 2.0) - 1.0;\n\n        gl_Position = vec4(clipspace * vec2(1.0, -1.0), 0.0, 1.0);\n        v_textureCoords = a_position;\n      }\n    `,\n\n    fragment: `\n      precision mediump float;\n\n      uniform sampler2D u_image;\n      varying vec2 v_textureCoords;\n\n      void main() {\n        vec4 texel = texture2D(u_image, v_textureCoords);\n        if (texel.a == 0.0) {\n          discard;\n        }\n        gl_FragColor = texel;\n      }\n    `,\n\n  },\n\n  points: {\n\n    vertex: `\n      precision mediump float;\n      attribute vec2 a_position;\n\n      uniform float u_size;\n      uniform mat3 u_matrix;\n      uniform vec2 u_resolution;\n\n      varying vec2 v_textureCoords;\n\n      void main() {\n        vec2 projected = (u_matrix * vec3(a_position, 1.0)).xy;\n        vec2 normal = projected / u_resolution;\n        vec2 clipspace = (normal * 2.0) - 1.0;\n\n        gl_PointSize = u_size;\n        gl_Position = vec4(clipspace * vec2(1.0, -1.0), 0.0, 1.0);\n        v_textureCoords = a_position;\n      }\n    `,\n\n    fragment: `\n      precision mediump float;\n\n      uniform sampler2D u_image;\n\n      void main() {\n        vec4 texel = texture2D(u_image, gl_PointCoord);\n        if (texel.a == 0.0) {\n          discard;\n        }\n        gl_FragColor = texel;\n      }\n    `\n\n  }\n\n};\n\n// Constants\n\nvar multiplyMatrix = Matrix.Multiply,\n  identity = [1, 0, 0, 0, 1, 0, 0, 0, 1],\n  transformation = new NumArray(9),\n  CanvasUtils = Renderer$2.Utils;\n\nvar quad = new NumArray([\n  0, 0,\n  1, 0,\n  0, 1,\n  0, 1,\n  1, 0,\n  1, 1\n]);\n\nvar webgl = {\n\n  precision: 0.9,\n\n  isHidden: /(undefined|none|transparent)/i,\n\n  canvas: (root$1.document ? root$1.document.createElement('canvas') : { getContext: function() {} }),\n\n  alignments: {\n    left: 'start',\n    middle: 'center',\n    right: 'end'\n  },\n\n  matrix: new Matrix(),\n\n  group: {\n\n    removeChild: function(child, gl) {\n      if (child.children) {\n        for (var i = 0; i < child.children.length; i++) {\n          webgl.group.removeChild(child.children[i], gl);\n        }\n      }\n      // Deallocate texture to free up gl memory.\n      if (child._renderer.texture) {\n        gl.deleteTexture(child._renderer.texture);\n        delete child._renderer.texture;\n      }\n      // Deallocate vertices to free up gl memory.\n      if (child._renderer.positionBuffer) {\n        gl.deleteBuffer(child._renderer.positionBuffer);\n        delete child._renderer.positionBuffer;\n      }\n    },\n\n    render: function(gl, programs) {\n\n      if (!this._visible) {\n        return;\n      }\n\n      this._update();\n\n      var parent = this.parent;\n      var flagParentMatrix = (parent._matrix && parent._matrix.manual) || parent._flagMatrix;\n      var flagMatrix = this._matrix.manual || this._flagMatrix;\n\n      if (flagParentMatrix || flagMatrix) {\n\n        if (!this._renderer.matrix) {\n          this._renderer.matrix = new NumArray(9);\n        }\n\n        // Reduce amount of object / array creation / deletion\n        this._matrix.toTransformArray(true, transformation);\n\n        multiplyMatrix(transformation, parent._renderer.matrix, this._renderer.matrix);\n\n        if (!(this._renderer.scale instanceof Vector)) {\n          this._renderer.scale = new Vector();\n        }\n\n        if (this._scale instanceof Vector) {\n          this._renderer.scale.x = this._scale.x;\n          this._renderer.scale.y = this._scale.y;\n        } else {\n          this._renderer.scale.x = this._scale;\n          this._renderer.scale.y = this._scale;\n        }\n\n        if (!(/renderer/i.test(parent._renderer.type))) {\n          this._renderer.scale.x *= parent._renderer.scale.x;\n          this._renderer.scale.y *= parent._renderer.scale.y;\n        }\n\n        if (flagParentMatrix) {\n          this._flagMatrix = true;\n        }\n\n      }\n\n      if (this._mask) {\n\n        // Stencil away everything that isn't rendered by the mask\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        gl.enable(gl.STENCIL_TEST);\n\n        gl.stencilFunc(gl.ALWAYS, 1, 0);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n        // Don't draw the element onto the canvas, only onto the stencil buffer\n        gl.colorMask(false, false, false, false);\n\n        webgl[this._mask._renderer.type].render.call(this._mask, gl, programs, this);\n\n        gl.stencilFunc(gl.EQUAL, 1, 0xff);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n        gl.colorMask(true, true, true, true);\n\n      }\n\n      this._flagOpacity = parent._flagOpacity || this._flagOpacity;\n\n      this._renderer.opacity = this._opacity\n        * (parent && parent._renderer ? parent._renderer.opacity : 1);\n\n      var i;\n      if (this._flagSubtractions) {\n        for (i = 0; i < this.subtractions.length; i++) {\n          webgl.group.removeChild(this.subtractions[i], gl);\n        }\n      }\n\n      for (i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        webgl[child._renderer.type].render.call(child, gl, programs);\n      }\n\n      if (this._mask) {\n        gl.disable(gl.STENCIL_TEST);\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  path: {\n\n    updateCanvas: function(elem) {\n\n      var next, prev, a, c, ux, uy, vx, vy, ar, bl, br, cl, x, y;\n      var isOffset;\n\n      var commands = elem._renderer.vertices;\n      var canvas = this.canvas;\n      var ctx = this.ctx;\n\n      // Styles\n      var scale = elem._renderer.scale;\n      var stroke = elem._stroke;\n      var linewidth = elem._linewidth;\n      var fill = elem._fill;\n      var opacity = elem._renderer.opacity || elem._opacity;\n      var cap = elem._cap;\n      var join = elem._join;\n      var miter = elem._miter;\n      var closed = elem._closed;\n      var dashes = elem.dashes;\n      var length = commands.length;\n      var last = length - 1;\n\n      canvas.width = Math.max(Math.ceil(elem._renderer.rect.width * scale.x), 1);\n      canvas.height = Math.max(Math.ceil(elem._renderer.rect.height * scale.y), 1);\n\n      var centroid = elem._renderer.rect.centroid;\n      var cx = centroid.x;\n      var cy = centroid.y;\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      if (fill) {\n        if (typeof fill === 'string') {\n          ctx.fillStyle = fill;\n        } else {\n          webgl[fill._renderer.type].render.call(fill, ctx, elem);\n          ctx.fillStyle = fill._renderer.effect;\n        }\n      }\n      if (stroke) {\n        if (typeof stroke === 'string') {\n          ctx.strokeStyle = stroke;\n        } else {\n          webgl[stroke._renderer.type].render.call(stroke, ctx, elem);\n          ctx.strokeStyle = stroke._renderer.effect;\n        }\n        if (linewidth) {\n          ctx.lineWidth = linewidth;\n        }\n        if (miter) {\n          ctx.miterLimit = miter;\n        }\n        if (join) {\n          ctx.lineJoin = join;\n        }\n        if (!closed && cap) {\n          ctx.lineCap = cap;\n        }\n      }\n      if (typeof opacity === 'number') {\n        ctx.globalAlpha = opacity;\n      }\n\n      if (dashes && dashes.length > 0) {\n        ctx.lineDashOffset = dashes.offset || 0;\n        ctx.setLineDash(dashes);\n      }\n\n      var d;\n      ctx.save();\n      ctx.scale(scale.x, scale.y);\n\n      ctx.translate(cx, cy);\n\n      ctx.beginPath();\n      for (var i = 0; i < commands.length; i++) {\n\n        var b = commands[i];\n\n        x = b.x;\n        y = b.y;\n\n        switch (b.command) {\n\n          case Commands.close:\n            ctx.closePath();\n            break;\n\n          case Commands.arc:\n\n            var rx = b.rx;\n            var ry = b.ry;\n            var xAxisRotation = b.xAxisRotation;\n            var largeArcFlag = b.largeArcFlag;\n            var sweepFlag = b.sweepFlag;\n\n            prev = closed ? mod(i - 1, length) : Math.max(i - 1, 0);\n            a = commands[prev];\n\n            var ax = a.x;\n            var ay = a.y;\n\n            CanvasUtils.renderSvgArcCommand(ctx, ax, ay, rx, ry, largeArcFlag, sweepFlag, xAxisRotation, x, y);\n            break;\n\n          case Commands.curve:\n\n            prev = closed ? mod(i - 1, length) : Math.max(i - 1, 0);\n            next = closed ? mod(i + 1, length) : Math.min(i + 1, last);\n\n            a = commands[prev];\n            c = commands[next];\n            ar = (a.controls && a.controls.right) || Vector.zero;\n            bl = (b.controls && b.controls.left) || Vector.zero;\n\n            if (a._relative) {\n              vx = ar.x + a.x;\n              vy = ar.y + a.y;\n            } else {\n              vx = ar.x;\n              vy = ar.y;\n            }\n\n            if (b._relative) {\n              ux = bl.x + b.x;\n              uy = bl.y + b.y;\n            } else {\n              ux = bl.x;\n              uy = bl.y;\n            }\n\n            ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\n\n            if (i >= last && closed) {\n\n              c = d;\n\n              br = (b.controls && b.controls.right) || Vector.zero;\n              cl = (c.controls && c.controls.left) || Vector.zero;\n\n              if (b._relative) {\n                vx = br.x + b.x;\n                vy = br.y + b.y;\n              } else {\n                vx = br.x;\n                vy = br.y;\n              }\n\n              if (c._relative) {\n                ux = cl.x + c.x;\n                uy = cl.y + c.y;\n              } else {\n                ux = cl.x;\n                uy = cl.y;\n              }\n\n              x = c.x;\n              y = c.y;\n\n              ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\n\n            }\n\n            break;\n\n          case Commands.line:\n            ctx.lineTo(x, y);\n            break;\n\n          case Commands.move:\n            d = b;\n            ctx.moveTo(x, y);\n            break;\n\n        }\n\n      }\n\n      // Loose ends\n\n      if (closed) {\n        ctx.closePath();\n      }\n\n      if (!webgl.isHidden.test(fill)) {\n        isOffset = fill._renderer && fill._renderer.offset;\n        if (isOffset) {\n          ctx.save();\n          ctx.translate(\n            - fill._renderer.offset.x, - fill._renderer.offset.y);\n          ctx.scale(fill._renderer.scale.x, fill._renderer.scale.y);\n        }\n        ctx.fill();\n        if (isOffset) {\n          ctx.restore();\n        }\n      }\n\n      if (!webgl.isHidden.test(stroke)) {\n        isOffset = stroke._renderer && stroke._renderer.offset;\n        if (isOffset) {\n          ctx.save();\n          ctx.translate(\n            - stroke._renderer.offset.x, - stroke._renderer.offset.y);\n          ctx.scale(stroke._renderer.scale.x, stroke._renderer.scale.y);\n          ctx.lineWidth = linewidth / stroke._renderer.scale.x;\n        }\n        ctx.stroke();\n        if (isOffset) {\n          ctx.restore();\n        }\n      }\n\n      ctx.restore();\n\n    },\n\n    // Returns the rect of a set of verts. Typically takes vertices that are\n    // \"centered\" around 0 and returns them to be anchored upper-left.\n    getBoundingClientRect: function(vertices, border, rect) {\n\n      var left = Infinity, right = -Infinity,\n          top = Infinity, bottom = -Infinity,\n          width, height;\n\n      vertices.forEach(function(v) {\n\n        var x = v.x, y = v.y, controls = v.controls;\n        var a, b, c, d, cl, cr;\n\n        top = Math.min(y, top);\n        left = Math.min(x, left);\n        right = Math.max(x, right);\n        bottom = Math.max(y, bottom);\n\n        if (!v.controls) {\n          return;\n        }\n\n        cl = controls.left;\n        cr = controls.right;\n\n        if (!cl || !cr) {\n          return;\n        }\n\n        a = v._relative ? cl.x + x : cl.x;\n        b = v._relative ? cl.y + y : cl.y;\n        c = v._relative ? cr.x + x : cr.x;\n        d = v._relative ? cr.y + y : cr.y;\n\n        if (!a || !b || !c || !d) {\n          return;\n        }\n\n        top = Math.min(b, d, top);\n        left = Math.min(a, c, left);\n        right = Math.max(a, c, right);\n        bottom = Math.max(b, d, bottom);\n\n      });\n\n      // Expand borders\n\n      if (typeof border === 'number') {\n        top -= border;\n        left -= border;\n        right += border;\n        bottom += border;\n      }\n\n      width = right - left;\n      height = bottom - top;\n\n      rect.top = top;\n      rect.left = left;\n      rect.right = right;\n      rect.bottom = bottom;\n      rect.width = width;\n      rect.height = height;\n\n      if (!rect.centroid) {\n        rect.centroid = {};\n      }\n\n      rect.centroid.x = - left;\n      rect.centroid.y = - top;\n\n    },\n\n    render: function(gl, programs, forcedParent) {\n\n      if (!this._visible || !this._opacity) {\n        return this;\n      }\n\n      this._update();\n\n      // Calculate what changed\n\n      var parent = forcedParent || this.parent;\n      var program = programs[this._renderer.type];\n      var flagParentMatrix = parent._matrix.manual || parent._flagMatrix;\n      var flagMatrix = this._matrix.manual || this._flagMatrix;\n      var parentChanged = this._renderer.parent !== parent;\n      var flagTexture = this._flagVertices || this._flagFill\n        || (this._fill instanceof LinearGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagEndPoints))\n        || (this._fill instanceof RadialGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagRadius || this._fill._flagCenter || this._fill._flagFocal))\n        || (this._fill instanceof Texture && (this._fill._flagLoaded && this._fill.loaded || this._fill._flagImage || this._fill._flagVideo || this._fill._flagRepeat || this._fill._flagOffset || this._fill._flagScale))\n        || (this._stroke instanceof LinearGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagEndPoints))\n        || (this._stroke instanceof RadialGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagRadius || this._stroke._flagCenter || this._stroke._flagFocal))\n        || (this._stroke instanceof Texture && (this._stroke._flagLoaded && this._stroke.loaded || this._stroke._flagImage || this._stroke._flagVideo || this._stroke._flagRepeat || this._stroke._flagOffset || this._fill._flagScale))\n        || this._flagStroke || this._flagLinewidth || this._flagOpacity\n        || parent._flagOpacity || this._flagVisible || this._flagCap\n        || this._flagJoin || this._flagMiter || this._flagScale\n        || (this.dashes && this.dashes.length > 0)\n        || !this._renderer.texture;\n\n      if (flagParentMatrix || flagMatrix || parentChanged) {\n\n        if (!this._renderer.matrix) {\n          this._renderer.matrix = new NumArray(9);\n        }\n\n        // Reduce amount of object / array creation / deletion\n\n        this._matrix.toTransformArray(true, transformation);\n\n        multiplyMatrix(transformation, parent._renderer.matrix, this._renderer.matrix);\n\n        if (!(this._renderer.scale instanceof Vector)) {\n          this._renderer.scale = new Vector();\n        }\n        if (this._scale instanceof Vector) {\n          this._renderer.scale.x = this._scale.x * parent._renderer.scale.x;\n          this._renderer.scale.y = this._scale.y * parent._renderer.scale.y;\n        } else {\n          this._renderer.scale.x = this._scale * parent._renderer.scale.x;\n          this._renderer.scale.y = this._scale * parent._renderer.scale.y;\n        }\n\n        if (parentChanged) {\n          this._renderer.parent = parent;\n        }\n      }\n\n      if (this._mask) {\n\n        // Stencil away everything that isn't rendered by the mask\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        gl.enable(gl.STENCIL_TEST);\n\n        gl.stencilFunc(gl.ALWAYS, 1, 0);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n        // Don't draw the element onto the canvas, only onto the stencil buffer\n        gl.colorMask(false, false, false, false);\n\n        webgl[this._mask._renderer.type].render.call(this._mask, gl, programs, this);\n\n        gl.stencilFunc(gl.EQUAL, 1, 0xff);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n        gl.colorMask(true, true, true, true);\n\n      }\n\n      if (flagTexture) {\n\n        if (!this._renderer.rect) {\n          this._renderer.rect = {};\n        }\n\n        this._renderer.opacity = this._opacity * parent._renderer.opacity;\n\n        webgl.path.getBoundingClientRect(\n          this._renderer.vertices, this._linewidth, this._renderer.rect);\n\n        webgl.updateTexture.call(webgl, gl, this);\n\n      } else {\n\n        // We still need to update child Two elements on the fill and\n        // stroke properties.\n        if (this._fill && this._fill._update) {\n          this._fill._update();\n        }\n        if (this._stroke && this._stroke._update) {\n          this._stroke._update();\n        }\n\n      }\n\n      if (this._clip && !forcedParent || !this._renderer.texture) {\n        return this;\n      }\n\n      if (programs.current !== program) {\n\n        gl.useProgram(program);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, programs.buffers.position);\n        gl.vertexAttribPointer(program.position, 2, gl.FLOAT, false, 0, 0);\n        gl.enableVertexAttribArray(program.position);\n        gl.bufferData(gl.ARRAY_BUFFER, quad, gl.STATIC_DRAW);\n\n        if (!programs.resolution.flagged) {\n          gl.uniform2f(\n            gl.getUniformLocation(program, 'u_resolution'),\n            programs.resolution.width,\n            programs.resolution.height\n          );\n        }\n\n        programs.current = program;\n\n      }\n\n      if (programs.resolution.flagged) {\n        gl.uniform2f(\n          gl.getUniformLocation(program, 'u_resolution'),\n          programs.resolution.width,\n          programs.resolution.height\n        );\n      }\n\n      // Draw Texture\n      gl.bindTexture(gl.TEXTURE_2D, this._renderer.texture);\n\n      // Draw Rect\n      var rect = this._renderer.rect;\n      gl.uniformMatrix3fv(program.matrix, false, this._renderer.matrix);\n      gl.uniform4f(program.rect, rect.left, rect.top, rect.right, rect.bottom);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n      if (this._mask) {\n        gl.disable(gl.STENCIL_TEST);\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  points: {\n\n    // The canvas is a texture that is a rendering of one vertex\n    updateCanvas: function(elem) {\n\n      var isOffset;\n\n      var canvas = this.canvas;\n      var ctx = this.ctx;\n\n      // Styles\n      var stroke = elem._stroke;\n      var linewidth = elem._linewidth;\n      var fill = elem._fill;\n      var opacity = elem._renderer.opacity || elem._opacity;\n      var dashes = elem.dashes;\n      var size = elem._size;\n      var dimension = size;\n\n      if (!(webgl.isHidden.test(stroke))) {\n        dimension += linewidth;\n      }\n\n      canvas.width = getPoT(dimension);\n      canvas.height = canvas.width;\n\n      var aspect = dimension / canvas.width;\n\n      var cx = canvas.width / 2;\n      var cy = canvas.height / 2;\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      if (fill) {\n        if (typeof fill === 'string') {\n          ctx.fillStyle = fill;\n        } else {\n          webgl[fill._renderer.type].render.call(fill, ctx, elem);\n          ctx.fillStyle = fill._renderer.effect;\n        }\n      }\n      if (stroke) {\n        if (typeof stroke === 'string') {\n          ctx.strokeStyle = stroke;\n        } else {\n          webgl[stroke._renderer.type].render.call(stroke, ctx, elem);\n          ctx.strokeStyle = stroke._renderer.effect;\n        }\n        if (linewidth) {\n          ctx.lineWidth = linewidth / aspect;\n        }\n      }\n      if (typeof opacity === 'number') {\n        ctx.globalAlpha = opacity;\n      }\n\n      if (dashes && dashes.length > 0) {\n        ctx.lineDashOffset = dashes.offset || 0;\n        ctx.setLineDash(dashes);\n      }\n\n      ctx.save();\n      ctx.translate(cx, cy);\n      ctx.scale(webgl.precision, webgl.precision); // Precision for even rendering\n      ctx.beginPath();\n      ctx.arc(0, 0, (size / aspect) * 0.5, 0, TWO_PI);\n      ctx.restore();\n\n      // Loose ends\n\n      if (closed) {\n        ctx.closePath();\n      }\n\n      if (!webgl.isHidden.test(fill)) {\n        isOffset = fill._renderer && fill._renderer.offset;\n        if (isOffset) {\n          ctx.save();\n          ctx.translate(\n            - fill._renderer.offset.x, - fill._renderer.offset.y);\n          ctx.scale(fill._renderer.scale.x, fill._renderer.scale.y);\n        }\n        ctx.fill();\n        if (isOffset) {\n          ctx.restore();\n        }\n      }\n\n      if (!webgl.isHidden.test(stroke)) {\n        isOffset = stroke._renderer && stroke._renderer.offset;\n        if (isOffset) {\n          ctx.save();\n          ctx.translate(\n            - stroke._renderer.offset.x, - stroke._renderer.offset.y);\n          ctx.scale(stroke._renderer.scale.x, stroke._renderer.scale.y);\n          ctx.lineWidth = linewidth / stroke._renderer.scale.x;\n        }\n        ctx.stroke();\n        if (isOffset) {\n          ctx.restore();\n        }\n      }\n\n    },\n\n    render: function(gl, programs, forcedParent) {\n\n      if (!this._visible || !this._opacity) {\n        return this;\n      }\n\n      this._update();\n\n      // Calculate what changed\n\n      var parent = forcedParent || this.parent;\n      var program = programs[this._renderer.type];\n      var size = this._size;\n      var sizeAttenuation = this._sizeAttenuation;\n      var stroke = this._stroke;\n      var linewidth = this._linewidth;\n      var flagParentMatrix = parent._matrix.manual || parent._flagMatrix;\n      var flagMatrix = this._matrix.manual || this._flagMatrix;\n      var parentChanged = this._renderer.parent !== parent;\n      var commands = this._renderer.vertices;\n      var length = this._renderer.collection.length;\n      var flagVertices = this._flagVertices;\n      var flagTexture = this._flagFill\n        || (this._fill instanceof LinearGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagEndPoints))\n        || (this._fill instanceof RadialGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagRadius || this._fill._flagCenter || this._fill._flagFocal))\n        || (this._fill instanceof Texture && (this._fill._flagLoaded && this._fill.loaded || this._fill._flagImage || this._fill._flagVideo || this._fill._flagRepeat || this._fill._flagOffset || this._fill._flagScale))\n        || (this._stroke instanceof LinearGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagEndPoints))\n        || (this._stroke instanceof RadialGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagRadius || this._stroke._flagCenter || this._stroke._flagFocal))\n        || (this._stroke instanceof Texture && (this._stroke._flagLoaded && this._stroke.loaded || this._stroke._flagImage || this._stroke._flagVideo || this._stroke._flagRepeat || this._stroke._flagOffset || this._fill._flagScale))\n        || this._flagStroke || this._flagLinewidth || this._flagOpacity\n        || parent._flagOpacity || this._flagVisible || this._flagScale\n        || (this.dashes && this.dashes.length > 0)\n        || !this._renderer.texture;\n\n      if (flagParentMatrix || flagMatrix || parentChanged) {\n\n        if (!this._renderer.matrix) {\n          this._renderer.matrix = new NumArray(9);\n        }\n\n        // Reduce amount of object / array creation / deletion\n\n        this._matrix.toTransformArray(true, transformation);\n\n        multiplyMatrix(transformation, parent._renderer.matrix, this._renderer.matrix);\n\n        if (!(this._renderer.scale instanceof Vector)) {\n          this._renderer.scale = new Vector();\n        }\n        if (this._scale instanceof Vector) {\n          this._renderer.scale.x = this._scale.x * parent._renderer.scale.x;\n          this._renderer.scale.y = this._scale.y * parent._renderer.scale.y;\n        } else {\n          this._renderer.scale.x = this._scale * parent._renderer.scale.x;\n          this._renderer.scale.y = this._scale * parent._renderer.scale.y;\n        }\n\n        if (parentChanged) {\n          this._renderer.parent = parent;\n        }\n\n      }\n\n      if (flagVertices) {\n\n        var positionBuffer = this._renderer.positionBuffer;\n        if (positionBuffer) {\n          gl.deleteBuffer(positionBuffer);\n        }\n\n        // Bind the vertex buffer\n        this._renderer.positionBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._renderer.positionBuffer);\n        gl.vertexAttribPointer(program.position, 2, gl.FLOAT, false, 0, 0);\n        gl.enableVertexAttribArray(program.position);\n        gl.bufferData(gl.ARRAY_BUFFER, commands, gl.STATIC_DRAW);\n\n      }\n\n      if (flagTexture) {\n\n        this._renderer.opacity = this._opacity * parent._renderer.opacity;\n\n        webgl.updateTexture.call(webgl, gl, this);\n\n      } else {\n\n        // We still need to update child Two elements on the fill and\n        // stroke properties.\n        if (this._fill && this._fill._update) {\n          this._fill._update();\n        }\n        if (this._stroke && this._stroke._update) {\n          this._stroke._update();\n        }\n\n      }\n\n      if (this._clip && !forcedParent || !this._renderer.texture) {\n        return this;\n      }\n\n      if (!webgl.isHidden.test(stroke)) {\n        size += linewidth;\n      }\n      size /= webgl.precision;\n      if (sizeAttenuation) {\n        size *= Math.max(this._renderer.scale.x, this._renderer.scale.y);\n      }\n\n      if (programs.current !== program) {\n        gl.useProgram(program);\n        if (!programs.resolution.flagged) {\n          gl.uniform2f(\n            gl.getUniformLocation(program, 'u_resolution'),\n            programs.resolution.width,\n            programs.resolution.height\n          );\n        }\n        programs.current = program;\n      }\n\n      if (programs.resolution.flagged) {\n        gl.uniform2f(\n          gl.getUniformLocation(program, 'u_resolution'),\n          programs.resolution.width,\n          programs.resolution.height\n        );\n      }\n\n      // Draw Texture\n      gl.bindTexture(gl.TEXTURE_2D, this._renderer.texture);\n\n      // Draw Points\n      gl.uniformMatrix3fv(program.matrix, false, this._renderer.matrix);\n      gl.uniform1f(program.size, size * programs.resolution.ratio);\n      gl.drawArrays(gl.POINTS, 0, length);\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  text: {\n\n    updateCanvas: function(elem) {\n\n      var canvas = this.canvas;\n      var ctx = this.ctx;\n\n      // Styles\n      var scale = elem._renderer.scale;\n      var stroke = elem._stroke;\n      var linewidth = elem._linewidth * scale;\n      var fill = elem._fill;\n      var opacity = elem._renderer.opacity || elem._opacity;\n      var dashes = elem.dashes;\n      var decoration = elem._decoration;\n\n      canvas.width = Math.max(Math.ceil(elem._renderer.rect.width * scale.x), 1);\n      canvas.height = Math.max(Math.ceil(elem._renderer.rect.height * scale.y), 1);\n\n      var centroid = elem._renderer.rect.centroid;\n      var cx = centroid.x;\n      var cy = centroid.y;\n\n      var a, b, c, d, e, sx, sy, x1, y1, x2, y2;\n      var isOffset = fill._renderer && fill._renderer.offset\n        && stroke._renderer && stroke._renderer.offset;\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      if (!isOffset) {\n        ctx.font = [elem._style, elem._weight, elem._size + 'px/' +\n          elem._leading + 'px', elem._family].join(' ');\n      }\n\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n\n      // Styles\n      if (fill) {\n        if (typeof fill === 'string') {\n          ctx.fillStyle = fill;\n        } else {\n          webgl[fill._renderer.type].render.call(fill, ctx, elem);\n          ctx.fillStyle = fill._renderer.effect;\n        }\n      }\n      if (stroke) {\n        if (typeof stroke === 'string') {\n          ctx.strokeStyle = stroke;\n        } else {\n          webgl[stroke._renderer.type].render.call(stroke, ctx, elem);\n          ctx.strokeStyle = stroke._renderer.effect;\n        }\n        if (linewidth) {\n          ctx.lineWidth = linewidth;\n        }\n      }\n      if (typeof opacity === 'number') {\n        ctx.globalAlpha = opacity;\n      }\n      if (dashes && dashes.length > 0) {\n        ctx.lineDashOffset = dashes.offset || 0;\n        ctx.setLineDash(dashes);\n      }\n\n      ctx.save();\n      ctx.scale(scale.x, scale.y);\n      ctx.translate(cx, cy);\n\n      if (!webgl.isHidden.test(fill)) {\n\n        if (fill._renderer && fill._renderer.offset) {\n\n          sx = fill._renderer.scale.x;\n          sy = fill._renderer.scale.y;\n\n          ctx.save();\n          ctx.translate( - fill._renderer.offset.x,\n            - fill._renderer.offset.y);\n          ctx.scale(sx, sy);\n\n          a = elem._size / fill._renderer.scale.y;\n          b = elem._leading / fill._renderer.scale.y;\n          ctx.font = [elem._style, elem._weight, a + 'px/',\n            b + 'px', elem._family].join(' ');\n\n          c = fill._renderer.offset.x / fill._renderer.scale.x;\n          d = fill._renderer.offset.y / fill._renderer.scale.y;\n\n          ctx.fillText(elem.value, c, d);\n          ctx.restore();\n\n        } else {\n          ctx.fillText(elem.value, 0, 0);\n        }\n\n      }\n\n      if (!webgl.isHidden.test(stroke)) {\n\n        if (stroke._renderer && stroke._renderer.offset) {\n\n          sx = stroke._renderer.scale.x;\n          sy = stroke._renderer.scale.y;\n\n          ctx.save();\n          ctx.translate(- stroke._renderer.offset.x,\n            - stroke._renderer.offset.y);\n          ctx.scale(sx, sy);\n\n          a = elem._size / stroke._renderer.scale.y;\n          b = elem._leading / stroke._renderer.scale.y;\n          ctx.font = [elem._style, elem._weight, a + 'px/',\n            b + 'px', elem._family].join(' ');\n\n          c = stroke._renderer.offset.x / stroke._renderer.scale.x;\n          d = stroke._renderer.offset.y / stroke._renderer.scale.y;\n          e = linewidth / stroke._renderer.scale.x;\n\n          ctx.lineWidth = e;\n          ctx.strokeText(elem.value, c, d);\n          ctx.restore();\n\n        } else {\n          ctx.strokeText(elem.value, 0, 0);\n        }\n\n      }\n\n      // Handle text-decoration\n      if (/(underline|strikethrough)/i.test(decoration)) {\n\n        var metrics = ctx.measureText(elem.value);\n\n        switch (decoration) {\n          case 'underline':\n            y1 = metrics.actualBoundingBoxAscent;\n            y2 = metrics.actualBoundingBoxAscent;\n            break;\n          case 'strikethrough':\n            y1 = 0;\n            y2 = 0;\n            break;\n        }\n\n        x1 = - metrics.width / 2;\n        x2 = metrics.width / 2;\n\n        ctx.lineWidth = Math.max(Math.floor(elem._size / 15), 1);\n        ctx.strokeStyle = ctx.fillStyle;\n\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n\n      }\n\n      ctx.restore();\n\n    },\n\n    getBoundingClientRect: function(elem, rect) {\n\n      var ctx = webgl.ctx;\n\n      ctx.font = [elem._style, elem._weight, elem._size + 'px/' +\n        elem._leading + 'px', elem._family].join(' ');\n\n      ctx.textAlign = 'center';\n      ctx.textBaseline = elem._baseline;\n\n      // TODO: Estimate this better\n      var width = ctx.measureText(elem._value).width * 1.25;\n      var height = Math.max(elem._size, elem._leading) * 1.25;\n\n      if (this._linewidth && !webgl.isHidden.test(this._stroke)) {\n        width += this._linewidth * 2;\n        height += this._linewidth * 2;\n      }\n\n      var w = width / 2;\n      var h = height / 2;\n\n      switch (webgl.alignments[elem._alignment] || elem._alignment) {\n\n        case webgl.alignments.left:\n          rect.left = 0;\n          rect.right = width;\n          break;\n        case webgl.alignments.right:\n          rect.left = - width;\n          rect.right = 0;\n          break;\n        default:\n          rect.left = - w;\n          rect.right = w;\n      }\n\n      // TODO: Gradients aren't inherited...\n      switch (elem._baseline) {\n        case 'bottom':\n          rect.top = - height;\n          rect.bottom = 0;\n          break;\n        case 'top':\n          rect.top = 0;\n          rect.bottom = height;\n          break;\n        default:\n          rect.top = - h;\n          rect.bottom = h;\n      }\n\n      rect.width = width;\n      rect.height = height;\n\n      if (!rect.centroid) {\n        rect.centroid = {};\n      }\n\n      // TODO:\n      rect.centroid.x = w;\n      rect.centroid.y = h;\n\n    },\n\n    render: function(gl, programs, forcedParent) {\n\n      if (!this._visible || !this._opacity) {\n        return this;\n      }\n\n      this._update();\n\n      // Calculate what changed\n\n      var parent = forcedParent || this.parent;\n      var program = programs[this._renderer.type];\n      var flagParentMatrix = parent._matrix.manual || parent._flagMatrix;\n      var flagMatrix = this._matrix.manual || this._flagMatrix;\n      var parentChanged = this._renderer.parent !== parent;\n      var flagTexture = this._flagVertices || this._flagFill\n        || (this._fill instanceof LinearGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagEndPoints))\n        || (this._fill instanceof RadialGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagRadius || this._fill._flagCenter || this._fill._flagFocal))\n        || (this._fill instanceof Texture && (this._fill._flagLoaded && this._fill.loaded || this._fill._flagImage || this._fill._flagVideo || this._fill._flagRepeat || this._fill._flagOffset || this._fill._flagScale))\n        || (this._stroke instanceof LinearGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagEndPoints))\n        || (this._stroke instanceof RadialGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagRadius || this._stroke._flagCenter || this._stroke._flagFocal))\n        || (this._stroke instanceof Texture && (this._stroke._flagLoaded && this._stroke.loaded || this._stroke._flagImage || this._stroke._flagVideo || this._stroke._flagRepeat || this._stroke._flagOffset || this._fill._flagScale))\n        || this._flagStroke || this._flagLinewidth || this._flagOpacity\n        || parent._flagOpacity || this._flagVisible || this._flagScale\n        || this._flagValue || this._flagFamily || this._flagSize\n        || this._flagLeading || this._flagAlignment || this._flagBaseline\n        || this._flagStyle || this._flagWeight || this._flagDecoration\n        || (this.dashes && this.dashes.length > 0)\n        || !this._renderer.texture;\n\n      if (flagParentMatrix || flagMatrix || parentChanged) {\n\n        if (!this._renderer.matrix) {\n          this._renderer.matrix = new NumArray(9);\n        }\n\n        // Reduce amount of object / array creation / deletion\n\n        this._matrix.toTransformArray(true, transformation);\n\n        multiplyMatrix(transformation, parent._renderer.matrix, this._renderer.matrix);\n\n        if (!(this._renderer.scale instanceof Vector)) {\n          this._renderer.scale = new Vector();\n        }\n        if (this._scale instanceof Vector) {\n          this._renderer.scale.x = this._scale.x * parent._renderer.scale.x;\n          this._renderer.scale.y = this._scale.y * parent._renderer.scale.y;\n        } else {\n          this._renderer.scale.x = this._scale * parent._renderer.scale.x;\n          this._renderer.scale.y = this._scale * parent._renderer.scale.y;\n        }\n\n        if (parentChanged) {\n          this._renderer.parent = parent;\n        }\n      }\n\n      if (this._mask) {\n\n        // Stencil away everything that isn't rendered by the mask\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        gl.enable(gl.STENCIL_TEST);\n\n        gl.stencilFunc(gl.ALWAYS, 1, 0);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n        // Don't draw the element onto the canvas, only onto the stencil buffer\n        gl.colorMask(false, false, false, false);\n\n        webgl[this._mask._renderer.type].render.call(this._mask, gl, programs, this);\n\n        gl.stencilFunc(gl.EQUAL, 1, 0xff);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n        gl.colorMask(true, true, true, true);\n\n      }\n\n      if (flagTexture) {\n\n        if (!this._renderer.rect) {\n          this._renderer.rect = {};\n        }\n\n        this._renderer.opacity = this._opacity * parent._renderer.opacity;\n\n        webgl.text.getBoundingClientRect(this, this._renderer.rect);\n\n        webgl.updateTexture.call(webgl, gl, this);\n\n      } else {\n\n        // We still need to update child Two elements on the fill and\n        // stroke properties.\n        if (this._fill && this._fill._update) {\n          this._fill._update();\n        }\n        if (this._stroke && this._stroke._update) {\n          this._stroke._update();\n        }\n\n      }\n\n      if (this._clip && !forcedParent || !this._renderer.texture) {\n        return this;\n      }\n\n      if (programs.current !== program) {\n\n        gl.useProgram(program);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, programs.buffers.position);\n        gl.vertexAttribPointer(program.position, 2, gl.FLOAT, false, 0, 0);\n        gl.enableVertexAttribArray(program.position);\n        gl.bufferData(gl.ARRAY_BUFFER, quad, gl.STATIC_DRAW);\n\n        if (!programs.resolution.flagged) {\n          gl.uniform2f(\n            gl.getUniformLocation(program, 'u_resolution'),\n            programs.resolution.width,\n            programs.resolution.height\n          );\n        }\n\n        programs.current = program;\n\n      }\n\n      if (programs.resolution.flagged) {\n        gl.uniform2f(\n          gl.getUniformLocation(program, 'u_resolution'),\n          programs.resolution.width,\n          programs.resolution.height\n        );\n      }\n\n      // Draw Texture\n      gl.bindTexture(gl.TEXTURE_2D, this._renderer.texture);\n\n      // Draw Rect\n      var rect = this._renderer.rect;\n      gl.uniformMatrix3fv(program.matrix, false, this._renderer.matrix);\n      gl.uniform4f(program.rect, rect.left, rect.top, rect.right, rect.bottom);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n      if (this._mask) {\n        gl.disable(gl.STENCIL_TEST);\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  'linear-gradient': {\n\n    render: function(ctx, elem) {\n\n      if (!ctx.canvas.getContext('2d')) {\n        return;\n      }\n\n      this._update();\n\n      if (!this._renderer.effect || this._flagEndPoints || this._flagStops) {\n\n        this._renderer.effect = ctx.createLinearGradient(\n          this.left._x, this.left._y,\n          this.right._x, this.right._y\n        );\n\n        for (var i = 0; i < this.stops.length; i++) {\n          var stop = this.stops[i];\n          this._renderer.effect.addColorStop(stop._offset, stop._color);\n        }\n\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  'radial-gradient': {\n\n    render: function(ctx, elem) {\n\n      if (!ctx.canvas.getContext('2d')) {\n        return;\n      }\n\n      this._update();\n\n      if (!this._renderer.effect || this._flagCenter || this._flagFocal\n          || this._flagRadius || this._flagStops) {\n\n        this._renderer.effect = ctx.createRadialGradient(\n          this.center._x, this.center._y, 0,\n          this.focal._x, this.focal._y, this._radius\n        );\n\n        for (var i = 0; i < this.stops.length; i++) {\n          var stop = this.stops[i];\n          this._renderer.effect.addColorStop(stop._offset, stop._color);\n        }\n\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  texture: {\n\n    render: function(ctx, elem) {\n\n      if (!ctx.canvas.getContext('2d')) {\n        return;\n      }\n\n      this._update();\n\n      var image = this.image;\n\n      if (((this._flagLoaded || this._flagImage || this._flagVideo || this._flagRepeat) && this.loaded)) {\n        this._renderer.effect = ctx.createPattern(image, this._repeat);\n      } else if (!this._renderer.effect) {\n        return this.flagReset();\n      }\n\n      if (this._flagOffset || this._flagLoaded || this._flagScale) {\n\n        if (!(this._renderer.offset instanceof Vector)) {\n          this._renderer.offset = new Vector();\n        }\n\n        this._renderer.offset.x = - this._offset.x;\n        this._renderer.offset.y = - this._offset.y;\n\n        if (image) {\n\n          this._renderer.offset.x += image.width / 2;\n          this._renderer.offset.y += image.height / 2;\n\n          if (this._scale instanceof Vector) {\n            this._renderer.offset.x *= this._scale.x;\n            this._renderer.offset.y *= this._scale.y;\n          } else {\n            this._renderer.offset.x *= this._scale;\n            this._renderer.offset.y *= this._scale;\n          }\n        }\n\n      }\n\n      if (this._flagScale || this._flagLoaded) {\n\n        if (!(this._renderer.scale instanceof Vector)) {\n          this._renderer.scale = new Vector();\n        }\n\n        if (this._scale instanceof Vector) {\n          this._renderer.scale.copy(this._scale);\n        } else {\n          this._renderer.scale.set(this._scale, this._scale);\n        }\n\n      }\n\n      return this.flagReset();\n\n    }\n\n  },\n\n  updateTexture: function(gl, elem) {\n\n    this[elem._renderer.type].updateCanvas.call(webgl, elem);\n\n    if (this.canvas.width <= 0 || this.canvas.height <= 0) {\n      if (elem._renderer.texture) {\n        gl.deleteTexture(elem._renderer.texture);\n      }\n      delete elem._renderer.texture;\n      return;\n    }\n\n    if (!elem._renderer.texture) {\n      elem._renderer.texture = gl.createTexture();\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, elem._renderer.texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.canvas);\n\n  },\n\n  program: {\n\n    create: function(gl, shaders) {\n      var program, linked, error;\n      program = gl.createProgram();\n      _.each(shaders, function(s) {\n        gl.attachShader(program, s);\n      });\n\n      gl.linkProgram(program);\n      linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n      if (!linked) {\n        error = gl.getProgramInfoLog(program);\n        gl.deleteProgram(program);\n        throw new TwoError('unable to link program: ' + error);\n      }\n\n      return program;\n\n    }\n\n  },\n\n  TextureRegistry: new Registry()\n\n};\n\nwebgl.ctx = webgl.canvas.getContext('2d');\n\n/**\n * @name Two.WebGLRenderer\n * @class\n * @extends Two.Events\n * @param {Object} [parameters] - This object is inherited when constructing a new instance of {@link Two}.\n * @param {Element} [parameters.domElement] - The `<canvas />` to draw to. If none given a new one will be constructed.\n * @param {HTMLCanvasElement} [parameters.offscreenElement] - The offscreen two dimensional `<canvas />` to render each element on WebGL texture updates.\n * @param {Boolean} [parameters.antialias] - Determines whether the canvas should clear render with antialias on.\n * @description This class is used by {@link Two} when constructing with `type` of `Two.Types.webgl`. It takes Two.js' scenegraph and renders it to a `<canvas />` through the WebGL api.\n * @see {@link https://www.khronos.org/registry/webgl/specs/latest/1.0/}\n */\nfunction Renderer(params) {\n\n  var gl, program, vs, fs;\n\n  /**\n   * @name Two.WebGLRenderer#domElement\n   * @property {Element} - The `<canvas />` associated with the Two.js scene.\n   */\n  this.domElement = params.domElement || document.createElement('canvas');\n\n  if (typeof params.offscreenElement !== 'undefined') {\n    webgl.canvas = params.offscreenElement;\n    webgl.ctx = webgl.canvas.getContext('2d');\n  }\n\n  /**\n   * @name Two.WebGLRenderer#scene\n   * @property {Two.Group} - The root group of the scenegraph.\n   */\n  this.scene = new Group();\n  this.scene.parent = this;\n\n  this._renderer = {\n    type: 'renderer',\n    matrix: new NumArray(identity),\n    scale: 1,\n    opacity: 1\n  };\n  this._flagMatrix = true;\n\n  // http://games.greggman.com/game/webgl-and-alpha/\n  // http://www.khronos.org/registry/webgl/specs/latest/#5.2\n  params = _.defaults(params || {}, {\n    antialias: false,\n    alpha: true,\n    premultipliedAlpha: true,\n    stencil: true,\n    preserveDrawingBuffer: true,\n    overdraw: false\n  });\n\n  /**\n   * @name Two.WebGLRenderer#overdraw\n   * @property {Boolean} - Determines whether the canvas clears the background each draw call.\n   * @default true\n   */\n  this.overdraw = params.overdraw;\n\n  /**\n   * @name Two.WebGLRenderer#ctx\n   * @property {WebGLContext} - Associated two dimensional context to render on the `<canvas />`.\n   */\n  gl = this.ctx = this.domElement.getContext('webgl', params) ||\n    this.domElement.getContext('experimental-webgl', params);\n\n  if (!this.ctx) {\n    throw new TwoError(\n      'unable to create a webgl context. Try using another renderer.');\n  }\n\n  // Compile Base Shaders to draw in pixel space.\n  vs = shaders.create(gl, shaders.path.vertex, shaders.types.vertex);\n  fs = shaders.create(gl, shaders.path.fragment, shaders.types.fragment);\n\n  /**\n   * @name Two.WebGLRenderer#programs\n   * @property {Object} - Associated WebGL programs to render all elements from the scenegraph.\n   */\n  this.programs = {\n    current: null,\n    buffers: {\n      position: gl.createBuffer()\n    },\n    resolution: {\n      width: 0,\n      height: 0,\n      ratio: 1,\n      flagged: false\n    }\n  };\n\n  program = this.programs.path = webgl.program.create(gl, [vs, fs]);\n  this.programs.text = this.programs.path;\n\n  // Create and bind the drawing buffer\n\n  // look up where the vertex data needs to go.\n  program.position = gl.getAttribLocation(program, 'a_position');\n  program.matrix = gl.getUniformLocation(program, 'u_matrix');\n  program.rect = gl.getUniformLocation(program, 'u_rect');\n\n  // Bind the vertex buffer\n  var positionBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n  gl.vertexAttribPointer(program.position, 2, gl.FLOAT, false, 0, 0);\n  gl.enableVertexAttribArray(program.position);\n  gl.bufferData(gl.ARRAY_BUFFER, quad, gl.STATIC_DRAW);\n\n  // Compile Base Shaders to draw in pixel space.\n  vs = shaders.create(gl, shaders.points.vertex, shaders.types.vertex);\n  fs = shaders.create(gl, shaders.points.fragment, shaders.types.fragment);\n\n  program = this.programs.points = webgl.program.create(gl, [vs, fs]);\n\n  // Create and bind the drawing buffer\n\n  // look up where the vertex data needs to go.\n  program.position = gl.getAttribLocation(program, 'a_position');\n  program.matrix = gl.getUniformLocation(program, 'u_matrix');\n  program.size = gl.getUniformLocation(program, 'u_size');\n\n  // Setup some initial statements of the gl context\n  gl.enable(gl.BLEND);\n\n  gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n  gl.blendEquation(gl.FUNC_ADD);\n  gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n}\n\n_.extend(Renderer, {\n\n  /**\n   * @name Two.WebGLRenderer.Utils\n   * @property {Object} - A massive object filled with utility functions and properties to render Two.js objects to a `<canvas />` through the WebGL API.\n   */\n  Utils: webgl\n\n});\n\n_.extend(Renderer.prototype, Events, {\n\n  constructor: Renderer,\n\n  /**\n   * @name Two.WebGLRenderer#setSize\n   * @function\n   * @fires resize\n   * @param {Number} width - The new width of the renderer.\n   * @param {Number} height - The new height of the renderer.\n   * @param {Number} [ratio] - The new pixel ratio (pixel density) of the renderer. Defaults to calculate the pixel density of the user's screen.\n   * @description Change the size of the renderer.\n   */\n  setSize: function(width, height, ratio) {\n\n    var w, h;\n    var ctx = this.ctx;\n\n    this.width = width;\n    this.height = height;\n\n    this.ratio = typeof ratio === 'undefined' ? getRatio(ctx) : ratio;\n\n    this.domElement.width = width * this.ratio;\n    this.domElement.height = height * this.ratio;\n\n    if (_.isObject(this.domElement.style)) {\n      _.extend(this.domElement.style, {\n        width: width + 'px',\n        height: height + 'px'\n      });\n    }\n\n    // Set for this.stage parent scaling to account for HDPI\n    this._renderer.matrix[0] = this._renderer.matrix[4] = this._renderer.scale = this.ratio;\n\n    this._flagMatrix = true;\n\n    w = width * this.ratio;\n    h = height * this.ratio;\n\n    ctx.viewport(0, 0, w, h);\n\n    this.programs.resolution.width = w;\n    this.programs.resolution.height = h;\n    this.programs.resolution.ratio = this.ratio;\n    this.programs.resolution.flagged = true;\n\n    return this.trigger(Events.Types.resize, width, height, ratio);\n\n  },\n\n  /**\n   * @name Two.WebGLRenderer#render\n   * @function\n   * @description Render the current scene to the `<canvas />`.\n   */\n  render: function() {\n\n    var gl = this.ctx;\n\n    if (!this.overdraw) {\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n\n    webgl.group.render.call(this.scene, gl, this.programs);\n    this._flagMatrix = false;\n    this.programs.resolution.flagged = true;\n\n    return this;\n\n  }\n\n});\n\n// Utils\n\n/**\n * @name Two\n * @class\n * @global\n * @param {Object} [options]\n * @param {Boolean} [options.fullscreen=false] - Set to `true` to automatically make the stage adapt to the width and height of the parent document. This parameter overrides `width` and `height` parameters if set to `true`. This overrides `options.fitted` as well.\n * @param {Boolean} [options.fitted=false] = Set to `true` to automatically make the stage adapt to the width and height of the parent element. This parameter overrides `width` and `height` parameters if set to `true`.\n * @param {Number} [options.width=640] - The width of the stage on construction. This can be set at a later time.\n * @param {Number} [options.height=480] - The height of the stage on construction. This can be set at a later time.\n * @param {String} [options.type=Two.Types.svg] - The type of renderer to setup drawing with. See {@link Two.Types} for available options.\n * @param {Boolean} [options.autostart=false] - Set to `true` to add the instance to draw on `requestAnimationFrame`. This is a convenient substitute for {@link Two#play}.\n * @param {Element} [options.domElement] - The canvas or SVG element to draw into. This overrides the `options.type` argument.\n * @description The entrypoint for Two.js. Instantiate a `new Two` in order to setup a scene to render to. `Two` is also the publicly accessible namespace that all other sub-classes, functions, and utilities attach to.\n */\nfunction Two(options) {\n\n  // Determine what Renderer to use and setup a scene.\n\n  var params = _.defaults(options || {}, {\n    fullscreen: false,\n    fitted: false,\n    width: 640,\n    height: 480,\n    type: Two.Types.svg,\n    autostart: false\n  });\n\n  _.each(params, function(v, k) {\n    if (/fullscreen/i.test(k) || /autostart/i.test(k)) {\n      return;\n    }\n    this[k] = v;\n  }, this);\n\n  // Specified domElement overrides type declaration only if the element does not support declared renderer type.\n  if (_.isElement(params.domElement)) {\n    var tagName = params.domElement.tagName.toLowerCase();\n    // TODO: Reconsider this if statement's logic.\n    if (!/^(CanvasRenderer-canvas|WebGLRenderer-canvas|SVGRenderer-svg)$/.test(this.type+'-'+tagName)) {\n      this.type = Two.Types[tagName];\n    }\n  }\n\n  this.renderer = new Two[this.type](this);\n  this.setPlaying(params.autostart);\n  this.frameCount = 0;\n\n  /**\n   * @name Two#fit\n   * @function\n   * @description If `options.fullscreen` or `options.fitted` in construction create this function. It sets the `width` and `height` of the instance to its respective parent `window` or `element` depending on the `options` passed.\n   */\n  if (params.fullscreen) {\n\n    this.fit = fitToWindow.bind(this);\n    this.fit.domElement = window;\n    this.fit.attached = true;\n    _.extend(document.body.style, {\n      overflow: 'hidden',\n      margin: 0,\n      padding: 0,\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      position: 'fixed'\n    });\n    _.extend(this.renderer.domElement.style, {\n      display: 'block',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      position: 'fixed'\n    });\n    dom.bind(this.fit.domElement, 'resize', this.fit);\n    this.fit();\n\n  } else if (params.fitted) {\n\n    this.fit = fitToParent.bind(this);\n    _.extend(this.renderer.domElement.style, {\n      display: 'block'\n    });\n\n  } else if (!_.isElement(params.domElement)) {\n\n    this.renderer.setSize(params.width, params.height, this.ratio);\n    this.width = params.width;\n    this.height = params.height;\n\n  }\n\n  this.renderer.bind(Events.Types.resize, updateDimensions.bind(this));\n  this.scene = this.renderer.scene;\n\n  Two.Instances.push(this);\n  if (params.autostart) {\n    raf.init();\n  }\n\n}\n\n_.extend(Two, Constants);\n\n_.extend(Two.prototype, Events, {\n\n  constructor: Two,\n\n  /**\n   * @name Two#type\n   * @property {String} - A string representing which type of renderer the instance has instantiated.\n   */\n  type: '',\n\n  /**\n   * @name Two#renderer\n   * @property {(Two.SVGRenderer|Two.CanvasRenderer|Two.WebGLRenderer)} - The instantiated rendering class for the instance. For a list of possible rendering types check out Two.Types.\n   */\n  renderer: null,\n\n  /**\n   * @name Two#scene\n   * @property {Two.Group} - The base level {@link Two.Group} which houses all objects for the instance. Because it is a {@link Two.Group} transformations can be applied to it that will affect all objects in the instance. This is handy as a makeshift inverted camera.\n   */\n  scene: null,\n\n  /**\n   * @name Two#width\n   * @property {Number} - The width of the instance's dom element.\n   */\n  width: 0,\n\n  /**\n   * @name Two#height\n   * @property {Number} - The height of the instance's dom element.\n   */\n  height: 0,\n\n  /**\n   * @name Two#frameCount\n   * @property {Number} - An integer representing how many frames have elapsed.\n   */\n  frameCount: 0,\n\n  /**\n   * @name Two#timeDelta\n   * @property {Number} - A number representing how much time has elapsed since the last frame in milliseconds.\n   */\n  timeDelta: 0,\n\n  /**\n   * @name Two#playing\n   * @property {Boolean} - A boolean representing whether or not the instance is being updated through the automatic `requestAnimationFrame`.\n   */\n  playing: false,\n\n  /**\n   * @name Two#appendTo\n   * @function\n   * @param {Element} elem - The DOM element to append the Two.js stage to.\n   * @description Shorthand method to append your instance of Two.js to the `document`.\n   */\n  appendTo: function(elem) {\n\n    elem.appendChild(this.renderer.domElement);\n\n    if (this.fit) {\n      if (this.fit.domElement !== window) {\n        this.fit.domElement = elem;\n        this.fit.attached = false;\n      }\n      this.update();\n    }\n\n    return this;\n\n  },\n\n  /**\n   * @name Two#play\n   * @function\n   * @fires Two.Events.Types.play event\n   * @description Call to start an internal animation loop.\n   * @nota-bene This function initiates a `requestAnimationFrame` loop.\n   */\n  play: function() {\n\n    this.playing = true;\n    raf.init();\n    return this.trigger(Events.Types.play);\n\n  },\n\n  /**\n   * @name Two#pause\n   * @function\n   * @fires Two.Events.Types.pause event\n   * @description Call to stop the internal animation loop for a specific instance of Two.js.\n   */\n  pause: function() {\n\n    this.playing = false;\n    return this.trigger(Events.Types.pause);\n\n  },\n\n  setPlaying: function(p) {\n    this.playing = p;\n  },\n\n  /**\n   * @name Two#release\n   * @function\n   * @param {Object} obj\n   * @returns {Object} The object passed for event deallocation.\n   * @description Release an arbitrary class' events from the Two.js corpus and recurse through its children and or vertices.\n   */\n  release: function(obj) {\n\n    var i, v, child;\n\n    if (!_.isObject(obj)) {\n      return this.release(this.scene);\n    }\n\n    if (typeof obj.unbind === 'function') {\n      obj.unbind();\n    }\n\n    if (obj.vertices) {\n      if (typeof obj.vertices.unbind === 'function') {\n        obj.vertices.unbind();\n      }\n      for (i = 0; i < obj.vertices.length; i++) {\n        v = obj.vertices[i];\n        if (typeof v.unbind === 'function') {\n          v.unbind();\n        }\n        if (v.controls) {\n          if (v.controls.left && typeof v.controls.left.unbind === 'function') {\n            v.controls.left.unbind();\n          }\n          if (v.controls.right && typeof v.controls.right.unbind === 'function') {\n            v.controls.right.unbind();\n          }\n        }\n      }\n    }\n\n    if (obj.children) {\n      for (i = 0; i < obj.children.length; i++) {\n        child = obj.children[i];\n        this.release(child);\n      }\n      if (typeof obj.children.unbind === 'function') {\n        obj.children.unbind();\n      }\n    }\n\n    return obj;\n\n  },\n\n  /**\n   * @name Two#update\n   * @function\n   * @fires Two.Events.Types.update event\n   * @description Update positions and calculations in one pass before rendering. Then render to the canvas.\n   * @nota-bene This function is called automatically if using {@link Two#play} or the `autostart` parameter in construction.\n   */\n  update: function() {\n\n    var animated = !!this._lastFrame;\n    var now = _.performance.now();\n\n    if (animated) {\n      this.timeDelta = parseFloat((now - this._lastFrame).toFixed(3));\n    }\n    this._lastFrame = now;\n\n    if (this.fit && this.fit.domElement && !this.fit.attached) {\n        dom.bind(this.fit.domElement, 'resize', this.fit);\n        this.fit.attached = true;\n        this.fit();\n    }\n\n    var width = this.width;\n    var height = this.height;\n    var renderer = this.renderer;\n\n    // Update width / height for the renderer\n    if (width !== renderer.width || height !== renderer.height) {\n      renderer.setSize(width, height, this.ratio);\n    }\n\n    this.trigger(Events.Types.update, this.frameCount, this.timeDelta);\n\n    return this.render();\n\n  },\n\n  /**\n   * @name Two#render\n   * @function\n   * @fires render\n   * @description Render all drawable and visible objects of the scene.\n   */\n  render: function() {\n\n    this.renderer.render();\n    return this.trigger(Events.Types.render, this.frameCount++);\n\n  },\n\n  // Convenience Methods\n\n  /**\n   * @name Two#add\n   * @function\n   * @param {(Two.Shape[]|...Two.Shape)} [objects] - An array of Two.js objects. Alternatively can add objects as individual arguments.\n   * @description A shorthand method to add specific Two.js objects to the scene.\n   */\n  add: function(o) {\n\n    var objects = o;\n    if (!(objects instanceof Array)) {\n      objects = Array.prototype.slice.call(arguments);\n    }\n\n    this.scene.add(objects);\n    return this;\n\n  },\n\n  /**\n   * @name Two#remove\n   * @function\n   * @param {(Two.Shape[]|...Two.Shape)} [objects] - An array of Two.js objects.\n   * @description A shorthand method to remove specific Two.js objects from the scene.\n   */\n  remove: function(o) {\n\n    var objects = o;\n    if (!(objects instanceof Array)) {\n      objects = Array.prototype.slice.call(arguments);\n    }\n\n    this.scene.remove(objects);\n\n    return this;\n\n  },\n\n  /**\n   * @name Two#clear\n   * @function\n   * @description Removes all objects from the instance's scene. If you intend to have the browser garbage collect this, don't forget to delete the references in your application as well.\n   */\n  clear: function() {\n\n    this.scene.remove(this.scene.children);\n    return this;\n\n  },\n\n  /**\n   * @name Two#makeLine\n   * @function\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} x2\n   * @param {Number} y2\n   * @returns {Two.Line}\n   * @description Creates a Two.js line and adds it to the scene.\n   */\n  makeLine: function(x1, y1, x2, y2) {\n\n    var line = new Line(x1, y1, x2, y2);\n    this.scene.add(line);\n\n    return line;\n\n  },\n\n  /**\n   * @name Two#makeArrow\n   * @function\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} x2\n   * @param {Number} y2\n   * @returns {Two.Path}\n   * @description Creates a Two.js arrow and adds it to the scene.\n   */\n  makeArrow: function(x1, y1, x2, y2, size) {\n\n    var headlen = typeof size === 'number' ? size : 10;\n\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n\n    var vertices = [\n\n      new Anchor(x1, y1, undefined, undefined, undefined, undefined, Commands.move),\n      new Anchor(x2, y2, undefined, undefined, undefined, undefined, Commands.line),\n      new Anchor(\n        x2 - headlen * Math.cos(angle - Math.PI / 4),\n        y2 - headlen * Math.sin(angle - Math.PI / 4),\n        undefined, undefined, undefined, undefined, Commands.line\n      ),\n\n      new Anchor(x2, y2, undefined, undefined, undefined, undefined, Commands.move),\n      new Anchor(\n        x2 - headlen * Math.cos(angle + Math.PI / 4),\n        y2 - headlen * Math.sin(angle + Math.PI / 4),\n        undefined, undefined, undefined, undefined, Commands.line\n      )\n\n    ];\n\n    var path = new Path(vertices, false, false, true);\n    path.noFill();\n    path.cap = 'round';\n    path.join = 'round';\n\n    this.scene.add(path);\n\n    return path;\n  },\n\n  /**\n   * @name Two#makeRectangle\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} width\n   * @param {Number} height\n   * @returns {Two.Rectangle}\n   * @description Creates a Two.js rectangle and adds it to the scene.\n   */\n  makeRectangle: function(x, y, width, height) {\n\n    var rect = new Rectangle(x, y, width, height);\n    this.scene.add(rect);\n\n    return rect;\n\n  },\n\n  /**\n   * @name Two#makeRoundedRectangle\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} width\n   * @param {Number} height\n   * @param {Number} sides\n   * @returns {Two.Rectangle}\n   * @description Creates a Two.js rounded rectangle and adds it to the scene.\n   */\n  makeRoundedRectangle: function(x, y, width, height, sides) {\n\n    var rect = new RoundedRectangle(x, y, width, height, sides);\n    this.scene.add(rect);\n\n    return rect;\n\n  },\n\n  /**\n   * @name Two#makeCircle\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} [resolution=4]\n   * @returns {Two.Circle}\n   * @description Creates a Two.js circle and adds it to the scene.\n   */\n  makeCircle: function(x, y, radius, resolution) {\n\n    var circle = new Circle(x, y, radius, resolution);\n    this.scene.add(circle);\n\n    return circle;\n\n  },\n\n  /**\n   * @name Two#makeEllipse\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} rx\n   * @param {Number} ry\n   * @param {Number} [resolution=4]\n   * @returns {Two.Ellipse}\n   * @description Creates a Two.js ellipse and adds it to the scene.\n   */\n  makeEllipse: function(x, y, rx, ry, resolution) {\n\n    var ellipse = new Ellipse(x, y, rx, ry, resolution);\n    this.scene.add(ellipse);\n\n    return ellipse;\n\n  },\n\n  /**\n   * @name Two#makeStar\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} outerRadius\n   * @param {Number} innerRadius\n   * @param {Number} sides\n   * @returns {Two.Star}\n   * @description Creates a Two.js star and adds it to the scene.\n   */\n  makeStar: function(ox, oy, outerRadius, innerRadius, sides) {\n\n    var star = new Star(ox, oy, outerRadius, innerRadius, sides);\n    this.scene.add(star);\n\n    return star;\n\n  },\n\n  /**\n   * @name Two#makeCurve\n   * @function\n   * @param {Two.Anchor[]} [points] - An array of {@link Two.Anchor} points.\n   * @param {...Number} - Alternatively you can pass alternating `x` / `y` coordinate values as individual arguments. These will be combined into {@link Two.Anchor}s for use in the path.\n   * @returns {Two.Path} - Where `path.curved` is set to `true`.\n   * @description Creates a Two.js path that is curved and adds it to the scene.\n   * @nota-bene In either case of passing an array or passing numbered arguments the last argument is an optional `Boolean` that defines whether the path should be open or closed.\n   */\n  makeCurve: function(p) {\n\n    var l = arguments.length, points = p;\n    if (!Array.isArray(p)) {\n      points = [];\n      for (var i = 0; i < l; i+=2) {\n        var x = arguments[i];\n        if (typeof x !== 'number') {\n          break;\n        }\n        var y = arguments[i + 1];\n        points.push(new Anchor(x, y));\n      }\n    }\n\n    var last = arguments[l - 1];\n    var curve = new Path(points, !(typeof last === 'boolean' ? last : undefined), true);\n    var rect = curve.getBoundingClientRect();\n    curve.center().translation\n      .set(rect.left + rect.width / 2, rect.top + rect.height / 2);\n\n    this.scene.add(curve);\n\n    return curve;\n\n  },\n\n  /**\n   * @name Two#makePolygon\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} sides\n   * @returns {Two.Polygon}\n   * @description Creates a Two.js polygon and adds it to the scene.\n   */\n  makePolygon: function(x, y, radius, sides) {\n\n    var poly = new Polygon(x, y, radius, sides);\n    this.scene.add(poly);\n\n    return poly;\n\n  },\n\n  /**\n   * @name Two#makeArcSegment\n   * @function\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} innerRadius\n   * @param {Number} outerRadius\n   * @param {Number} startAngle\n   * @param {Number} endAngle\n   * @param {Number} [resolution=Two.Resolution] - The number of vertices that should comprise the arc segment.\n   * @returns {Two.ArcSegment}\n   */\n  makeArcSegment: function(ox, oy, ir, or, sa, ea, res) {\n    var arcSegment = new ArcSegment(ox, oy, ir, or, sa, ea, res);\n    this.scene.add(arcSegment);\n    return arcSegment;\n  },\n\n  /**\n   * @name Two#makePoints\n   * @function\n   * @param {Two.Vector[]} [points] - An array of {@link Two.Vector} points\n   * @param {...Number} - Alternatively you can pass alternating `x` / `y` coordinate values as individual agrguments. These will be combined into {@link Two.Vector}s for use in the points object.\n   * @returns {Two.Points}\n   * @description Creates a Two.js points object and adds it to the current scene.\n   */\n  makePoints: function(p) {\n\n    var l = arguments.length, vertices = p;\n    if (!Array.isArray(p)) {\n      vertices = [];\n      for (var i = 0; i < l; i+=2) {\n        var x = arguments[i];\n        if (typeof x !== 'number') {\n          break;\n        }\n        var y = arguments[i + 1];\n        vertices.push(new Vector(x, y));\n      }\n    }\n\n    var points = new Points(vertices);\n\n    this.scene.add(points);\n\n    return points;\n\n  },\n\n  /**\n   * @name Two#makePath\n   * @function\n   * @param {Two.Anchor[]} [points] - An array of {@link Two.Anchor} points\n   * @param {...Number} - Alternatively you can pass alternating `x` / `y` coordinate values as individual arguments. These will be combined into {@link Two.Anchor}s for use in the path.\n   * @returns {Two.Path}\n   * @description Creates a Two.js path and adds it to the scene.\n   * @nota-bene In either case of passing an array or passing numbered arguments the last argument is an optional `Boolean` that defines whether the path should be open or closed.\n   */\n  makePath: function(p) {\n\n    var l = arguments.length, points = p;\n    if (!Array.isArray(p)) {\n      points = [];\n      for (var i = 0; i < l; i+=2) {\n        var x = arguments[i];\n        if (typeof x !== 'number') {\n          break;\n        }\n        var y = arguments[i + 1];\n        points.push(new Anchor(x, y));\n      }\n    }\n\n    var last = arguments[l - 1];\n    var path = new Path(points, !(typeof last === 'boolean' ? last : undefined));\n    var rect = path.getBoundingClientRect();\n    if (typeof rect.top === 'number'   && typeof rect.left === 'number' &&\n        typeof rect.right === 'number' && typeof rect.bottom === 'number') {\n      path.center().translation\n        .set(rect.left + rect.width / 2, rect.top + rect.height / 2);\n    }\n\n    this.scene.add(path);\n\n    return path;\n\n  },\n\n  /**\n   * @name Two#makeText\n   * @function\n   * @param {String} message\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Object} [styles] - An object to describe any of the {@link Two.Text.Properties} including `fill`, `stroke`, `linewidth`, `family`, `alignment`, `leading`, `opacity`, etc..\n   * @returns {Two.Text}\n   * @description Creates a Two.js text object and adds it to the scene.\n   */\n  makeText: function(message, x, y, styles) {\n    var text = new Text(message, x, y, styles);\n    this.add(text);\n    return text;\n  },\n\n  /**\n   * @name Two#makeLinearGradient\n   * @function\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} x2\n   * @param {Number} y2\n   * @param {...Two.Stop} stops - Any number of color stops sometimes reffered to as ramp stops. If none are supplied then the default black-to-white two stop gradient is applied.\n   * @returns {Two.LinearGradient}\n   * @description Creates a Two.js linear gradient and ads it to the scene. In the case of an effect it's added to an invisible \"definitions\" group.\n   */\n  makeLinearGradient: function(x1, y1, x2, y2 /* stops */) {\n\n    var stops = Array.prototype.slice.call(arguments, 4);\n    var gradient = new LinearGradient(x1, y1, x2, y2, stops);\n\n    this.add(gradient);\n\n    return gradient;\n\n  },\n\n  /**\n   * @name Two#makeRadialGradient\n   * @function\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} radius\n   * @param {...Two.Stop} stops - Any number of color stops sometimes reffered to as ramp stops. If none are supplied then the default black-to-white two stop gradient is applied.\n   * @returns {Two.RadialGradient}\n   * @description Creates a Two.js linear-gradient object and ads it to the scene. In the case of an effect it's added to an invisible \"definitions\" group.\n   */\n  makeRadialGradient: function(x1, y1, r /* stops */) {\n\n    var stops = Array.prototype.slice.call(arguments, 3);\n    var gradient = new RadialGradient(x1, y1, r, stops);\n\n    this.add(gradient);\n\n    return gradient;\n\n  },\n\n  /**\n   * @name Two#makeSprite\n   * @function\n   * @param {(String|Two.Texture)} pathOrTexture - The URL path to an image or an already created {@link Two.Texture}.\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} [columns=1]\n   * @param {Number} [rows=1]\n   * @param {Number} [frameRate=0]\n   * @param {Boolean} [autostart=false]\n   * @returns {Two.Sprite}\n   * @description Creates a Two.js sprite object and adds it to the scene. Sprites can be used for still images as well as animations.\n   */\n  makeSprite: function(path, x, y, cols, rows, frameRate, autostart) {\n\n    var sprite = new Sprite(path, x, y, cols, rows, frameRate);\n    if (autostart) {\n      sprite.play();\n    }\n    this.add(sprite);\n\n    return sprite;\n\n  },\n\n  /**\n   * @name Two#makeImageSequence\n   * @function\n   * @param {(String[]|Two.Texture[])} pathsOrTextures - An array of paths or of {@link Two.Textures}.\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} [frameRate=0]\n   * @param {Boolean} [autostart=false]\n   * @returns {Two.ImageSequence}\n   * @description Creates a Two.js image sequence object and adds it to the scene.\n   */\n  makeImageSequence: function(paths, x, y, frameRate, autostart) {\n\n    var imageSequence = new ImageSequence(paths, x, y, frameRate);\n    if (autostart) {\n      imageSequence.play();\n    }\n    this.add(imageSequence);\n\n    return imageSequence;\n\n  },\n\n  /**\n   * @name Two#makeTexture\n   * @function\n   * @param {(String|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement)} [pathOrSource] - The URL path to an image or a DOM image-like element.\n   * @param {Function} [callback] - Function to be invoked when the image is loaded.\n   * @returns {Two.Texture}\n   * @description Creates a Two.js texture object.\n   */\n  makeTexture: function(path, callback) {\n\n    var texture = new Texture(path, callback);\n    return texture;\n\n  },\n\n  /**\n   * @name Two#makeGroup\n   * @function\n   * @param {(Two.Shape[]|...Two.Shape)} [objects] - Two.js objects to be added to the group in the form of an array or as individual arguments.\n   * @returns {Two.Group}\n   * @description Creates a Two.js group object and adds it to the scene.\n   */\n  makeGroup: function(o) {\n\n    var objects = o;\n    if (!(objects instanceof Array)) {\n      objects = Array.prototype.slice.call(arguments);\n    }\n\n    var group = new Group();\n    this.scene.add(group);\n    group.add(objects);\n\n    return group;\n\n  },\n\n  /**\n   * @name Two#interpret\n   * @function\n   * @param {SVGElement} SVGElement - The SVG node to be parsed.\n   * @param {Boolean} shallow - Don't create a top-most group but append all content directly.\n   * @param {Boolean} [add=true] – Automatically add the reconstructed SVG node to scene.\n   * @returns {Two.Group}\n   * @description Interpret an SVG Node and add it to this instance's scene. The distinction should be made that this doesn't `import` svg's, it solely interprets them into something compatible for Two.js - this is slightly different than a direct transcription.\n   */\n  interpret: function(SVGElement, shallow, add) {\n\n    var tag = SVGElement.tagName.toLowerCase();\n\n    add = (typeof add !== 'undefined') ? add : true;\n\n    if (!(tag in read)) {\n      return null;\n    }\n\n    var node = read[tag].call(this, SVGElement);\n\n    if (add) {\n      this.add(shallow && node instanceof Group ? node.children : node);\n    } else if (node.parent) {\n      // Remove `g` tags that have been added to scenegraph / DOM\n      // in order to be compatible with `getById` methods.\n      node.remove();\n    }\n\n    return node;\n\n  },\n\n  /**\n   * @name Two#load\n   * @function\n   * @param {String|SVGElement} pathOrSVGContent - The URL path of an SVG file or an SVG document as text.\n   * @param {Function} callback - Function to call once loading has completed.\n   * @returns {Two.Group}\n   * @description Load an SVG file or SVG text and interpret it into Two.js legible objects.\n   */\n  load: function(text, callback) {\n\n    var group = new Group();\n    var elem, i, child;\n\n    var attach = (function(data) {\n\n      dom.temp.innerHTML = data;\n\n      for (i = 0; i < dom.temp.children.length; i++) {\n        elem = dom.temp.children[i];\n        child = this.interpret(elem, false, false);\n        if (child !== null) {\n          group.add(child);\n        }\n      }\n\n      if (typeof callback === 'function') {\n        var svg = dom.temp.children.length <= 1\n          ? dom.temp.children[0] : dom.temp.children;\n        callback(group, svg);\n      }\n\n    }).bind(this);\n\n    if (/.*\\.svg/ig.test(text)) {\n\n      xhr(text, attach);\n\n      return group;\n\n    }\n\n    attach(text);\n\n    return group;\n\n  }\n\n});\n\nfunction fitToWindow() {\n\n  var wr = document.body.getBoundingClientRect();\n\n  var width = this.width = wr.width;\n  var height = this.height = wr.height;\n\n  this.renderer.setSize(width, height, this.ratio);\n\n}\n\nfunction fitToParent() {\n\n  var parent = this.renderer.domElement.parentElement;\n  if (!parent) {\n    console.warn('Two.js: Attempting to fit to parent, but no parent found.');\n    return;\n  }\n  var wr = parent.getBoundingClientRect();\n\n  var width = this.width = wr.width;\n  var height = this.height = wr.height;\n\n  this.renderer.setSize(width, height, this.ratio);\n\n}\n\nfunction updateDimensions(width, height) {\n  this.width = width;\n  this.height = height;\n  this.trigger(Events.Types.resize, width, height);\n}\n\n// Request Animation Frame\n\nvar raf = dom.getRequestAnimationFrame();\n\nfunction loop() {\n\n  for (var i = 0; i < Two.Instances.length; i++) {\n    var t = Two.Instances[i];\n    if (t.playing) {\n      t.update();\n    }\n  }\n\n  Two.nextFrameID = raf(loop);\n\n}\n\nraf.init = function() {\n  loop();\n  raf.init = function() {};\n};\n\n_.extend(Two, {\n  Anchor: Anchor,\n  Collection: Collection,\n  Events: Events,\n  Group: Group,\n  Matrix: Matrix,\n  Path: Path,\n  Registry: Registry,\n  Shape: Shape,\n  Text: Text,\n  Vector: Vector,\n\n  Gradient: Gradient,\n  ImageSequence: ImageSequence,\n  LinearGradient: LinearGradient,\n  RadialGradient: RadialGradient,\n  Sprite: Sprite,\n  Stop: Stop,\n  Texture: Texture,\n\n  ArcSegment: ArcSegment,\n  Circle: Circle,\n  Ellipse: Ellipse,\n  Line: Line,\n  Points: Points,\n  Polygon: Polygon,\n  Rectangle: Rectangle,\n  RoundedRectangle: RoundedRectangle,\n  Star: Star,\n\n  CanvasRenderer: Renderer$2,\n  SVGRenderer: Renderer$1,\n  WebGLRenderer: Renderer,\n\n  Commands: Commands,\n\n  /**\n   * @name Two.Utils\n   * @property {Object} - A massive object filled with utility functions and properties.\n   */\n  Utils: _.extend({\n\n    Error: TwoError,\n    getRatio: getRatio,\n    defineGetterSetter: defineGetterSetter,\n    read: read,\n    xhr: xhr\n\n  }, _, CanvasShim, Curves, math)\n\n});\n\nexport default Two;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/** @license React v16.14.0\n * react-dom-server.browser.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),l=require(\"react\");function q(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar t=\"function\"===typeof Symbol&&Symbol.for,aa=t?Symbol.for(\"react.portal\"):60106,u=t?Symbol.for(\"react.fragment\"):60107,ba=t?Symbol.for(\"react.strict_mode\"):60108,ca=t?Symbol.for(\"react.profiler\"):60114,v=t?Symbol.for(\"react.provider\"):60109,da=t?Symbol.for(\"react.context\"):60110,ea=t?Symbol.for(\"react.concurrent_mode\"):60111,fa=t?Symbol.for(\"react.forward_ref\"):60112,B=t?Symbol.for(\"react.suspense\"):60113,ha=t?Symbol.for(\"react.suspense_list\"):60120,ia=t?Symbol.for(\"react.memo\"):60115,ja=t?Symbol.for(\"react.lazy\"):\n60116,ka=t?Symbol.for(\"react.block\"):60121,la=t?Symbol.for(\"react.fundamental\"):60117,ma=t?Symbol.for(\"react.scope\"):60119;function na(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(c){0===a._status&&(c=c.default,a._status=1,a._result=c)},function(c){0===a._status&&(a._status=2,a._result=c)})}}\nfunction C(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case u:return\"Fragment\";case aa:return\"Portal\";case ca:return\"Profiler\";case ba:return\"StrictMode\";case B:return\"Suspense\";case ha:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case da:return\"Context.Consumer\";case v:return\"Context.Provider\";case fa:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");\ncase ia:return C(a.type);case ka:return C(a.render);case ja:if(a=1===a._status?a._result:null)return C(a)}return null}var D=l.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;D.hasOwnProperty(\"ReactCurrentDispatcher\")||(D.ReactCurrentDispatcher={current:null});D.hasOwnProperty(\"ReactCurrentBatchConfig\")||(D.ReactCurrentBatchConfig={suspense:null});var oa={};function E(a,b){for(var c=a._threadCount|0;c<=b;c++)a[c]=a._currentValue2,a._threadCount=c+1}\nfunction pa(a,b,c,d){if(d&&(d=a.contextType,\"object\"===typeof d&&null!==d))return E(d,c),d[c];if(a=a.contextTypes){c={};for(var f in a)c[f]=b[f];b=c}else b=oa;return b}for(var F=new Uint16Array(16),H=0;15>H;H++)F[H]=H+1;F[15]=0;\nvar qa=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ra=Object.prototype.hasOwnProperty,sa={},ta={};\nfunction ua(a){if(ra.call(ta,a))return!0;if(ra.call(sa,a))return!1;if(qa.test(a))return ta[a]=!0;sa[a]=!0;return!1}function va(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction wa(a,b,c,d){if(null===b||\"undefined\"===typeof b||va(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function J(a,b,c,d,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=f;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=g}var K={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){K[a]=new J(a,0,!1,a,null,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];K[b]=new J(b,1,!1,a[1],null,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){K[a]=new J(a,2,!1,a.toLowerCase(),null,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){K[a]=new J(a,2,!1,a,null,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){K[a]=new J(a,3,!1,a.toLowerCase(),null,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){K[a]=new J(a,3,!0,a,null,!1)});[\"capture\",\"download\"].forEach(function(a){K[a]=new J(a,4,!1,a,null,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){K[a]=new J(a,6,!1,a,null,!1)});[\"rowSpan\",\"start\"].forEach(function(a){K[a]=new J(a,5,!1,a.toLowerCase(),null,!1)});var L=/[\\-:]([a-z])/g;function M(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(L,\nM);K[b]=new J(b,1,!1,a,null,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(L,M);K[b]=new J(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(L,M);K[b]=new J(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){K[a]=new J(a,1,!1,a.toLowerCase(),null,!1)});\nK.xlinkHref=new J(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){K[a]=new J(a,1,!1,a.toLowerCase(),null,!0)});var xa=/[\"'&<>]/;\nfunction N(a){if(\"boolean\"===typeof a||\"number\"===typeof a)return\"\"+a;a=\"\"+a;var b=xa.exec(a);if(b){var c=\"\",d,f=0;for(d=b.index;d<a.length;d++){switch(a.charCodeAt(d)){case 34:b=\"&quot;\";break;case 38:b=\"&amp;\";break;case 39:b=\"&#x27;\";break;case 60:b=\"&lt;\";break;case 62:b=\"&gt;\";break;default:continue}f!==d&&(c+=a.substring(f,d));f=d+1;c+=b}a=f!==d?c+a.substring(f,d):c}return a}\nfunction ya(a,b){var c=K.hasOwnProperty(a)?K[a]:null;var d;if(d=\"style\"!==a)d=null!==c?0===c.type:!(2<a.length)||\"o\"!==a[0]&&\"O\"!==a[0]||\"n\"!==a[1]&&\"N\"!==a[1]?!1:!0;if(d||wa(a,b,c,!1))return\"\";if(null!==c){a=c.attributeName;d=c.type;if(3===d||4===d&&!0===b)return a+'=\"\"';c.sanitizeURL&&(b=\"\"+b);return a+'=\"'+(N(b)+'\"')}return ua(a)?a+'=\"'+(N(b)+'\"'):\"\"}function za(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}\nvar Aa=\"function\"===typeof Object.is?Object.is:za,O=null,P=null,Q=null,R=!1,S=!1,U=null,V=0;function W(){if(null===O)throw Error(q(321));return O}function Ba(){if(0<V)throw Error(q(312));return{memoizedState:null,queue:null,next:null}}function Ca(){null===Q?null===P?(R=!1,P=Q=Ba()):(R=!0,Q=P):null===Q.next?(R=!1,Q=Q.next=Ba()):(R=!0,Q=Q.next);return Q}function Da(a,b,c,d){for(;S;)S=!1,V+=1,Q=null,c=a(b,d);P=O=null;V=0;Q=U=null;return c}function Ea(a,b){return\"function\"===typeof b?b(a):b}\nfunction Fa(a,b,c){O=W();Q=Ca();if(R){var d=Q.queue;b=d.dispatch;if(null!==U&&(c=U.get(d),void 0!==c)){U.delete(d);d=Q.memoizedState;do d=a(d,c.action),c=c.next;while(null!==c);Q.memoizedState=d;return[d,b]}return[Q.memoizedState,b]}a=a===Ea?\"function\"===typeof b?b():b:void 0!==c?c(b):b;Q.memoizedState=a;a=Q.queue={last:null,dispatch:null};a=a.dispatch=Ga.bind(null,O,a);return[Q.memoizedState,a]}\nfunction Ga(a,b,c){if(!(25>V))throw Error(q(301));if(a===O)if(S=!0,a={action:c,next:null},null===U&&(U=new Map),c=U.get(b),void 0===c)U.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}}function Ha(){}\nvar X=0,Ia={readContext:function(a){var b=X;E(a,b);return a[b]},useContext:function(a){W();var b=X;E(a,b);return a[b]},useMemo:function(a,b){O=W();Q=Ca();b=void 0===b?null:b;if(null!==Q){var c=Q.memoizedState;if(null!==c&&null!==b){a:{var d=c[1];if(null===d)d=!1;else{for(var f=0;f<d.length&&f<b.length;f++)if(!Aa(b[f],d[f])){d=!1;break a}d=!0}}if(d)return c[0]}}a=a();Q.memoizedState=[a,b];return a},useReducer:Fa,useRef:function(a){O=W();Q=Ca();var b=Q.memoizedState;return null===b?(a={current:a},Q.memoizedState=\na):b},useState:function(a){return Fa(Ea,a)},useLayoutEffect:function(){},useCallback:function(a){return a},useImperativeHandle:Ha,useEffect:Ha,useDebugValue:Ha,useResponder:function(a,b){return{props:b,responder:a}},useDeferredValue:function(a){W();return a},useTransition:function(){W();return[function(a){a()},!1]}},Ja={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Ka(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nvar La={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},Ma=k({menuitem:!0},La),Y={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,\ngridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Na=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Y).forEach(function(a){Na.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Y[b]=Y[a]})});\nvar Oa=/([A-Z])/g,Pa=/^ms-/,Z=l.Children.toArray,Qa=D.ReactCurrentDispatcher,Ra={listing:!0,pre:!0,textarea:!0},Sa=/^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/,Ta={},Ua={};function Va(a){if(void 0===a||null===a)return a;var b=\"\";l.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}var Wa=Object.prototype.hasOwnProperty,Xa={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null,suppressHydrationWarning:null};function Ya(a,b){if(void 0===a)throw Error(q(152,C(b)||\"Component\"));}\nfunction Za(a,b,c){function d(d,g){var e=g.prototype&&g.prototype.isReactComponent,f=pa(g,b,c,e),x=[],h=!1,m={isMounted:function(){return!1},enqueueForceUpdate:function(){if(null===x)return null},enqueueReplaceState:function(a,c){h=!0;x=[c]},enqueueSetState:function(a,c){if(null===x)return null;x.push(c)}};if(e){if(e=new g(d.props,f,m),\"function\"===typeof g.getDerivedStateFromProps){var w=g.getDerivedStateFromProps.call(null,d.props,e.state);null!=w&&(e.state=k({},e.state,w))}}else if(O={},e=g(d.props,\nf,m),e=Da(g,d.props,e,f),null==e||null==e.render){a=e;Ya(a,g);return}e.props=d.props;e.context=f;e.updater=m;m=e.state;void 0===m&&(e.state=m=null);if(\"function\"===typeof e.UNSAFE_componentWillMount||\"function\"===typeof e.componentWillMount)if(\"function\"===typeof e.componentWillMount&&\"function\"!==typeof g.getDerivedStateFromProps&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof g.getDerivedStateFromProps&&e.UNSAFE_componentWillMount(),x.length){m=x;var r=\nh;x=null;h=!1;if(r&&1===m.length)e.state=m[0];else{w=r?m[0]:e.state;var y=!0;for(r=r?1:0;r<m.length;r++){var p=m[r];p=\"function\"===typeof p?p.call(e,w,d.props,f):p;null!=p&&(y?(y=!1,w=k({},w,p)):k(w,p))}e.state=w}}else x=null;a=e.render();Ya(a,g);if(\"function\"===typeof e.getChildContext&&(d=g.childContextTypes,\"object\"===typeof d)){var A=e.getChildContext();for(var T in A)if(!(T in d))throw Error(q(108,C(g)||\"Unknown\",T));}A&&(b=k({},b,A))}for(;l.isValidElement(a);){var f=a,g=f.type;if(\"function\"!==\ntypeof g)break;d(f,g)}return{child:a,context:b}}\nvar $a=function(){function a(a,b){l.isValidElement(a)?a.type!==u?a=[a]:(a=a.props.children,a=l.isValidElement(a)?[a]:Z(a)):a=Z(a);a={type:null,domNamespace:Ja.html,children:a,childIndex:0,context:oa,footer:\"\"};var c=F[0];if(0===c){var g=F;c=g.length;var d=2*c;if(!(65536>=d))throw Error(q(304));var h=new Uint16Array(d);h.set(g);F=h;F[0]=c+1;for(g=c;g<d-1;g++)F[g]=g+1;F[d-1]=0}else F[0]=F[c];this.threadID=c;this.stack=[a];this.exhausted=!1;this.currentSelectValue=null;this.previousWasTextNode=!1;this.makeStaticMarkup=\nb;this.suspenseDepth=0;this.contextIndex=-1;this.contextStack=[];this.contextValueStack=[]}var b=a.prototype;b.destroy=function(){if(!this.exhausted){this.exhausted=!0;this.clearProviders();var a=this.threadID;F[a]=F[0];F[0]=a}};b.pushProvider=function(a){var c=++this.contextIndex,b=a.type._context,g=this.threadID;E(b,g);var x=b[g];this.contextStack[c]=b;this.contextValueStack[c]=x;b[g]=a.props.value};b.popProvider=function(){var a=this.contextIndex,b=this.contextStack[a],f=this.contextValueStack[a];\nthis.contextStack[a]=null;this.contextValueStack[a]=null;this.contextIndex--;b[this.threadID]=f};b.clearProviders=function(){for(var a=this.contextIndex;0<=a;a--)this.contextStack[a][this.threadID]=this.contextValueStack[a]};b.read=function(a){if(this.exhausted)return null;var b=X;X=this.threadID;var c=Qa.current;Qa.current=Ia;try{for(var g=[\"\"],x=!1;g[0].length<a;){if(0===this.stack.length){this.exhausted=!0;var h=this.threadID;F[h]=F[0];F[0]=h;break}var e=this.stack[this.stack.length-1];if(x||e.childIndex>=\ne.children.length){var I=e.footer;\"\"!==I&&(this.previousWasTextNode=!1);this.stack.pop();if(\"select\"===e.type)this.currentSelectValue=null;else if(null!=e.type&&null!=e.type.type&&e.type.type.$$typeof===v)this.popProvider(e.type);else if(e.type===B){this.suspenseDepth--;var G=g.pop();if(x){x=!1;var n=e.fallbackFrame;if(!n)throw Error(q(303));this.stack.push(n);g[this.suspenseDepth]+=\"\\x3c!--$!--\\x3e\";continue}else g[this.suspenseDepth]+=G}g[this.suspenseDepth]+=I}else{var m=e.children[e.childIndex++],\nw=\"\";try{w+=this.render(m,e.context,e.domNamespace)}catch(r){if(null!=r&&\"function\"===typeof r.then)throw Error(q(294));throw r;}finally{}g.length<=this.suspenseDepth&&g.push(\"\");g[this.suspenseDepth]+=w}}return g[0]}finally{Qa.current=c,X=b}};b.render=function(a,b,f){if(\"string\"===typeof a||\"number\"===typeof a){f=\"\"+a;if(\"\"===f)return\"\";if(this.makeStaticMarkup)return N(f);if(this.previousWasTextNode)return\"\\x3c!-- --\\x3e\"+N(f);this.previousWasTextNode=!0;return N(f)}b=Za(a,b,this.threadID);a=b.child;\nb=b.context;if(null===a||!1===a)return\"\";if(!l.isValidElement(a)){if(null!=a&&null!=a.$$typeof){f=a.$$typeof;if(f===aa)throw Error(q(257));throw Error(q(258,f.toString()));}a=Z(a);this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:\"\"});return\"\"}var c=a.type;if(\"string\"===typeof c)return this.renderDOM(a,b,f);switch(c){case ba:case ea:case ca:case ha:case u:return a=Z(a.props.children),this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:\"\"}),\n\"\";case B:throw Error(q(294));}if(\"object\"===typeof c&&null!==c)switch(c.$$typeof){case fa:O={};var d=c.render(a.props,a.ref);d=Da(c.render,a.props,d,a.ref);d=Z(d);this.stack.push({type:null,domNamespace:f,children:d,childIndex:0,context:b,footer:\"\"});return\"\";case ia:return a=[l.createElement(c.type,k({ref:a.ref},a.props))],this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:\"\"}),\"\";case v:return c=Z(a.props.children),f={type:a,domNamespace:f,children:c,childIndex:0,\ncontext:b,footer:\"\"},this.pushProvider(a),this.stack.push(f),\"\";case da:c=a.type;d=a.props;var h=this.threadID;E(c,h);c=Z(d.children(c[h]));this.stack.push({type:a,domNamespace:f,children:c,childIndex:0,context:b,footer:\"\"});return\"\";case la:throw Error(q(338));case ja:switch(c=a.type,na(c),c._status){case 1:return a=[l.createElement(c._result,k({ref:a.ref},a.props))],this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:\"\"}),\"\";case 2:throw c._result;default:throw Error(q(295));\n}case ma:throw Error(q(343));}throw Error(q(130,null==c?c:typeof c,\"\"));};b.renderDOM=function(a,b,f){var c=a.type.toLowerCase();f===Ja.html&&Ka(c);if(!Ta.hasOwnProperty(c)){if(!Sa.test(c))throw Error(q(65,c));Ta[c]=!0}var d=a.props;if(\"input\"===c)d=k({type:void 0},d,{defaultChecked:void 0,defaultValue:void 0,value:null!=d.value?d.value:d.defaultValue,checked:null!=d.checked?d.checked:d.defaultChecked});else if(\"textarea\"===c){var h=d.value;if(null==h){h=d.defaultValue;var e=d.children;if(null!=e){if(null!=\nh)throw Error(q(92));if(Array.isArray(e)){if(!(1>=e.length))throw Error(q(93));e=e[0]}h=\"\"+e}null==h&&(h=\"\")}d=k({},d,{value:void 0,children:\"\"+h})}else if(\"select\"===c)this.currentSelectValue=null!=d.value?d.value:d.defaultValue,d=k({},d,{value:void 0});else if(\"option\"===c){e=this.currentSelectValue;var I=Va(d.children);if(null!=e){var G=null!=d.value?d.value+\"\":I;h=!1;if(Array.isArray(e))for(var n=0;n<e.length;n++){if(\"\"+e[n]===G){h=!0;break}}else h=\"\"+e===G;d=k({selected:void 0,children:void 0},\nd,{selected:h,children:I})}}if(h=d){if(Ma[c]&&(null!=h.children||null!=h.dangerouslySetInnerHTML))throw Error(q(137,c,\"\"));if(null!=h.dangerouslySetInnerHTML){if(null!=h.children)throw Error(q(60));if(!(\"object\"===typeof h.dangerouslySetInnerHTML&&\"__html\"in h.dangerouslySetInnerHTML))throw Error(q(61));}if(null!=h.style&&\"object\"!==typeof h.style)throw Error(q(62,\"\"));}h=d;e=this.makeStaticMarkup;I=1===this.stack.length;G=\"<\"+a.type;for(z in h)if(Wa.call(h,z)){var m=h[z];if(null!=m){if(\"style\"===\nz){n=void 0;var w=\"\",r=\"\";for(n in m)if(m.hasOwnProperty(n)){var y=0===n.indexOf(\"--\"),p=m[n];if(null!=p){if(y)var A=n;else if(A=n,Ua.hasOwnProperty(A))A=Ua[A];else{var T=A.replace(Oa,\"-$1\").toLowerCase().replace(Pa,\"-ms-\");A=Ua[A]=T}w+=r+A+\":\";r=n;y=null==p||\"boolean\"===typeof p||\"\"===p?\"\":y||\"number\"!==typeof p||0===p||Y.hasOwnProperty(r)&&Y[r]?(\"\"+p).trim():p+\"px\";w+=y;r=\";\"}}m=w||null}n=null;b:if(y=c,p=h,-1===y.indexOf(\"-\"))y=\"string\"===typeof p.is;else switch(y){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":y=\n!1;break b;default:y=!0}y?Xa.hasOwnProperty(z)||(n=z,n=ua(n)&&null!=m?n+'=\"'+(N(m)+'\"'):\"\"):n=ya(z,m);n&&(G+=\" \"+n)}}e||I&&(G+=' data-reactroot=\"\"');var z=G;h=\"\";La.hasOwnProperty(c)?z+=\"/>\":(z+=\">\",h=\"</\"+a.type+\">\");a:{e=d.dangerouslySetInnerHTML;if(null!=e){if(null!=e.__html){e=e.__html;break a}}else if(e=d.children,\"string\"===typeof e||\"number\"===typeof e){e=N(e);break a}e=null}null!=e?(d=[],Ra.hasOwnProperty(c)&&\"\\n\"===e.charAt(0)&&(z+=\"\\n\"),z+=e):d=Z(d.children);a=a.type;f=null==f||\"http://www.w3.org/1999/xhtml\"===\nf?Ka(a):\"http://www.w3.org/2000/svg\"===f&&\"foreignObject\"===a?\"http://www.w3.org/1999/xhtml\":f;this.stack.push({domNamespace:f,type:c,children:d,childIndex:0,context:b,footer:h});this.previousWasTextNode=!1;return z};return a}(),ab={renderToString:function(a){a=new $a(a,!1);try{return a.read(Infinity)}finally{a.destroy()}},renderToStaticMarkup:function(a){a=new $a(a,!0);try{return a.read(Infinity)}finally{a.destroy()}},renderToNodeStream:function(){throw Error(q(207));},renderToStaticNodeStream:function(){throw Error(q(208));\n},version:\"16.14.0\"};module.exports=ab.default||ab;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-dom-server.browser.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom-server.browser.development.js');\n}\n","var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n","import Two from \"two.js\";\nimport * as React from \"react\";\nimport * as ReactDOMServer from \"react-dom/server\";\nimport * as morphdom from \"morphdom\";\nlet morph = morphdom.default;\n\nfunction makeHopper(pos, size: number, id: string) {\n  let two = window.two;\n  let verts = [\n    new Two.Anchor(0, 0),\n    new Two.Anchor(size, 0),\n    new Two.Anchor(size, size),\n    new Two.Anchor(size / 2 + 15, size * 1.23),\n    new Two.Anchor(size / 2 - 15, size * 1.23),\n    new Two.Anchor(0, size),\n    new Two.Anchor(0, 0),\n  ];\n  let verts2 = [\n    new Two.Anchor(size, 0),\n\n    new Two.Anchor(size + 10, 0 + 10),\n    new Two.Anchor(size + 10, size + 10),\n    new Two.Anchor(size / 2 + 10, size * 1.25 + 10),\n    new Two.Anchor(10, size + 10),\n    new Two.Anchor(0, size),\n  ];\n  let body1 = two.makePath(verts, true);\n  let body2 = two.makePath(verts2, true);\n  // let line = two.makeLine(\n  //   size / 2,\n  //   size * 1.25,\n  //   size / 2 + 10,\n  //   size * 1.25 + 10\n  // );\n  let line2 = two.makeLine(size, size, size + 10, size + 10);\n\n  body1.fill = \"white\";\n  body2.fill = \"lavender\";\n\n  // body1.fill = \"transparent\";\n  // body2.fill = \"transparent\";\n  let groupBackground = two.makeGroup(body2);\n  let group = two.makeGroup(body1, line2);\n\n  two.update();\n\n  let r = 30;\n  let contentId = \"content\" + id;\n  const htmlStringBody = ReactDOMServer.renderToStaticMarkup(\n    <React.Fragment>\n      <foreignobject x=\"0\" y=\"0\" width={size} height={size * 1.25}>\n        <div id={contentId}>{/* <h1>{id}</h1> */}</div>\n      </foreignobject>\n    </React.Fragment>\n  );\n  const htmlStringSpinner = ReactDOMServer.renderToStaticMarkup(\n    <React.Fragment>\n      <svg\n        width={r * 2}\n        height={r * 2}\n        x={size / 2 - r}\n        y={size * 1.25 - r - 5}\n        viewBox={`${-r} ${-r} ${2 * r} ${2 * r}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      >\n        <circle\n          cx={r * 0.15}\n          cy={r * 0.15}\n          r={`${r * 0.8}`}\n          fill=\"lavender\"\n          stroke=\"black\"\n        />\n\n        <circle className=\"pinwheel\" cx=\"0\" cy=\"0\" r={`${r * 0.8}`} />\n        <line\n          className=\"pinwheel\"\n          x1={r * -0.8 * Math.SQRT1_2}\n          y1={r * -0.8 * Math.SQRT1_2}\n          x2={r * 0.8 * Math.SQRT1_2}\n          y2={r * 0.8 * Math.SQRT1_2}\n        ></line>\n        <line\n          className=\"pinwheel\"\n          x1={r * 0.8 * Math.SQRT1_2}\n          y1={r * -0.8 * Math.SQRT1_2}\n          x2={r * -0.8 * Math.SQRT1_2}\n          y2={r * 0.8 * Math.SQRT1_2}\n        ></line>\n        <line\n          className=\"pinwheel\"\n          x1={`${r * -0.8}`}\n          y1=\"0\"\n          x2={`${r * 0.8}`}\n          y2=\"0.0\"\n        ></line>\n        <line\n          className=\"pinwheel\"\n          x1=\"0\"\n          y1={`${r * -0.8}`}\n          x2=\"0\"\n          y2={`${r * 0.8}`}\n        ></line>\n      </svg>\n    </React.Fragment>\n  );\n\n  let svgElem = group._renderer.elem;\n  let svgElemBackground = groupBackground._renderer.elem;\n\n  svgElem.innerHTML += htmlStringBody;\n  svgElemBackground.innerHTML += htmlStringSpinner;\n\n  group.translation.set(pos.x - size / 2, pos.y - size / 2);\n  groupBackground.translation.set(pos.x - size / 2, pos.y - size / 2);\n  //   let htmlContent = document.getElementById(contentId);\n  return {\n    setText(word) {\n      let newHTML = `\n          \n          <div id=\"${contentId}\">\n           ${word}\n          </div>\n          `;\n      let htmlContent = document.getElementById(contentId);\n\n      //   console.log(word);\n\n      morph(htmlContent, newHTML);\n      //   htmlContent.innerHTML = word;\n    },\n  };\n}\n\nfunction makeBox(pos, size: number, id: string) {\n  let two = window.two;\n  let rect1 = two.makeRectangle(size / 2, size / 2, size, size);\n  let verts = [\n    new Two.Anchor(size, 0),\n    new Two.Anchor(size + 10, 10),\n    new Two.Anchor(size + 10, size + 10),\n    new Two.Anchor(10, size + 10),\n    new Two.Anchor(0, size),\n  ];\n  let path = two.makePath(verts, true);\n  let line = two.makeLine(size, size, size + 10, size + 10);\n\n  path.fill = \"lavender\";\n  rect1.fill = \"white\";\n  // rect1.fill = \"transparent\";\n  // path.fill = \"transparent\";\n  let group2 = two.makeGroup(path);\n\n  let group = two.makeGroup(rect1, line);\n  two.update();\n\n  let r = 25;\n  if (id == \"e\") {\n    r = 0;\n  }\n\n  let contentId = \"content\" + id;\n  const htmlString = ReactDOMServer.renderToStaticMarkup(\n    <React.Fragment>\n      <svg\n        width={r * 2}\n        height={r * 2}\n        x={size - r}\n        y={size / 2 - r}\n        viewBox={`${-r} ${-r} ${2 * r} ${2 * r}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      >\n        <circle\n          cx={r * 0.15}\n          cy={r * 0.15}\n          r={`${r * 0.8}`}\n          fill=\"lavender\"\n          stroke=\"black\"\n        />\n\n        <circle className=\"pinwheel\" cx=\"0\" cy=\"0\" r={`${r * 0.8}`} />\n        <line\n          className=\"pinwheel\"\n          x1={r * -0.8 * Math.SQRT1_2}\n          y1={r * -0.8 * Math.SQRT1_2}\n          x2={r * 0.8 * Math.SQRT1_2}\n          y2={r * 0.8 * Math.SQRT1_2}\n        ></line>\n        <line\n          className=\"pinwheel\"\n          x1={r * 0.8 * Math.SQRT1_2}\n          y1={r * -0.8 * Math.SQRT1_2}\n          x2={r * -0.8 * Math.SQRT1_2}\n          y2={r * 0.8 * Math.SQRT1_2}\n        ></line>\n        <line\n          className=\"pinwheel\"\n          x1={`${r * -0.8}`}\n          y1=\"0\"\n          x2={`${r * 0.8}`}\n          y2=\"0.0\"\n        ></line>\n        <line\n          className=\"pinwheel\"\n          x1=\"0\"\n          y1={`${r * -0.8}`}\n          x2=\"0\"\n          y2={`${r * 0.8}`}\n        ></line>\n      </svg>\n    </React.Fragment>\n  );\n  const htmlString2 = ReactDOMServer.renderToStaticMarkup(\n    <React.Fragment>\n      <svg\n        width={size}\n        height={size}\n        x={0}\n        y={0}\n        viewBox={`${-size} ${-size} ${size * 2} ${size * 2}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      >\n        {/* <rect\n          x={-25}\n          y={-25}\n          width=\"50\"\n          height=\"50\"\n          stroke=\"black\"\n          fill=\"lavender\"\n        ></rect>*/}\n        {/* <circle cx={-40} cy={0} r=\"30\" fill=\"red\"></circle> */}\n        {/* <circle cx={40} cy={0} r=\"30\" fill=\"limegreen\"></circle> */}\n        {/* <path d=\"M -10 5 l 10 10 l 14 -30\" fill=\"none\" stroke=\"black\" strokeWidth=\"3\"> */}\n        {/* </line> */}\n      </svg>\n\n      <foreignobject x=\"0\" y=\"0\" width={size} height={size}>\n        <div id={contentId}>{/* <h1>{id}</h1> */}</div>\n      </foreignobject>\n    </React.Fragment>\n  );\n  let svgElem = group._renderer.elem;\n  let svgElem2 = group2._renderer.elem;\n  // svgElem.innerHTML += htmlString;\n  svgElem.innerHTML += htmlString2;\n  svgElem2.innerHTML += htmlString;\n\n  group.translation.set(pos.x - size / 2, pos.y - size / 2);\n  group2.translation.set(pos.x - size / 2, pos.y - size / 2);\n  //   let htmlContent = document.getElementById(contentId);\n  return {\n    setText(word) {\n      let newHTML = `\n        \n        <div id=\"${contentId}\" class=\"boxText\">\n         ${word}\n        </div>\n        `;\n      let htmlContent = document.getElementById(contentId);\n\n      //   console.log(word);\n\n      morph(htmlContent, newHTML);\n      //   htmlContent.innerHTML = word;\n    },\n  };\n}\n\nfunction makePath(a, b) {\n  let mid = new Two.Vector(a.x, b.y);\n  two.makeLine(a.x, a.y, mid.x, mid.y);\n  two.makeLine(mid.x, mid.y, b.x, b.y);\n}\n\nfunction makeConnector(\n  p1,\n  p2,\n  id,\n  flip = false,\n  flourish = \"\",\n  proportional_space = false\n) {\n  let two = window.two;\n  // let path = makePath(p1, p2);\n\n  let group = two.makeGroup();\n  two.update();\n  let rx = 45;\n  let ry = 45;\n  let sweep = 0;\n  let rotate = 0;\n  if (p2.x < p1.x) {\n    rx *= -1;\n    sweep = 1 - sweep;\n    rotate = 180;\n  }\n  if (p2.y > p1.y) {\n    ry *= -1;\n    sweep = 1 - sweep;\n  }\n  // let length = Math.abs(p1.x - p2.x) + Math.abs(p1.y - p2.y);\n\n  let pM = new Two.Vector(p2.x, p1.y);\n  let xFirst = 1;\n  let yFirst = 0;\n  if (flip) {\n    pM = new Two.Vector(p1.x, p2.y);\n    rx *= -1;\n    ry *= -1;\n    xFirst = 0;\n    yFirst = 1;\n    sweep = 1 - sweep;\n  }\n\n  let flourishPath = \"\";\n  if (flourish == \"wiggle\") {\n    flourishPath = `\n    l 0 125\n              \n    a 25 25, 0, 0, 1, -25, 25\n    l -75 0\n    a 25 25, 0, 0, 0, -25, 25\n    l 0 0\n    a 25 25, 0, 0, 0, 25, 25\n    l 200 0\n    a 25 25, 0, 0, 1, 25, 25\n    l 0 0\n    a 25 25, 0, 0, 1, -25, 25\n    l -75 0\n    a 25 25, 0, 0, 0, -25, 25\n    `;\n  } else if (flourish == \"loop\") {\n    flourishPath = `\n    l 150 0\n    a 40 40, 0, 0, 0, 40, -40\n    a 40 40, 0, 0, 0, -40, -40\n    a 40 40, 0, 0, 0, -40, 40\n    a 40 40, 0, 0, 0, 40, 40\n    `;\n  }\n  console.log(id);\n  let className = id[0] == \"t\" ? \"tube trash\" : \"tube\";\n\n  let pathIds = Array.from(\n    { length: 10 },\n    (x, i) => \"textpath\" + id + i.toString()\n  );\n\n  let A = `A 45, 45, 0, 0, ${sweep}, ${pM.x - rx * yFirst} ${\n    pM.y - ry * xFirst\n  }`;\n  if (flourish != \"\") {\n    A = \"\";\n  }\n  const htmlString = ReactDOMServer.renderToStaticMarkup(\n    <React.Fragment>\n      <path\n        className={className}\n        id={id}\n        d={`M ${p1.x} ${p1.y}\n        ${flourishPath}\n        L  ${pM.x - rx * xFirst} ${pM.y - ry * yFirst}\n ${A}\n  L  ${p2.x} ${p2.y}\n  `}\n        fill=\"transparent\"\n      />\n\n      {pathIds.map((pid) => {\n        return (\n          <text width=\"100%\" rotate={rotate}>\n            <textPath\n              href={\"#\" + id}\n              startOffset=\"00px\"\n              id={pid}\n              className=\"pipetext\"\n              key={pid}\n              alignmentBaseline=\"middle\"\n            ></textPath>\n          </text>\n        );\n      })}\n    </React.Fragment>\n  );\n  let svgElem = group._renderer.elem;\n\n  svgElem.innerHTML += htmlString;\n\n  let path: SVGPathElement = document.getElementById(id);\n  let pathLength = path.getTotalLength();\n\n  let textPaths = pathIds.map((pid) => document.getElementById(pid));\n\n  let p_i = 0;\n  return {\n    sendWord(word: string, clear?: Function): Promise<unknown> {\n      var isSafari =\n        /Safari/.test(navigator.userAgent) &&\n        /Apple Computer/.test(navigator.vendor);\n\n      if (rotate > 0 && !isSafari) {\n        word = word.split(\"\").reverse().join(\"\");\n      }\n      let textPath = textPaths[p_i];\n\n      p_i = (p_i + 1) % textPaths.length;\n      textPath.textContent = word;\n\n      if (!textPath) {\n        throw new Error(\"no path\");\n      }\n      let cb = clear;\n      const animationProgress = new Promise((resolve, reject) => {\n        let space = proportional_space ? word.length * 12 : 80;\n\n        let offset = -space;\n\n        let updateOffset = () => {\n          if (!textPath) {\n            throw new Error(\"no path\");\n          }\n\n          if (cb && offset > space) {\n            cb();\n            cb = null;\n          }\n          offset += parseInt(document.getElementById(\"speed\").value, 10);\n          textPath.setAttribute(\"startOffset\", `${offset}px`);\n          if (offset < pathLength) {\n            window.requestAnimationFrame(updateOffset);\n          } else {\n            //   console.log(\"done :)\");\n            resolve();\n          }\n        };\n        updateOffset();\n      });\n\n      return animationProgress;\n    },\n  };\n}\nfunction makeGradient(x, y, size) {\n  let two = window.two;\n  var linearGradient = two.makeLinearGradient(\n    -size / 2,\n    0,\n    size / 2,\n    0,\n    new Two.Stop(0.5, \"rgba(255,255,255,255)\"),\n    new Two.Stop(1, \"rgba(255,255,255,0)\")\n\n    // new Two.Stop(0.5, \"blue\")\n    // new Two.Stop(1, )\n  );\n\n  var rectangle = two.makeRectangle(x, y, size, size);\n  //   var rectangle2 = two.makeRectangle(x, y, size, size);\n\n  rectangle.noStroke();\n\n  rectangle.fill = linearGradient;\n}\n\nfunction makeInfoBox(pos, size: number, id: string) {\n  let two = window.two;\n  let rect1 = two.makeRectangle(size / 2, size / 2.25, size, size);\n\n  rect1.stroke = \"rgba(0,0,0,0.0)\";\n  rect1.fill = \"white\";\n  rect1.fill = \"rgba(255,255,255,.6)\";\n\n  let group = two.makeGroup(rect1);\n  two.update();\n\n  let contentId = \"content\" + id;\n  const htmlString2 = ReactDOMServer.renderToStaticMarkup(\n    <React.Fragment>\n      <svg\n        width={size}\n        height={size}\n        x={0}\n        y={0}\n        viewBox={`${-size} ${-size} ${size * 2} ${size * 2}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      ></svg>\n\n      <foreignobject x=\"0\" y=\"0\" width={size} height={size}>\n        <div id={contentId}>{/* <h1>{id}</h1> */}</div>\n      </foreignobject>\n    </React.Fragment>\n  );\n  let svgElem = group._renderer.elem;\n  svgElem.innerHTML += htmlString2;\n\n  group.translation.set(pos.x - size / 2, pos.y - size / 2);\n  return {\n    setText(word) {\n      let newHTML = `\n        \n        <div id=\"${contentId}\" class=\"boxText infoBox\">\n         ${word}\n        </div>\n        `;\n      let htmlContent = document.getElementById(contentId);\n\n      morph(htmlContent, newHTML);\n    },\n  };\n}\n\nexport { makeConnector, makeBox, makeHopper, makeInfoBox, makeGradient };\n","/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n","import * as Matter from \"matter-js\";\n\n// module aliases\nlet Engine = Matter.Engine,\n  World = Matter.World,\n  Vector = Matter.Vector,\n  Bodies = Matter.Bodies;\n\n// create an engine\nlet engine = Engine.create({\n  positionIterations: 5,\n  constraintIterations: 5\n  //   enableSleeping: true\n});\n\nlet scratchSvg = document.getElementById(\"scratch\");\nconst textStyle = `font-size: 18px; alignment-baseline: middle; text-anchor: middle;`;\nfunction renderedTextSize(string: string) {\n  scratchSvg.innerHTML = `<text id=\"scratchText\" style=\"${textStyle}\">${string}</text>`;\n  let scratchText = document.getElementById(\"scratchText\");\n  var bBox = scratchText.getBBox();\n  return {\n    width: bBox.width,\n    height: bBox.height\n  };\n}\nfunction closestBody(bodies: [], point: Matter.Vector) {\n  if (bodies.length == 0) {\n    return;\n  }\n  let smallest_d = Infinity;\n  let smallest = bodies[0];\n  bodies.forEach(body => {\n    let corners = body.vertices;\n\n    corners.forEach(c => {\n      let d = Vector.magnitude(Vector.sub(c, point));\n      // console.log(body);\n      if (d < smallest_d && !body.pulse) {\n        smallest = body;\n        smallest_d = d;\n      }\n    });\n  });\n  if (smallest_d > 100) {\n    // return false;\n  }\n  return smallest;\n}\n\nfunction startPhysics(box) {\n  let boxes = [];\n\n  let ground = Bodies.rectangle(200, 350 * 1.25, 400, 6, { isStatic: true });\n  let leftWall = Bodies.rectangle(0, 200, 6, 400, { isStatic: true });\n  let rightWall = Bodies.rectangle(350, 200, 6, 400, { isStatic: true });\n  let leftRamp = Bodies.rectangle(50, 5 + 350 * 1.0625, 300, 20, {\n    isStatic: true,\n    angle: Math.PI * 0.15\n  });\n  let rightRamp = Bodies.rectangle(300, 5 + 350 * 1.0625, 300, 20, {\n    isStatic: true,\n    angle: Math.PI * 0.85\n  });\n\n  // add all of the bodies to the world\n  World.add(engine.world, [ground, leftWall, rightWall, leftRamp, rightRamp]);\n  //   World.add(engine.world, [ground, leftWall, rightWall]); //, leftRamp, rightRamp]);\n\n  // run the engine\n  Engine.run(engine);\n\n  let radToDeg = r => r * (180 / Math.PI);\n  Matter.Events.on(engine, \"afterUpdate\", () => {\n    const paths = boxes.map((body, index) => {\n      // const paths = engine.world.bodies.map((body, index) => {\n      const { vertices, position, angle } = body;\n      const pathData = `M ${body._width * -0.5} ${body._height * -0.5} l ${\n        body._width\n      } 0 l 0 ${body._height} l ${-body._width} 0 z`;\n\n      let fillColor = !body.pulse ? \"white\" : \"rgba(255,230,230)\";\n      const style = `fill: ${fillColor}; fill-opacity: 1; stroke: grey; stroke-width: 1px; stroke-opacity: 0.5`;\n      const degrees = radToDeg(angle);\n      const transform = `translate(${position.x}, ${position.y}) rotate(${degrees})`;\n      let path = null;\n      path = `<path d=\"${pathData}\" style=\"${style}\"></path>`;\n      return `\n      <g transform=\"${transform}\" >\n        ${path}\n        <text style=\"${textStyle}\">${body.label}</text>\n      </g>\n    `;\n    });\n    const style = ` shape-rendering: geometricPrecision;`;\n    box.setText(`\n    <svg style=\"${style}\">${paths}</svg>\n  `);\n  });\n  return {\n    setGravity: (n: number) => {\n      engine.world.gravity.y = n;\n    },\n    addWord: (data: string) => {\n      if (!data) return;\n      let word = data[0];\n      let { width, height } = renderedTextSize(word);\n      width += 10;\n      height += 5;\n      let body = Bodies.rectangle(\n        100 + Math.random() * 100,\n        -Math.random() * 200,\n        width,\n        height\n      );\n      body._width = width;\n      body._height = height;\n      // body.frictionAir = 0.01;\n      body.label = word;\n      body.torque = Math.random() - 0.5;\n      body.force = { x: 0.01, y: 0.0 };\n      body.data = data;\n      boxes.push(body);\n      World.add(engine.world, body);\n      return body;\n    },\n    removeWord: () => {\n      let box = closestBody(boxes, { x: 175, y: 350 * 1.25 });\n      if (!box) return;\n      //   box.isSleeping = false;\n      Matter.Body.setVelocity(box, { x: 0, y: -5 });\n      box.pulse = true;\n      //   console.log(\"a\");\n      window.setTimeout(() => {\n        // console.log(\"c\");\n        World.remove(engine.world, box);\n        boxes = boxes.filter(b => b != box);\n      }, 200);\n\n      return box.data;\n    }\n  };\n}\nexport { startPhysics };\n","function processLine(str) {\n  let toks = str.split(\"~\");\n  return toks;\n}\nfunction processArticle(str) {\n  let lines = str.split(\"\\n\");\n  let url = lines.shift();\n  //   console.log(lines);\n  let rest = lines.filter(l => !l.startsWith(\"Advertisement\")).map(processLine);\n  rest.url = url;\n\n  return rest;\n}\n\nfunction processTDV(str) {\n  let articles = str.split(\"ARTICLE:\");\n  return articles.map(processArticle);\n  //   console.log(articles);\n}\n\nexport { processTDV };\n","import {} from \"./state\";\nfunction remove_first_occurrence(str, searchstr) {\n  let index = str.indexOf(searchstr);\n  if (index === -1) {\n    return str;\n  }\n  return str.slice(0, index) + str.slice(index + searchstr.length);\n}\n\nfunction subtract(a, b) {\n  let letters = b.split(\"\");\n  let out = a;\n\n  letters.forEach(l => {\n    out = remove_first_occurrence(out, l);\n  });\n  return out;\n}\nexport { subtract };\n","import Two from \"two.js\";\nimport * as React from \"react\";\nimport * as ReactDOMServer from \"react-dom/server\";\nimport {\n  makeConnector,\n  makeBox,\n  makeInfoBox,\n  makeGradient,\n  makeHopper,\n} from \"./src/render\";\nimport { startPhysics } from \"./src/physics\";\nimport { processTDV } from \"./src/process\";\nimport { Vector } from \"matter-js\";\nimport { subtract } from \"./src/utils\";\n\nlet elem = document.getElementById(\"draw-animation\");\nlet width = window.innerWidth;\nlet height = window.innerHeight;\nwindow.width = width;\nwindow.height = height;\n\nlet two = new Two({ fullscreen: true, autostart: true }).appendTo(elem);\ntwo.renderer.domElement.setAttribute(\"viewBox\", \"-0 -0 1000 1050\");\n\nwindow.two = two;\n\nlet pHopper = new Two.Vector(200, 220);\nlet pClean = new Two.Vector(200, 30 + 750);\nlet pRule = new Two.Vector(500, 30 + 750);\n// let pCache = new Two.Vector(600, 750);\nlet pCheck = new Two.Vector(800, 30 + 750);\nlet pDestination = new Two.Vector(950, 350);\nlet pTrash = new Two.Vector(0, 30 + 870);\nlet pTrash2 = new Two.Vector(0, 30 + 905);\nlet pTrash3 = new Two.Vector(0, 30 + 940);\n// let pTrash4 = new Two.Vector(0,  975);\nlet pGradient = new Two.Vector(0, 30 + 905);\n\nlet c1 = makeConnector(\n  new Two.Vector(200, 420),\n  pClean,\n  \"1\",\n  true,\n  \"wiggle\",\n  true\n);\nlet c2 = makeConnector(pClean, pRule, \"2\", false, \"l\");\n// let c3 = makeConnector(pRule, pCache, \"3\", false, \"l\");\nlet c3 = makeConnector(pRule, pCheck, \"3\", false, \"loop\");\nlet c4 = makeConnector(pCheck, pDestination, \"4\");\n\nlet cTrash1 = makeConnector(pClean, pTrash, \"t1\", true);\nlet cTrash2 = makeConnector(pRule, pTrash2, \"t2\", true);\n// let cTrash3 = makeConnector(pCache, pTrash3, \"t3\", true);\nlet cTrash3 = makeConnector(pCheck, pTrash3, \"t4\", true);\nlet trashGradient = makeGradient(pGradient.x, pGradient.y, 200);\n// let c7 = makeConnector(pCheck, pTrash, \"5\", true);\n\nlet boxHopper = makeHopper(pHopper, 350, \"a\");\nlet boxClean = makeBox(pClean, 100, \"b\");\nboxClean.setText(\"Trim Punctuation\");\nlet boxRule = makeBox(pRule, 100, \"c\");\nboxRule.setText(\"Capitalized?\");\n\n// let boxCache = makeBox(pCache, 100, \"d\");\n// boxCache.setText(\"Not Seen by us?\");\n\nlet boxCheck = makeBox(pCheck, 100, \"d\");\nboxCheck.setText(\"Exists in NYT Archives?\");\n\nlet boxDestination = makeBox(new Two.Vector(900, 350), 150, \"f\");\n\nfunction formatWords(words: Array<string>) {\n  return `<p >${words.map((w) => `<span >${w}</span>&nbsp;`).join(\" \")}</p>`;\n}\n\nlet destinationWords: Array<string> = [\"Tweeted:\"];\nboxDestination.setText(formatWords(destinationWords));\n\nlet { addWord, removeWord, setGravity } = startPhysics(boxHopper);\n\nlet text1 = new Two.Text(\"\", 410, 110, {\n  size: 105,\n  weight: 100,\n  family: \"Libre Franklin\",\n  alignment: \"left\",\n});\n\nlet text2 = new Two.Text(`Loading...         `, 415, 190, {\n  size: 60,\n  weight: 100,\n  family: \"Libre Franklin\",\n  alignment: \"left\",\n});\nlet text3 = new Two.Text(``, 415, 240, {\n  size: 30,\n  weight: 100,\n  family: \"Libre Franklin\",\n  alignment: \"left\",\n});\n\nlet infoBox = makeInfoBox(new Two.Vector(615, 470), 410, \"info\");\ninfoBox.setText(`\n<p>This is a visualization of the process behind <a href=\"https://twitter.com/NYT_first_said\"> @nyt_first_said</a>.</p>\n\n<p>Each day, a script scrapes new articles from nytimes.com. That text is <i>tokenized</i>, or split into words based on whitespace and punctuation. </p>\n\n<p>Each word then must pass several criteria. Containing a number or special character is criteria for disqualification. To avoid proper nouns, all capitalized words are filtered.<p>\n\n<p> The most important check is against the New York Time's archive search service. The archive goes back to 1851 and contains more than 13 million articles. </p>\n\n<p>The paper publishes many thousands of words each day, but only a very few are firsts.<p> \n\n<a href=\"https://maxbittker.github.io/nyt-first-said/\"> more information</a>\n`);\n\nlet group = two.makeGroup(text1, text2, text3);\nlet group2 = two.makeGroup();\ntwo.update();\nlet svgElem = group2._renderer.elem;\nsvgElem.innerHTML += `<a id=\"article-link\"   >\n<text x=\"25\" y=\"35\">\n Loading...\n</text>\n</a>`;\n\nfunction updateArticleLink(url) {\n  let articleLink = document.getElementById(\"article-link\");\n  articleLink.remove();\n  svgElem.innerHTML += `<a id=\"article-link\" target=\"_blank\" href=\"${url}\">\n  <text x=\"25\" y=\"35\">\n   ${url}\n  </text>\n  </a>`;\n}\n\nfunction startUp(setback) {\n  let d = new Date();\n  var offset = new Date().getTimezoneOffset(); // getting offset to make time in gmt+0 zone (UTC) (for gmt+5 offset comes as -300 minutes)\n  d.setMinutes(d.getMinutes() + offset); // date now in UTC time\n  var easternTimeOffset = -240; //for dayLight saving, Eastern time become 4 hours behind UTC thats why its offset is -4x60 = -240 minutes. So when Day light is not active the offset will be -300\n  d.setMinutes(d.getMinutes() + easternTimeOffset + setback * 60);\n\n  const ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(d);\n  const mo = new Intl.DateTimeFormat(\"en\", { month: \"long\" }).format(d);\n  const da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(d);\n\n  let date = `${mo}-${da}-${ye}`;\n  text1.value = `${mo} ${da}`;\n\n  let wordList: string[] = [];\n  let articles: string[][] = [];\n  let article_i = 0;\n  let wordCount = 0;\n  let wordTotal = 0;\n  function moveWord(): Promise<any> {\n    text2.value = `article ${article_i + 1}/${article_i + 1 + articles.length}`;\n    text3.value = `word ${wordCount.toLocaleString()} / ${wordTotal.toLocaleString()}`;\n    two.update();\n    wordCount++;\n    if (wordList.length == 0) {\n      wordList = articles.shift();\n      updateArticleLink(wordList.url);\n      article_i++;\n      console.log(\"processing article \" + articles);\n    }\n    let word = wordList.shift();\n\n    addWord(word);\n\n    let [initial, cleaned, passed, count, api_checked] = removeWord();\n\n    // boxHopper.setText(formatWords(words));\n    let speed = parseInt(document.getElementById(\"speed\").value, 10);\n    return c1\n      .sendWord(initial, () =>\n        setTimeout(moveWord, (30 + word.length * 12) / speed)\n      )\n      .then(() => {\n        // moveWord();\n        if (initial.match(`[\\@\\/\\#\\_\\-]`)) {\n          cTrash1.sendWord(initial);\n          throw \"done\";\n        }\n        cTrash1.sendWord(subtract(initial, cleaned));\n        return c2.sendWord(cleaned);\n      })\n      .then(() => {\n        if (passed) {\n          return c3.sendWord(passed);\n        } else {\n          cTrash2.sendWord(cleaned);\n          throw \"done\";\n        }\n      })\n      .then(() => {\n        if (api_checked) {\n          return c4.sendWord(api_checked).then(() => {\n            destinationWords.push(api_checked);\n            boxDestination.setText(formatWords(destinationWords));\n          });\n        } else {\n          return cTrash3.sendWord(passed);\n        }\n      });\n  }\n\n  // debugger;\n\n  two.update();\n  let url = `https://api.shaderbooth.com:3002/static/records/${date}.txt`;\n  fetch(url)\n    .then((response) => response.text())\n    .then((blob) => {\n      if (blob.length == 0) {\n        startUp(-12);\n        return;\n      }\n      articles = processTDV(blob);\n      articles.shift();\n      articles = articles.reverse();\n      wordTotal = articles.reduce((acc, b) => b.length + acc, 0);\n\n      wordList = articles.shift();\n      updateArticleLink(wordList.url);\n      // articles = articles.sort((a, b) => a.length - b.length);\n      console.log(articles);\n\n      for (let i = 0; i < 25; i++) {\n        let word = wordList.shift();\n        addWord(word);\n      }\n\n      window.setTimeout(moveWord, 1400);\n    })\n    .catch((e) => {\n      startUp(-12);\n      return;\n    });\n\n  two.bind(\"update\", function () {}).play(); // Finally, start the animation loop\n}\nstartUp(0);\n\ndocument.getElementById(\"speed\").addEventListener(\"change\", (e) => {\n  let n = parseInt(e.target.value, 10);\n\n  console.log(n);\n  setGravity(1 + n / 20);\n\n  document.documentElement.style.setProperty(\n    \"--spin-duration\",\n    5000 / n + \"ms\"\n  );\n});\n"]}